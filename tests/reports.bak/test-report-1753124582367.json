{
  "timestamp": "2025-07-21T19:02:23.007Z",
  "environment": "development",
  "suites": {
    "unit_tests": {
      "name": "Unit Tests (Vitest)",
      "status": "failed",
      "error": "spawnSync /bin/sh ENOBUFS",
      "output": "\n> parker-flight@1.0.0 test\n> vitest run\n\n\n RUN  v3.2.4 /Users/parkerbarnett/github-link-up-buddy\n\n\n RUN  v3.2.4 /Users/parkerbarnett/github-link-up-buddy\n\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > getSecretValue > should successfully retrieve a secret value 5ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > getSecretValue > should handle binary secret values 0ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > getSecretValue > should handle undefined secret values 0ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > getSecretValue > should propagate errors from the error handler 27ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > getSecretValue > should use the correct environment from NODE_ENV 1ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > getSecretValue > should default to development environment when NODE_ENV is not set 0ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > Client Factory Integration > should create SecretsManagerClient with correct configuration 0ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > Error Scenarios > should handle client creation errors 0ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > Error Scenarios > should handle network timeouts 1ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > Error Scenarios > should handle authentication errors 1ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > Integration Patterns > should work with different secret naming conventions 0ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts > AWS Secrets Manager Integration > Integration Patterns > should work with different AWS regions 1ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.test.ts (12 tests) 40ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should successfully retrieve a secret value 28ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should handle binary secret values 37ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should handle undefined secret values 10ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should propagate errors from the error handler 11ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should work with different AWS regions 5ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should work with different secret naming conventions 5ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Error Scenarios > should handle client creation errors 7ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Error Scenarios > should handle network timeouts 3ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Error Scenarios > should handle authentication errors 4ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Environment Configuration > should use production environment when NODE_ENV is production 4ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Environment Configuration > should default to development environment when NODE_ENV is not set 3ms\n ✓ |aws| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts (11 tests) 119ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should return very low score for empty profile 4ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should calculate basic info score correctly 1ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should give higher score for complete profile 1ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should identify missing fields correctly 2ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should generate appropriate recommendations 9ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend phone verification when phone exists but not verified 1ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend passport update for expiring passport 1ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend identity verification when passport info is complete 1ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > getCompletionPercentage > should return the overall completion percentage 1ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > getNextAction > should return the highest priority recommendation 1ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > getNextAction > should return null for complete profile 0ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > meetsBookingRequirements > should return true for profile with required booking fields 1ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > meetsBookingRequirements > should return false and list missing requirements for incomplete profile 0ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate contact info score based on phone verification 0ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate travel documents score based on passport info 0ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate verification score based on identity verification 0ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate preferences score based on notification settings 0ms\n ✓ |integration| src/tests/services/profileCompletenessService.test.ts (17 tests) 28ms\n ✓ |integration| src/tests/services/carry-on-fee.client.test.ts > computeCarryOnFee: malformed travelerPricings handled (null) 5ms\n ✓ |integration| src/tests/services/carry-on-fee.client.test.ts > computeCarryOnFee: empty travelerPricings array 2ms\n ✓ |integration| src/tests/services/carry-on-fee.client.test.ts > computeCarryOnFee: CARRY ON service found with amount 1ms\n ✓ |integration| src/tests/services/carry-on-fee.client.test.ts (3 tests) 10ms\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should initialize successfully with valid configuration\nLaunchDarkly client initialized successfully in 0.2990469999999732ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should initialize successfully with valid configuration\nLaunchDarkly client initialized successfully in 0.2990469999999732ms\n\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should generate text field schema 7ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should generate email field schema 2ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should generate number field schema 3ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should generate checkbox field schema 1ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should generate select field schema 2ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should generate date field schema 1ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should generate airport autocomplete schema 2ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should handle optional fields 2ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should return null for non-input field types 1ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateFieldSchema > should handle custom validation rules 1ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateZodSchema > should generate schema for form configuration 1ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > generateZodSchema > should handle multiple sections 1ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > validateFieldValue > should validate individual field values 1ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > validateFieldValue > should handle validation errors gracefully 0ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > validateFormValues > should validate complete form data 2ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > getDefaultValues > should extract default values from configuration 1ms\n ✓ |unit| src/lib/form-validation.test.ts > Form Validation > getDefaultValues > should provide type-appropriate defaults 1ms\n ✓ |unit| src/lib/form-validation.test.ts (17 tests) 31ms\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts > useFlightOffers Hook > should return initial state and featureEnabled: false if feature flag is off 19ms\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts > useFlightOffers Hook > should set error if tripRequestId is invalid and feature is enabled 4ms\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts > useFlightOffers Hook > should not fetch if opts.enabled is false, even if feature is enabled 4ms\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts > useFlightOffers Hook > should fetch and map offers successfully when feature is enabled and hook is enabled 61ms\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts > useFlightOffers Hook > should handle errors from getFlightOffers server action 54ms\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display FlagDisabledPlaceholder when feature is not enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display FlagDisabledPlaceholder when feature is not enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display loading skeleton when isLoading is true and feature is enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mtrue\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display loading skeleton when isLoading is true and feature is enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mtrue\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts > useFlightOffers Hook > should handle AbortController signal on unmount 103ms\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss)\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss)\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: test-trip-id-123. Invoking flight-search-v2...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: test-trip-id-123. Invoking flight-search-v2...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Response from 'flight-search-v2' for tripRequestId test-trip-id-123: { inserted: \u001b[33m1\u001b[39m, message: \u001b[32m'Refreshed'\u001b[39m }\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Response from 'flight-search-v2' for tripRequestId test-trip-id-123: { inserted: \u001b[33m1\u001b[39m, message: \u001b[32m'Refreshed'\u001b[39m }\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts > useFlightOffers Hook > refetch function should trigger a new fetch 107ms\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display error message and retry button when error occurs and feature is enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[32m'Failed to fetch offers'\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display error message and retry button when error occurs and feature is enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[32m'Failed to fetch offers'\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display FlagDisabledPlaceholder when feature is not enabled 129ms\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display loading skeleton when isLoading is true and feature is enabled 6ms\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts > useFlightOffers Hook > should return new data if tripRequestId changes 109ms\n ✓ |unit| src/flightSearchV2/useFlightOffers.test.ts (8 tests) 463ms\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display \"No Offers Found Yet\" empty state card when no offers and not loading/error, and feature is enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display \"No Offers Found Yet\" empty state card when no offers and not loading/error, and feature is enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers maps correctly\nSuccessfully transformed 1 offers\n\nstdout | src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers maps correctly\nSuccessfully transformed 1 offers\n\nstdout | src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers handles empty data\nNo offers data to transform\nNo offers data to transform\n\nstdout | src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers handles empty data\nNo offers data to transform\nNo offers data to transform\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should throw error if flight-search-v2 invocation fails during refresh\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should throw error if flight-search-v2 invocation fails during refresh\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should throw error if flight-search-v2 invocation fails during refresh\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: test-trip-id-123. Invoking flight-search-v2...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should throw error if flight-search-v2 invocation fails during refresh\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: test-trip-id-123. Invoking flight-search-v2...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: test-trip-id-123. Invoking flight-search-v2...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: test-trip-id-123. Invoking flight-search-v2...\n\nstdout | src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers handles malformed data gracefully\nSuccessfully transformed 0 offers\n\nstdout | src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers handles malformed data gracefully\nSuccessfully transformed 0 offers\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Response from 'flight-search-v2' for tripRequestId test-trip-id-123: { inserted: \u001b[33m0\u001b[39m, message: \u001b[32m'No new offers'\u001b[39m }\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Response from 'flight-search-v2' for tripRequestId test-trip-id-123: { inserted: \u001b[33m0\u001b[39m, message: \u001b[32m'No new offers'\u001b[39m }\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-456. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-456. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Cache cleared.\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Cache cleared.\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch)\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch flight offers successfully from the table (cache miss) 9ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should throw an error if fetching from table fails 20ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use cached data for subsequent calls within cache duration 4ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fetch new data from table if cache is expired 5ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should invoke flight-search-v2, invalidate cache, then fetch from table 3ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > should throw error if flight-search-v2 invocation fails during refresh 44ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > with refresh = true > refresh=true should still fetch from table if flight-search-v2 succeeds but finds no new offers (e.g. inserted: 0) 5ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should use different cache entries for different tripRequestIds (table fetch) 4ms\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] Cache cleared.\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: test-trip-id-123. Fetching from flight_offers_v2 table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] Round-trip search detected, filtering out one-way flights\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] Transformed 1 legacy offers to V2 format\n\nstdout | src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty\n[ServerAction/getFlightOffers] Transformed 1 legacy offers to V2 format\n\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > clearGetFlightOffersCache should clear the cache (table fetch) 6ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts > getFlightOffers server action > should fallback to legacy flight_offers table when V2 table is empty 9ms\n ✓ |unit| src/serverActions/getFlightOffers.test.ts (10 tests) 113ms\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display flight offers cards when offers are available and feature is enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m2\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-1'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'JFK'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-2'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'MANUAL'\u001b[39m,\n      priceTotal: \u001b[33m299.5\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m0\u001b[39m,\n      bagsIncluded: \u001b[33mfalse\u001b[39m,\n      cabinClass: \u001b[32m'BUSINESS'\u001b[39m,\n      nonstop: \u001b[33mfalse\u001b[39m,\n      originIata: \u001b[32m'SFO'\u001b[39m,\n      destinationIata: \u001b[32m'MIA'\u001b[39m,\n      departDt: \u001b[32m'2024-12-05T12:30:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-10T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[1mnull\u001b[22m,\n      createdAt: \u001b[32m'2024-07-02T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display flight offers cards when offers are available and feature is enabled\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m2\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-1'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'JFK'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-2'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'MANUAL'\u001b[39m,\n      priceTotal: \u001b[33m299.5\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m0\u001b[39m,\n      bagsIncluded: \u001b[33mfalse\u001b[39m,\n      cabinClass: \u001b[32m'BUSINESS'\u001b[39m,\n      nonstop: \u001b[33mfalse\u001b[39m,\n      originIata: \u001b[32m'SFO'\u001b[39m,\n      destinationIata: \u001b[32m'MIA'\u001b[39m,\n      departDt: \u001b[32m'2024-12-05T12:30:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-10T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[1mnull\u001b[22m,\n      createdAt: \u001b[32m'2024-07-02T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display error message and retry button when error occurs and feature is enabled 169ms\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display \"No Offers Found Yet\" empty state card when no offers and not loading/error, and feature is enabled 9ms\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should format currency correctly (e.g., EUR)\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m1\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-1'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m150\u001b[39m,\n      priceCurrency: \u001b[32m'EUR'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'JFK'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should format currency correctly (e.g., EUR)\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m1\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-1'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m150\u001b[39m,\n      priceCurrency: \u001b[32m'EUR'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'JFK'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\n ✓ |unit| src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers maps correctly 6ms\n ✓ |unit| src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers handles empty data 1ms\n ✓ |unit| src/services/flightApi.test.ts > flightApi > transformAmadeusToOffers handles malformed data gracefully 26ms\n ✓ |unit| src/services/flightApi.test.ts > OAuth Token Management > First call fetches a new token 5ms\n ✓ |unit| src/services/flightApi.test.ts > OAuth Token Management > Second call within expiry returns cached token 2ms\n ✓ |unit| src/services/flightApi.test.ts > OAuth Token Management > Call after token expiry fetches a new token 2ms\n ✓ |unit| src/services/flightApi.test.ts > Retry Logic > Should succeed after retrying on 429 errors 21ms\n ✓ |unit| src/services/flightApi.test.ts > Retry Logic > Should retry on network errors 12ms\n ✓ |unit| src/services/flightApi.test.ts > Retry Logic > Should retry on 500 errors 12ms\n ✓ |unit| src/services/flightApi.test.ts > Retry Logic > Should fail after max attempts 23ms\n ✓ |unit| src/services/flightApi.test.ts > Retry Logic > Should not retry on non-retryable errors 1ms\n ✓ |unit| src/services/flightApi.test.ts (11 tests) 116ms\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should format dates correctly, including return date if present, and handle invalid dates gracefully\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m3\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-valid-no-return'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'DT1'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-valid-with-return'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'MANUAL'\u001b[39m,\n      priceTotal: \u001b[33m299.5\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m0\u001b[39m,\n      bagsIncluded: \u001b[33mfalse\u001b[39m,\n      cabinClass: \u001b[32m'BUSINESS'\u001b[39m,\n      nonstop: \u001b[33mfalse\u001b[39m,\n      originIata: \u001b[32m'DT2'\u001b[39m,\n      destinationIata: \u001b[32m'MIA'\u001b[39m,\n      departDt: \u001b[32m'2024-12-05T12:30:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-10T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[1mnull\u001b[22m,\n      createdAt: \u001b[32m'2024-07-02T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-invalid-date'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'INV'\u001b[39m,\n      destinationIata: \u001b[32m'LID'\u001b[39m,\n      departDt: \u001b[32m'invalid-date-string'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-05T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should format dates correctly, including return date if present, and handle invalid dates gracefully\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m3\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-valid-no-return'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'DT1'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-valid-with-return'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'MANUAL'\u001b[39m,\n      priceTotal: \u001b[33m299.5\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m0\u001b[39m,\n      bagsIncluded: \u001b[33mfalse\u001b[39m,\n      cabinClass: \u001b[32m'BUSINESS'\u001b[39m,\n      nonstop: \u001b[33mfalse\u001b[39m,\n      originIata: \u001b[32m'DT2'\u001b[39m,\n      destinationIata: \u001b[32m'MIA'\u001b[39m,\n      departDt: \u001b[32m'2024-12-05T12:30:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-10T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[1mnull\u001b[22m,\n      createdAt: \u001b[32m'2024-07-02T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-invalid-date'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'INV'\u001b[39m,\n      destinationIata: \u001b[32m'LID'\u001b[39m,\n      departDt: \u001b[32m'invalid-date-string'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-05T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should call refetch when the main \"Refresh Offers\" button (data state) is clicked\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m2\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-1'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'JFK'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-2'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'MANUAL'\u001b[39m,\n      priceTotal: \u001b[33m299.5\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m0\u001b[39m,\n      bagsIncluded: \u001b[33mfalse\u001b[39m,\n      cabinClass: \u001b[32m'BUSINESS'\u001b[39m,\n      nonstop: \u001b[33mfalse\u001b[39m,\n      originIata: \u001b[32m'SFO'\u001b[39m,\n      destinationIata: \u001b[32m'MIA'\u001b[39m,\n      departDt: \u001b[32m'2024-12-05T12:30:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-10T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[1mnull\u001b[22m,\n      createdAt: \u001b[32m'2024-07-02T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should call refetch when the main \"Refresh Offers\" button (data state) is clicked\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m2\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-1'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'JFK'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-2'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'MANUAL'\u001b[39m,\n      priceTotal: \u001b[33m299.5\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m0\u001b[39m,\n      bagsIncluded: \u001b[33mfalse\u001b[39m,\n      cabinClass: \u001b[32m'BUSINESS'\u001b[39m,\n      nonstop: \u001b[33mfalse\u001b[39m,\n      originIata: \u001b[32m'SFO'\u001b[39m,\n      destinationIata: \u001b[32m'MIA'\u001b[39m,\n      departDt: \u001b[32m'2024-12-05T12:30:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-10T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[1mnull\u001b[22m,\n      createdAt: \u001b[32m'2024-07-02T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should display flight offers cards when offers are available and feature is enabled 96ms\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should format currency correctly (e.g., EUR) 7ms\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should format dates correctly, including return date if present, and handle invalid dates gracefully 71ms\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should call refetch when \"Refresh Offers\" button (empty state) is clicked\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should call refetch when \"Refresh Offers\" button (empty state) is clicked\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should show loading skeleton, then data (simulating data fetch lifecycle)\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mtrue\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m2\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-1'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'JFK'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-2'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'MANUAL'\u001b[39m,\n      priceTotal: \u001b[33m299.5\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m0\u001b[39m,\n      bagsIncluded: \u001b[33mfalse\u001b[39m,\n      cabinClass: \u001b[32m'BUSINESS'\u001b[39m,\n      nonstop: \u001b[33mfalse\u001b[39m,\n      originIata: \u001b[32m'SFO'\u001b[39m,\n      destinationIata: \u001b[32m'MIA'\u001b[39m,\n      departDt: \u001b[32m'2024-12-05T12:30:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-10T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[1mnull\u001b[22m,\n      createdAt: \u001b[32m'2024-07-02T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should show loading skeleton, then data (simulating data fetch lifecycle)\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mtrue\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m2\u001b[39m,\n  offersData: [\n    {\n      id: \u001b[32m'offer-1'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'AUTO'\u001b[39m,\n      priceTotal: \u001b[33m199.99\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m25\u001b[39m,\n      bagsIncluded: \u001b[33mtrue\u001b[39m,\n      cabinClass: \u001b[32m'ECONOMY'\u001b[39m,\n      nonstop: \u001b[33mtrue\u001b[39m,\n      originIata: \u001b[32m'JFK'\u001b[39m,\n      destinationIata: \u001b[32m'LAX'\u001b[39m,\n      departDt: \u001b[32m'2024-12-01T10:00:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-03T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[32m'AISLE'\u001b[39m,\n      createdAt: \u001b[32m'2024-07-01T00:00:00Z'\u001b[39m\n    },\n    {\n      id: \u001b[32m'offer-2'\u001b[39m,\n      tripRequestId: \u001b[32m'trip-1'\u001b[39m,\n      mode: \u001b[32m'MANUAL'\u001b[39m,\n      priceTotal: \u001b[33m299.5\u001b[39m,\n      priceCurrency: \u001b[32m'USD'\u001b[39m,\n      priceCarryOn: \u001b[33m0\u001b[39m,\n      bagsIncluded: \u001b[33mfalse\u001b[39m,\n      cabinClass: \u001b[32m'BUSINESS'\u001b[39m,\n      nonstop: \u001b[33mfalse\u001b[39m,\n      originIata: \u001b[32m'SFO'\u001b[39m,\n      destinationIata: \u001b[32m'MIA'\u001b[39m,\n      departDt: \u001b[32m'2024-12-05T12:30:00Z'\u001b[39m,\n      returnDt: \u001b[32m'2024-12-10T15:00:00Z'\u001b[39m,\n      seatPref: \u001b[1mnull\u001b[22m,\n      createdAt: \u001b[32m'2024-07-02T00:00:00Z'\u001b[39m\n    }\n  ],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should show loading skeleton, then empty state (simulating empty data fetch lifecycle)\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mtrue\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should show loading skeleton, then empty state (simulating empty data fetch lifecycle)\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mtrue\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n[TripOffersV2] Debug info: {\n  tripId: \u001b[32m'test-trip-id'\u001b[39m,\n  offers: \u001b[33m0\u001b[39m,\n  offersData: [],\n  isLoading: \u001b[33mfalse\u001b[39m,\n  error: \u001b[90mundefined\u001b[39m,\n  isFeatureEnabled: \u001b[33mtrue\u001b[39m\n}\n\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should call refetch when the main \"Refresh Offers\" button (data state) is clicked 114ms\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should call refetch when \"Refresh Offers\" button (empty state) is clicked 18ms\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should show loading skeleton, then data (simulating data fetch lifecycle) 67ms\n ✓ |unit| src/pages/TripOffersV2.test.tsx > TripOffersV2 Component > should show loading skeleton, then empty state (simulating empty data fetch lifecycle) 15ms\n ✓ |unit| src/pages/TripOffersV2.test.tsx (11 tests) 702ms\nstdout | src/tests/integration/database.test.ts > Database Integration Tests\nStarting PostgreSQL container...\n\nstdout | src/tests/integration/database.test.ts > Database Integration Tests\nStarting PostgreSQL container...\n\n ↓ |integration| src/tests/integration/database.test.ts > Database Integration Tests > should connect to PostgreSQL container\n ↓ |integration| src/tests/integration/database.test.ts > Database Integration Tests > should perform database operations\n ↓ |integration| src/tests/integration/database.test.ts > Database Integration Tests > should handle test isolation\n ❯ |integration| src/tests/integration/database.test.ts (3 tests | 3 skipped) 69ms\n   ↓ Database Integration Tests > should connect to PostgreSQL container\n   ↓ Database Integration Tests > should perform database operations\n   ↓ Database Integration Tests > should handle test isolation\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should pass validation with proper test environment\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should pass validation with proper test environment\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should fail validation without required tokens\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should fail validation without required tokens\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should validate token formats\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should validate token formats\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should warn about live mode configuration issues\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should warn about live mode configuration issues\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should initialize in TEST mode by default\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should initialize in TEST mode by default\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should initialize in LIVE mode when enabled\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should initialize in LIVE mode when enabled\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should initialize in LIVE mode when enabled\n[DuffelService] Initialized in LIVE mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should initialize in LIVE mode when enabled\n[DuffelService] Initialized in LIVE mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should throw error without required tokens\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should throw error without required tokens\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create offer request with proper parameters\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create offer request with proper parameters\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create offer request with proper parameters\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create offer request with proper parameters\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create offer request with proper parameters\n[DuffelService] Offer request created: orq_test123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create offer request with proper parameters\n[DuffelService] Offer request created: orq_test123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create round-trip offer request\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create round-trip offer request\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create round-trip offer request\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    },\n    {\n      \"origin\": \"LAX\",\n      \"destination\": \"NYC\",\n      \"departure_date\": \"2024-07-08\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create round-trip offer request\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    },\n    {\n      \"origin\": \"LAX\",\n      \"destination\": \"NYC\",\n      \"departure_date\": \"2024-07-08\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create round-trip offer request\n[DuffelService] Offer request created: orq_test123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create round-trip offer request\n[DuffelService] Offer request created: orq_test123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should get offers and filter expired ones\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should get offers and filter expired ones\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should get offers and filter expired ones\n[DuffelService] Retrieving offers for request: orq_test123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should get offers and filter expired ones\n[DuffelService] Retrieving offers for request: orq_test123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should get offers and filter expired ones\n[DuffelService] Retrieved 1/2 valid offers\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should get offers and filter expired ones\n[DuffelService] Retrieved 1/2 valid offers\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should validate individual offers\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should validate individual offers\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should return null for expired offers\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should return null for expired offers\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offer Validation > should validate offer expiration with safety buffer\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offer Validation > should validate offer expiration with safety buffer\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offer Validation > should reject offers within safety buffer\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offer Validation > should reject offers within safety buffer\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should create order with idempotency\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should create order with idempotency\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should create order with idempotency\n[DuffelService] Creating order with idempotency key: test-key-123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should create order with idempotency\n[DuffelService] Creating order with idempotency key: test-key-123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should create order with idempotency\n[DuffelService] Order created: ord_test123, Status: ABC123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should create order with idempotency\n[DuffelService] Order created: ord_test123, Status: ABC123\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should reject expired offers before booking\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should reject expired offers before booking\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should map Duffel API errors to user-friendly messages\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should map Duffel API errors to user-friendly messages\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should map Duffel API errors to user-friendly messages\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should map Duffel API errors to user-friendly messages\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should pass validation with proper test environment 6ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should fail validation without required tokens 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should validate token formats 6ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Environment Validation > should warn about live mode configuration issues 2ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should initialize in TEST mode by default 2ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should initialize in LIVE mode when enabled 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Service Initialization > should throw error without required tokens 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create offer request with proper parameters 4ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Flight Search (Offer Request) > should create round-trip offer request 15ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should get offers and filter expired ones 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should validate individual offers 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offers Retrieval > should return null for expired offers 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offer Validation > should validate offer expiration with safety buffer 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Offer Validation > should reject offers within safety buffer 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should create order with idempotency 3ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Order Creation > should reject expired offers before booking 2ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should map Duffel API errors to user-friendly messages 6ms\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\nOffer Request Performance: {\n  avgTime: \u001b[32m'0.29ms'\u001b[39m,\n  p95Time: \u001b[32m'0.72ms'\u001b[39m,\n  throughput: \u001b[32m'3466.69 req/sec'\u001b[39m,\n  errorRate: \u001b[32m'0.00%'\u001b[39m\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA\nOffer Request Performance: {\n  avgTime: \u001b[32m'0.29ms'\u001b[39m,\n  p95Time: \u001b[32m'0.72ms'\u001b[39m,\n  throughput: \u001b[32m'3466.69 req/sec'\u001b[39m,\n  errorRate: \u001b[32m'0.00%'\u001b[39m\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should handle offer validation within performance limits\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should handle offer validation within performance limits\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should handle offer validation within performance limits\nOffer Validation Performance: { avgTime: \u001b[32m'0.027ms'\u001b[39m, throughput: \u001b[32m'37508 validations/sec'\u001b[39m }\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should handle offer validation within performance limits\nOffer Validation Performance: { avgTime: \u001b[32m'0.027ms'\u001b[39m, throughput: \u001b[32m'37508 validations/sec'\u001b[39m }\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests\nLoad Test Results: {\n  totalRequests: \u001b[33m10\u001b[39m,\n  successfulRequests: \u001b[33m10\u001b[39m,\n  failedRequests: \u001b[33m0\u001b[39m,\n  averageResponseTime: \u001b[33m0.06806179999998677\u001b[39m,\n  maxResponseTime: \u001b[33m0.6806179999998676\u001b[39m,\n  minResponseTime: \u001b[33m0\u001b[39m,\n  requestsPerSecond: \u001b[33m14692.529436485584\u001b[39m,\n  errors: []\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests\nLoad Test Results: {\n  totalRequests: \u001b[33m10\u001b[39m,\n  successfulRequests: \u001b[33m10\u001b[39m,\n  failedRequests: \u001b[33m0\u001b[39m,\n  averageResponseTime: \u001b[33m0.06806179999998677\u001b[39m,\n  maxResponseTime: \u001b[33m0.6806179999998676\u001b[39m,\n  minResponseTime: \u001b[33m0\u001b[39m,\n  requestsPerSecond: \u001b[33m14692.529436485584\u001b[39m,\n  errors: []\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n[DuffelService] Offer request created: orq_test\n[DuffelService] Offer request created: orq_test\n\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA 11ms\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Response Time Benchmarks > should handle offer validation within performance limits 6ms\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests 3ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Setup Intent Creation > should create setup intent with correct parameters 6ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Campaign Validation for Auto-Booking > should validate campaign successfully when all conditions are met 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Campaign Validation for Auto-Booking > should reject when flight price exceeds budget 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Campaign Validation for Auto-Booking > should detect expired cards 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Auto-Booking Payment Intent Creation > should create payment intent with correct off-session parameters 3ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Card Expiry Detection > should detect non-expired cards correctly 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Card Expiry Detection > should detect expired cards correctly 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Card Expiry Detection > should handle missing expiry information 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Stripe Error Parsing > should parse card declined error correctly 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Stripe Error Parsing > should parse insufficient funds error correctly 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Stripe Error Parsing > should parse authentication required error correctly 0ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Stripe Error Parsing > should handle unknown errors gracefully 0ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Integration Scenarios > should handle complete auto-booking flow validation 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts > Payment Architecture Core Logic > Integration Scenarios > should fail validation and prevent payment for over-budget flights 1ms\n ✓ |unit| src/tests/payment-architecture.test.ts (14 tests) 20ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Setup Intent Creation > should create setup intent with correct parameters 6ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Campaign Validation for Auto-Booking > should validate campaign successfully when all conditions are met 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Campaign Validation for Auto-Booking > should reject when flight price exceeds budget 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Campaign Validation for Auto-Booking > should detect expired cards 8ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Auto-Booking Payment Intent Creation > should create payment intent with correct off-session parameters 4ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Card Expiry Detection > should detect non-expired cards correctly 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Card Expiry Detection > should detect expired cards correctly 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Card Expiry Detection > should handle missing expiry information 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Stripe Error Parsing > should parse card declined error correctly 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Stripe Error Parsing > should parse insufficient funds error correctly 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Stripe Error Parsing > should parse authentication required error correctly 0ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Stripe Error Parsing > should handle unknown errors gracefully 0ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Integration Scenarios > should handle complete auto-booking flow validation 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts > Payment Architecture Core Logic > Integration Scenarios > should fail validation and prevent payment for over-budget flights 1ms\n ✓ |unit| tests/unit/payment-architecture.test.ts (14 tests) 27ms\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > isEnabled > returns false for disabled flags regardless of rollout percentage 4ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > isEnabled > returns true for 100% rollout when enabled 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > isEnabled > returns false for 0% rollout when enabled 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > isEnabled > handles null/undefined rollout percentage as 100% 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > isEnabled > provides consistent results for the same user 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > isEnabled > distributes users approximately according to rollout percentage 17ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > userInBucket > returns false for empty user ID 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > userInBucket > returns false for 0% rollout 2ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > userInBucket > returns true for 100% rollout 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > userInBucket > returns true for rollout >= 100 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > userInBucket > returns false for negative rollout 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > userInBucket > provides deterministic results 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > getUserBucket > returns 0 for empty user ID 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > getUserBucket > returns a number between 0 and 99 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > getUserBucket > returns consistent buckets for the same user 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > getUserBucket > distributes users across all buckets 16ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > getFeatureFlagHash > returns consistent hash for the same user 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > getFeatureFlagHash > returns different hashes for different users 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > getFeatureFlagHash > returns values in expected range 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > Edge Cases > handles special characters in user IDs 1ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > Edge Cases > handles very long user IDs 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > Edge Cases > handles unicode characters in user IDs 0ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > 5% Canary Rollout Simulation > correctly implements 5% canary rollout 5ms\n ✓ |unit| tests/unit/featureFlag.test.ts > Feature Flag System > 5% Canary Rollout Simulation > maintains consistency across multiple checks 290ms\n ✓ |unit| tests/unit/featureFlag.test.ts (24 tests) 346ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts > useFormAnalytics > should generate a unique session ID 60ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts > useFormAnalytics > should track form submission with correct payload 6ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts > useFormAnalytics > should track field interaction 9ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts > useFormAnalytics > should track field errors 21ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts > useFormAnalytics > should retry on 500 error and eventually succeed 4ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts > useFormAnalytics > should queue events locally after max retries exceeded 2ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts > useFormAnalytics > should handle localStorage errors gracefully 4ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts > useFormAnalytics > should not track events when formConfig is missing 4ms\n ✓ |unit| src/hooks/__tests__/useFormAnalytics.test.ts (8 tests) 112ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeyId > should validate UUID format key IDs 4ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeyId > should validate alias format key IDs 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeyId > should validate ARN format key IDs and extract metadata 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeyId > should validate alias ARN format 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeyId > should reject empty or invalid key IDs 4ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeyId > should handle null and undefined key IDs 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionContext > should accept valid encryption contexts 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionContext > should accept empty or undefined contexts 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionContext > should reject contexts with too many key-value pairs 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionContext > should reject keys or values exceeding 256 characters 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionContext > should detect sensitive data in context keys and values 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionContext > should reject control characters 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionAlgorithm > should accept valid encryption algorithms 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionAlgorithm > should accept undefined algorithm 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptionAlgorithm > should reject invalid algorithms 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateSigningAlgorithm > should accept valid signing algorithms 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateSigningAlgorithm > should reject invalid signing algorithms 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validatePlaintextSize > should accept valid plaintext sizes 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validatePlaintextSize > should reject empty plaintext 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validatePlaintextSize > should reject oversized plaintext 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateGrantTokens > should accept valid grant tokens 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateGrantTokens > should accept undefined grant tokens 14ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateGrantTokens > should reject too many grant tokens 4ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateGrantTokens > should reject empty grant tokens 2ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateGrantTokens > should reject oversized grant tokens 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeySpec > should accept valid key specs 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeySpec > should reject invalid key specs 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeyUsage > should accept valid key usages 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateKeyUsage > should reject invalid key usage 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptParams > should accept valid encrypt parameters 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptParams > should reject encrypt params with invalid key ID 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateEncryptParams > should reject encrypt params with oversized plaintext 3ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateDecryptParams > should accept valid decrypt parameters 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateDecryptParams > should reject decrypt params with empty ciphertext 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateDecryptParams > should reject decrypt params with oversized ciphertext 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > validateDecryptParams > should accept decrypt params without keyId (optional) 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > edge cases and error handling > should handle unicode characters in encryption context properly 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > edge cases and error handling > should handle mixed case UUIDs 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > edge cases and error handling > should trim whitespace from key IDs 1ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts > AWSCLIParameterValidator > edge cases and error handling > should handle binary data correctly in plaintext size validation 0ms\n ✓ |unit| src/lib/aws-cli-compatibility/parameter-validator.test.ts (40 tests) 53ms\nstdout | src/lib/validation/enhanced-validation.test.ts > Common Schema Registration > should register common schemas in global registry\nRegistered common validation schemas in global registry\n\nstdout | src/lib/validation/enhanced-validation.test.ts > Common Schema Registration > should register common schemas in global registry\nRegistered common validation schemas in global registry\n\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Enhanced Error Formatting > should treeify errors into nested structure 7ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Enhanced Error Formatting > should flatten errors for simple forms 9ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Enhanced Error Formatting > should prettify errors with visual indicators 9ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Enhanced Error Formatting > should create localized error maps 8ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Schema Registry > should add and retrieve schemas with metadata 10ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Schema Registry > should prevent duplicate IDs 1ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Schema Registry > should filter schemas by category and tags 2ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Schema Registry > should generate documentation 2ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Enhanced Schema Features > should create enhanced schemas with metadata 2ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Enhanced Schema Features > should validate with enhanced error formatting 2ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > String Format Validators > should validate email format 1ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > String Format Validators > should validate URL format 2ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > String Format Validators > should validate strong password 1ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > String Format Validators > should validate phone numbers 0ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Conditional Validation > should apply conditional validation based on data 14ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Common Schema Registration > should register common schemas in global registry 6ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Enhanced Validation Performance > should validate large datasets efficiently 8ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts > Enhanced Validation Performance > should handle complex nested validation efficiently 3ms\n ✓ |unit| src/lib/validation/enhanced-validation.test.ts (18 tests) 88ms\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should handle initialization timeout gracefully\nFalling back to offline mode with default flag values\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should handle initialization timeout gracefully\nFalling back to offline mode with default flag values\n\n ✓ |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should initialize successfully with valid configuration 7ms\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Pure helper function > formatDateRange should format dates correctly 36ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Pure helper function > formatDateRange should handle different months 1ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Pure helper function > formatDateRange should handle timezone parameter 1ms\n ✓ |unit| src/tests/components/ConstraintChips.test.tsx > ConstraintChips > renders carry-on included chip 122ms\n ✓ |unit| src/tests/components/ConstraintChips.test.tsx > ConstraintChips > renders date range chip with formatted dates 13ms\n ✓ |unit| src/tests/components/ConstraintChips.test.tsx > ConstraintChips > renders non-stop only chip 21ms\n ✓ |unit| src/tests/components/ConstraintChips.test.tsx > ConstraintChips > calls onToggleNonStop when non-stop chip is clicked 10ms\n ✓ |unit| src/tests/components/ConstraintChips.test.tsx > ConstraintChips > shows different styling when nonStopOnly is true 108ms\n ✓ |unit| src/tests/components/ConstraintChips.test.tsx (5 tests) 276ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Component rendering with semantic elements > should render all chips with proper accessibility roles 100ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Component rendering with semantic elements > should render formatted date range 21ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Component rendering with semantic elements > should show non-stop toggle as disabled by default 20ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Component rendering with semantic elements > should show non-stop toggle as enabled when nonStopOnly is true 7ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > User interactions > should call onToggleNonStop when non-stop button is clicked 136ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > User interactions > should toggle non-stop using getByRole for accessibility testing 46ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > User interactions > should handle keyboard interactions 13ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Visual states > should render different states for non-stop toggle 19ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Visual states > should have proper accessibility labels for each state 55ms\n ✓ |unit| src/tests/components/ConstraintChips.refactored.test.tsx (12 tests) 457ms\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > calls bumpBudget and shows toast when budget button is clicked\n[ANALYTICS] BUDGET_BUMPED { tripId: \u001b[32m'test-trip'\u001b[39m, bumpsUsed: \u001b[33m1\u001b[39m, newBudget: \u001b[33m1000\u001b[39m, maxBudget: \u001b[33m3000\u001b[39m }\n\nstdout | src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > calls bumpBudget and shows toast when budget button is clicked\n[ANALYTICS] BUDGET_BUMPED { tripId: \u001b[32m'test-trip'\u001b[39m, bumpsUsed: \u001b[33m1\u001b[39m, newBudget: \u001b[33m1000\u001b[39m, maxBudget: \u001b[33m3000\u001b[39m }\n\n ✓ |unit| src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > renders ConstraintChips with correct dateRange 185ms\n ✓ |unit| src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > displays budget information correctly 14ms\n ✓ |unit| src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > enables budget button when bumps < 3 and budget < maxBudget 10ms\n ✓ |unit| src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > disables budget button when bumpsUsed >= 3 8ms\n ✓ |unit| src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > disables budget button when budget >= maxBudget 11ms\n ✓ |unit| src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > calls bumpBudget and shows toast when budget button is clicked 22ms\n ✓ |unit| src/tests/components/PoolOfferControls.test.tsx > PoolOfferControls > shows bumps used indicator when bumpsUsed > 0 6ms\n ✓ |unit| src/tests/components/PoolOfferControls.test.tsx (7 tests) 258ms\n ✓ |unit| src/tests/components/TripRequestForm.minimal.test.tsx > TripRequestForm - Minimal Test > should render without crashing 71ms\n ✓ |unit| src/tests/components/TripRequestForm.minimal.test.tsx (1 test) 73ms\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\n × |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > TripRequestForm - Best Practices Implementation > Form Validation Logic (Recommended Focus) > should validate that required date fields enable form submission 232ms\n   → \n × |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > TripRequestForm - Best Practices Implementation > Form Validation Logic (Recommended Focus) > should prevent submission when dates are missing 109ms\n   → \n × |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > TripRequestForm - Best Practices Implementation > Form Submission with Mocked Dates (Best Practice) > should submit successfully with programmatically set dates 110ms\n   → \n × |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > TripRequestForm - Best Practices Implementation > Auto-booking Validation (Business Logic Focus) > should validate auto-booking requires payment method 56ms\n   → \n × |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > TripRequestForm - Best Practices Implementation > Auto-booking Validation (Business Logic Focus) > should submit successfully with auto-booking when all requirements are met 61ms\n   → \n × |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > TripRequestForm - Best Practices Implementation > Date Range Validation (Programmatic Testing) > should accept valid future date ranges 59ms\n   → \n × |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > TripRequestForm - Best Practices Implementation > Filter Toggle Logic (UI State Testing) > should toggle nonstop flights filter 67ms\n   → \n × |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > TripRequestForm - Best Practices Implementation > Filter Toggle Logic (UI State Testing) > should toggle baggage filter 56ms\n   → \n ✓ |unit| src/tests/components/TripRequestForm.best-practices.test.tsx > Migration Notes for Existing Tests > should serve as a migration example 2ms\n ❯ |unit| src/tests/components/TripRequestForm.best-practices.test.tsx (9 tests | 8 failed) 756ms\n   × TripRequestForm - Best Practices Implementation > Form Validation Logic (Recommended Focus) > should validate that required date fields enable form submission 232ms\n     → \n   × TripRequestForm - Best Practices Implementation > Form Validation Logic (Recommended Focus) > should prevent submission when dates are missing 109ms\n     → \n   × TripRequestForm - Best Practices Implementation > Form Submission with Mocked Dates (Best Practice) > should submit successfully with programmatically set dates 110ms\n     → \n   × TripRequestForm - Best Practices Implementation > Auto-booking Validation (Business Logic Focus) > should validate auto-booking requires payment method 56ms\n     → \n   × TripRequestForm - Best Practices Implementation > Auto-booking Validation (Business Logic Focus) > should submit successfully with auto-booking when all requirements are met 61ms\n     → \n   × TripRequestForm - Best Practices Implementation > Date Range Validation (Programmatic Testing) > should accept valid future date ranges 59ms\n     → \n   × TripRequestForm - Best Practices Implementation > Filter Toggle Logic (UI State Testing) > should toggle nonstop flights filter 67ms\n     → \n   × TripRequestForm - Best Practices Implementation > Filter Toggle Logic (UI State Testing) > should toggle baggage filter 56ms\n     → \n   ✓ Migration Notes for Existing Tests > should serve as a migration example 2ms\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should handle network connectivity issues\nFalling back to offline mode with default flag values\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should handle network connectivity issues\nFalling back to offline mode with default flag values\n\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should handle initialization timeout gracefully 3011ms\n   → expected false to be true // Object.is equality\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should return correct flag values when online\nLaunchDarkly client initialized successfully in 0.032831000000442145ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should return correct flag values when online\nLaunchDarkly client initialized successfully in 0.032831000000442145ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should use fallback values when offline\nLaunchDarkly client initialized successfully in 0.07777399999940826ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should use fallback values when offline\nLaunchDarkly client initialized successfully in 0.07777399999940826ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should handle circuit breaker activation\nLaunchDarkly client initialized successfully in 0.03667200000018056ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should handle circuit breaker activation\nLaunchDarkly client initialized successfully in 0.03667200000018056ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Context Management > should update context on authentication\nLaunchDarkly client initialized successfully in 0.09024800000042887ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Context Management > should update context on authentication\nLaunchDarkly client initialized successfully in 0.09024800000042887ms\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render the form with basic elements\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render the form with basic elements\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render form input fields\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render form input fields\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should allow selecting cabin class\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should allow selecting cabin class\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\n × |unit| src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render the form with basic elements 239ms\n   → \n × |unit| src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render form input fields 76ms\n   → \nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should have submit button disabled initially\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should have submit button disabled initially\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render date input fields\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render date input fields\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\n × |unit| src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should allow selecting cabin class 84ms\n   → \n × |unit| src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should have submit button disabled initially 82ms\n   → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Filter Toggles Logic > should render \"Nonstop flights only\" switch checked by default 225ms\n   → \nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should allow filling out basic form fields\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should allow filling out basic form fields\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Filter Toggles Logic > should render \"Include carry-on + personal item\" switch unchecked by default 120ms\n   → \nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render form sections\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\nstdout | src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render form sections\n🔄 usePaymentMethods: Fetching payment methods...\n[INFO] [PaymentMethodsKMS] Fetching payment methods via edge function\n\n × |unit| src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render date input fields 99ms\n   → \n × |unit| src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should allow filling out basic form fields 48ms\n   → \n × |unit| src/tests/components/TripRequestForm.simple.test.tsx > TripRequestForm - Basic Functionality > should render form sections 94ms\n   → \n ❯ |unit| src/tests/components/TripRequestForm.simple.test.tsx (7 tests | 7 failed) 723ms\n   × TripRequestForm - Basic Functionality > should render the form with basic elements 239ms\n     → \n   × TripRequestForm - Basic Functionality > should render form input fields 76ms\n     → \n   × TripRequestForm - Basic Functionality > should allow selecting cabin class 84ms\n     → \n   × TripRequestForm - Basic Functionality > should have submit button disabled initially 82ms\n     → \n   × TripRequestForm - Basic Functionality > should render date input fields 99ms\n     → \n   × TripRequestForm - Basic Functionality > should allow filling out basic form fields 48ms\n     → \n   × TripRequestForm - Basic Functionality > should render form sections 94ms\n     → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Filter Toggles Logic > should update switch state when \"Include carry-on + personal item\" switch is toggled 96ms\n   → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Filter Toggles Logic > should reflect Zod schema default values for switches on initial render 71ms\n   → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Submission Logic > should populate destination_location_code from destination_airport if omitted 95ms\n   → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Auto-Booking Logic > should show payment method selection when auto-booking is enabled and prerequisites are met 50ms\n   → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Auto-Booking Logic > should fail submission if auto-booking is enabled, max_price is set, but no payment method is selected 112ms\n   → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Auto-Booking Logic > should fail submission if auto-booking is enabled, payment method is set, but max_price is missing 54ms\n   → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Auto-Booking Logic > should submit successfully with auto-booking ON, payment method, and max_price 89ms\n   → \n × |unit| src/tests/components/TripRequestForm.test.tsx > TripRequestForm - Auto-Booking Logic > should submit successfully with auto-booking OFF 61ms\n   → \n ❯ |unit| src/tests/components/TripRequestForm.test.tsx (10 tests | 10 failed) 974ms\n   × TripRequestForm - Filter Toggles Logic > should render \"Nonstop flights only\" switch checked by default 225ms\n     → \n   × TripRequestForm - Filter Toggles Logic > should render \"Include carry-on + personal item\" switch unchecked by default 120ms\n     → \n   × TripRequestForm - Filter Toggles Logic > should update switch state when \"Include carry-on + personal item\" switch is toggled 96ms\n     → \n   × TripRequestForm - Filter Toggles Logic > should reflect Zod schema default values for switches on initial render 71ms\n     → \n   × TripRequestForm - Submission Logic > should populate destination_location_code from destination_airport if omitted 95ms\n     → \n   × TripRequestForm - Auto-Booking Logic > should show payment method selection when auto-booking is enabled and prerequisites are met 50ms\n     → \n   × TripRequestForm - Auto-Booking Logic > should fail submission if auto-booking is enabled, max_price is set, but no payment method is selected 112ms\n     → \n   × TripRequestForm - Auto-Booking Logic > should fail submission if auto-booking is enabled, payment method is set, but max_price is missing 54ms\n     → \n   × TripRequestForm - Auto-Booking Logic > should submit successfully with auto-booking ON, payment method, and max_price 89ms\n     → \n   × TripRequestForm - Auto-Booking Logic > should submit successfully with auto-booking OFF 61ms\n     → \nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should handle rate limiting errors 7004ms\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Resilience Features > should retry failed operations with exponential backoff\nLaunchDarkly client initialized successfully in 3003.065573ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Resilience Features > should retry failed operations with exponential backoff\nLaunchDarkly client initialized successfully in 3003.065573ms\n\n ✓ |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Service Initialization > should handle network connectivity issues 3005ms\n ✓ |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should return correct flag values when online 2ms\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should use fallback values when offline 2ms\n   → expected undefined to be false // Object.is equality\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Feature Flag Evaluation > should handle circuit breaker activation 2ms\n   → expected false to be true // Object.is equality\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Context Management > should create valid anonymous context 2ms\n   → expected 'anonymous' to match /^anonymous-\\d+-[a-z0-9]+$/\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Context Management > should create valid user context from attributes 3ms\n   → expected 'test-user' to be 'user-123' // Object.is equality\n ✓ |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Context Management > should update context on authentication 2ms\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Context Management > should sanitize sensitive information from context 1ms\n   → expected 'secret123' to be undefined\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Resilience Features > should track performance metrics\nLaunchDarkly client initialized successfully in 0.04000299999825074ms\n\nstdout | src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Resilience Features > should track performance metrics\nLaunchDarkly client initialized successfully in 0.04000299999825074ms\n\n ✓ |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Resilience Features > should retry failed operations with exponential backoff 3004ms\n ✓ |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Resilience Features > should track performance metrics 1ms\n ✓ |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Resilience Features > should handle flag evaluation timeout 1ms\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Developer Experience > should support localStorage overrides in development 2ms\n   → localStorage.clear is not a function\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Developer Experience > should provide developer override utilities 1ms\n   → localStorage.clear is not a function\n   → localStorage.clear is not a function\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Known Feature Flags Integration > should have proper fallback values for all known flags 1ms\n   → localStorage.clear is not a function\n   → localStorage.clear is not a function\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Known Feature Flags Integration > should evaluate all known flags without errors 1ms\n   → localStorage.clear is not a function\n   → localStorage.clear is not a function\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Known Feature Flags Integration > should handle flag changes for known flags 0ms\n   → localStorage.clear is not a function\n   → localStorage.clear is not a function\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Error Recovery > should recover from temporary network issues 0ms\n   → localStorage.clear is not a function\n   → localStorage.clear is not a function\n × |integration| src/tests/integration/launchdarkly-integration.test.ts > LaunchDarkly Integration Tests > Error Recovery > should provide comprehensive error reporting 0ms\n   → localStorage.clear is not a function\n   → localStorage.clear is not a function\n ❯ |integration| src/tests/integration/launchdarkly-integration.test.ts (20 tests | 13 failed) 9050ms\n   ✓ LaunchDarkly Integration Tests > Service Initialization > should initialize successfully with valid configuration 7ms\n   × LaunchDarkly Integration Tests > Service Initialization > should handle initialization timeout gracefully 3011ms\n     → expected false to be true // Object.is equality\n   ✓ LaunchDarkly Integration Tests > Service Initialization > should handle network connectivity issues  3005ms\n   ✓ LaunchDarkly Integration Tests > Feature Flag Evaluation > should return correct flag values when online 2ms\n   × LaunchDarkly Integration Tests > Feature Flag Evaluation > should use fallback values when offline 2ms\n     → expected undefined to be false // Object.is equality\n   × LaunchDarkly Integration Tests > Feature Flag Evaluation > should handle circuit breaker activation 2ms\n     → expected false to be true // Object.is equality\n   × LaunchDarkly Integration Tests > Context Management > should create valid anonymous context 2ms\n     → expected 'anonymous' to match /^anonymous-\\d+-[a-z0-9]+$/\n   × LaunchDarkly Integration Tests > Context Management > should create valid user context from attributes 3ms\n     → expected 'test-user' to be 'user-123' // Object.is equality\n   ✓ LaunchDarkly Integration Tests > Context Management > should update context on authentication 2ms\n   × LaunchDarkly Integration Tests > Context Management > should sanitize sensitive information from context 1ms\n     → expected 'secret123' to be undefined\n   ✓ LaunchDarkly Integration Tests > Resilience Features > should retry failed operations with exponential backoff  3004ms\n   ✓ LaunchDarkly Integration Tests > Resilience Features > should track performance metrics 1ms\n   ✓ LaunchDarkly Integration Tests > Resilience Features > should handle flag evaluation timeout 1ms\n   × LaunchDarkly Integration Tests > Developer Experience > should support localStorage overrides in development 2ms\n     → localStorage.clear is not a function\n   × LaunchDarkly Integration Tests > Developer Experience > should provide developer override utilities 1ms\n     → localStorage.clear is not a function\n     → localStorage.clear is not a function\n   × LaunchDarkly Integration Tests > Known Feature Flags Integration > should have proper fallback values for all known flags 1ms\n     → localStorage.clear is not a function\n     → localStorage.clear is not a function\n   × LaunchDarkly Integration Tests > Known Feature Flags Integration > should evaluate all known flags without errors 1ms\n     → localStorage.clear is not a function\n     → localStorage.clear is not a function\n   × LaunchDarkly Integration Tests > Known Feature Flags Integration > should handle flag changes for known flags 0ms\n     → localStorage.clear is not a function\n     → localStorage.clear is not a function\n   × LaunchDarkly Integration Tests > Error Recovery > should recover from temporary network issues 0ms\n     → localStorage.clear is not a function\n     → localStorage.clear is not a function\n   × LaunchDarkly Integration Tests > Error Recovery > should provide comprehensive error reporting 0ms\n     → localStorage.clear is not a function\n     → localStorage.clear is not a function\n × |unit| src/tests/components/TripRequestForm.debug.test.tsx > TripRequestForm Debug > debug: check what renders in auto mode 260ms\n   → \n × |unit| src/tests/components/TripRequestForm.debug.test.tsx > TripRequestForm Debug > debug: check manual mode 143ms\n   → \n ❯ |unit| src/tests/components/TripRequestForm.debug.test.tsx (2 tests | 2 failed) 405ms\n   × TripRequestForm Debug > debug: check what renders in auto mode 260ms\n     → \n   × TripRequestForm Debug > debug: check manual mode 143ms\n     → \nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\nRate Limiting Test: 8 errors out of 10 requests\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load\nRate Limiting Test: 8 errors out of 10 requests\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\nMemory Usage Test: { initial: \u001b[32m'47MB'\u001b[39m, final: \u001b[32m'49MB'\u001b[39m, increase: \u001b[32m'3.53%'\u001b[39m }\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations\nMemory Usage Test: { initial: \u001b[32m'47MB'\u001b[39m, final: \u001b[32m'49MB'\u001b[39m, increase: \u001b[32m'3.53%'\u001b[39m }\n\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load 7006ms\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Attempt 1 failed, retrying in 1000ms\n\n ✓ |unit| src/tests/feature-flags/userInBucket.test.ts > userInBucket > should produce consistent hash results (protect against algorithm changes) 4ms\n ✓ |unit| src/tests/feature-flags/userInBucket.test.ts > userInBucket > should correctly determine 5% rollout 1ms\n ✓ |unit| src/tests/feature-flags/userInBucket.test.ts > userInBucket > should handle edge cases 1ms\n ✓ |unit| src/tests/feature-flags/userInBucket.test.ts > userInBucket > should be deterministic 1ms\n ✓ |unit| src/tests/feature-flags/userInBucket.test.ts > userInBucket > should distribute users across buckets 5ms\n ✓ |unit| src/tests/feature-flags/userInBucket.test.ts (5 tests) 14ms\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations 653ms\n × |unit| src/tests/components/TripRequestForm.isolated.test.tsx > TripRequestForm - Isolated Core Tests > should render the form with basic elements 275ms\n   → \n × |unit| src/tests/components/TripRequestForm.isolated.test.tsx > TripRequestForm - Isolated Core Tests > should enable auto-booking toggle and show payment method selection 76ms\n   → \n × |unit| src/tests/components/TripRequestForm.isolated.test.tsx > TripRequestForm - Isolated Core Tests > should fill destination using direct input approach 93ms\n   → \n × |unit| src/tests/components/TripRequestForm.isolated.test.tsx > TripRequestForm - Isolated Core Tests > should show filter toggles section when expanded 81ms\n   → \n × |unit| src/tests/components/TripRequestForm.isolated.test.tsx > TripRequestForm - Isolated Core Tests > should find form input fields 83ms\n   → \n × |unit| src/tests/components/TripRequestForm.isolated.test.tsx > TripRequestForm - Isolated Core Tests > should handle form field changes 65ms\n   → \n ❯ |unit| src/tests/components/TripRequestForm.isolated.test.tsx (6 tests | 6 failed) 676ms\n   × TripRequestForm - Isolated Core Tests > should render the form with basic elements 275ms\n     → \n   × TripRequestForm - Isolated Core Tests > should enable auto-booking toggle and show payment method selection 76ms\n     → \n   × TripRequestForm - Isolated Core Tests > should fill destination using direct input approach 93ms\n     → \n   × TripRequestForm - Isolated Core Tests > should show filter toggles section when expanded 81ms\n     → \n   × TripRequestForm - Isolated Core Tests > should find form input fields 83ms\n     → \n   × TripRequestForm - Isolated Core Tests > should handle form field changes 65ms\n     → \n × |unit| src/tests/contexts/PersonalizationContext.test.tsx > PersonalizationContext > should provide personalization data when enabled 1062ms\n   → Unable to find an element by: [data-testid=\"personalization-enabled\"]\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[0mError: \u001b[0m\n      \u001b[0mCannot destructure property 'data' of '(intermediate value)' as it is undefined.\u001b[0m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[0mError: \u001b[0m\n        \u001b[0mCannot destructure property 'data' of '(intermediate value)' as it is undefined.\u001b[0m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n ✓ |unit| src/tests/contexts/PersonalizationContext.test.tsx > PersonalizationContext > should handle loading state 10ms\n ✓ |unit| src/tests/contexts/PersonalizationContext.test.tsx > PersonalizationContext > should provide null data when personalization is disabled 4ms\n ❯ |unit| src/tests/contexts/PersonalizationContext.test.tsx (3 tests | 1 failed) 1077ms\n   × PersonalizationContext > should provide personalization data when enabled 1062ms\n     → Unable to find an element by: [data-testid=\"personalization-enabled\"]\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[0mError: \u001b[0m\n      \u001b[0mCannot destructure property 'data' of '(intermediate value)' as it is undefined.\u001b[0m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[0mError: \u001b[0m\n        \u001b[0mCannot destructure property 'data' of '(intermediate value)' as it is undefined.\u001b[0m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n   ✓ PersonalizationContext > should handle loading state 10ms\n   ✓ PersonalizationContext > should provide null data when personalization is disabled 4ms\n × |unit| src/tests/components/TripRequestForm.mode.final.test.tsx > TripRequestForm Mode Handling > should show manual mode UI by default 333ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.final.test.tsx > TripRequestForm Mode Handling > should show manual mode UI when mode=manual 167ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.final.test.tsx > TripRequestForm Mode Handling > should show auto mode UI when mode=auto 106ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.final.test.tsx > TripRequestForm Mode Handling > should show step indicator in auto mode 89ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.final.test.tsx > TripRequestForm Mode Handling > should show different sections in auto mode step 1 176ms\n   → \n ❯ |unit| src/tests/components/TripRequestForm.mode.final.test.tsx (5 tests | 5 failed) 874ms\n   × TripRequestForm Mode Handling > should show manual mode UI by default 333ms\n     → \n   × TripRequestForm Mode Handling > should show manual mode UI when mode=manual 167ms\n     → \n   × TripRequestForm Mode Handling > should show auto mode UI when mode=auto 106ms\n     → \n   × TripRequestForm Mode Handling > should show step indicator in auto mode 89ms\n     → \n   × TripRequestForm Mode Handling > should show different sections in auto mode step 1 176ms\n     → \nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Attempt 2 failed, retrying in 2000ms\n\n ✓ |unit| src/tests/hooks/usePoolsSafe.test.ts > usePoolsSafe > Normal operation > should return pools result when useTripOffersPools succeeds 28ms\n ✓ |unit| src/tests/hooks/usePoolsSafe.test.ts > usePoolsSafe > Error handling and fallback > should fall back to legacy hook when useTripOffersPools has error 22ms\n ✓ |unit| src/tests/hooks/usePoolsSafe.test.ts > usePoolsSafe > Error handling and fallback > should show error toast when pools fail 11ms\n ✓ |unit| src/tests/hooks/usePoolsSafe.test.ts > usePoolsSafe > Error handling and fallback > should clear cache when pools fail 6ms\n ✓ |unit| src/tests/hooks/usePoolsSafe.test.ts > usePoolsSafe > Error handling and fallback > should handle cache-related errors with specific logging 16ms\n ✓ |unit| src/tests/hooks/usePoolsSafe.test.ts > usePoolsSafe > Fallback behavior > should map legacy offers to pool1 with score 7ms\n ✓ |unit| src/tests/hooks/usePoolsSafe.test.ts > usePoolsSafe > Fallback behavior > should map legacy trip details to budget and dateRange 8ms\n ✓ |unit| src/tests/hooks/usePoolsSafe.test.ts (7 tests) 102ms\n × |unit| src/tests/components/TripRequestForm.mode.fixed.test.tsx > TripRequestForm Mode Handling > should show manual mode UI by default 485ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.fixed.test.tsx > TripRequestForm Mode Handling > should show manual mode UI when mode=manual 186ms\n   → \n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Initial loading > should initialize with loading state when tripId is provided 24ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Initial loading > should not load when tripId is null 5ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Initial loading > should use initialTripDetails when provided 5ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Loading offers successfully > should load offers and apply duration filter by default 64ms\n × |unit| src/tests/components/TripRequestForm.mode.fixed.test.tsx > TripRequestForm Mode Handling > should show auto mode UI when mode=auto 104ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.fixed.test.tsx > TripRequestForm Mode Handling > should show step indicator in auto mode 111ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.fixed.test.tsx > TripRequestForm Mode Handling > should show different sections in auto mode step 1 125ms\n   → \n ❯ |unit| src/tests/components/TripRequestForm.mode.fixed.test.tsx (5 tests | 5 failed) 1012ms\n   × TripRequestForm Mode Handling > should show manual mode UI by default 485ms\n     → \n   × TripRequestForm Mode Handling > should show manual mode UI when mode=manual 186ms\n     → \n   × TripRequestForm Mode Handling > should show auto mode UI when mode=auto 104ms\n     → \n   × TripRequestForm Mode Handling > should show step indicator in auto mode 111ms\n     → \n   × TripRequestForm Mode Handling > should show different sections in auto mode step 1 125ms\n     → \nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors\n[DuffelService] Attempt 3 failed, retrying in 4000ms\n\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Loading offers successfully > should show toast when duration filter is applied 61ms\n × |unit| src/tests/components/TripRequestForm.mode.test.tsx > TripRequestForm Mode Handling > should show manual mode UI by default 462ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.test.tsx > TripRequestForm Mode Handling > should show manual mode UI when mode=manual 183ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.test.tsx > TripRequestForm Mode Handling > should show auto mode UI when mode=auto 135ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.test.tsx > TripRequestForm Mode Handling > should show step indicator in auto mode 80ms\n   → \n × |unit| src/tests/components/TripRequestForm.mode.test.tsx > TripRequestForm Mode Handling > should show different sections in auto mode step 1 106ms\n   → \n ❯ |unit| src/tests/components/TripRequestForm.mode.test.tsx (5 tests | 5 failed) 969ms\n   × TripRequestForm Mode Handling > should show manual mode UI by default 462ms\n     → \n   × TripRequestForm Mode Handling > should show manual mode UI when mode=manual 183ms\n     → \n   × TripRequestForm Mode Handling > should show auto mode UI when mode=auto 135ms\n     → \n   × TripRequestForm Mode Handling > should show step indicator in auto mode 80ms\n     → \n   × TripRequestForm Mode Handling > should show different sections in auto mode step 1 106ms\n     → \n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Loading offers successfully > should load all offers when ignoreFilter is true 110ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Error handling > should handle flight search API errors 57ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Error handling > should fall back to existing offers when search fails 58ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Error handling > should handle Supabase errors when fetching trip details 55ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Error handling > should handle missing trip ID 2ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Refresh functionality > should refresh offers when refreshOffers is called 58ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Refresh functionality > should prevent rapid successive refreshes 7ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Relaxed criteria search > should handle relaxed criteria search 109ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Caching > should use cached results for repeated requests 57ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return true for offers within duration range 5ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return false for offers outside duration range 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return true for offers at exact minimum duration 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return true for offers at exact maximum duration 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return false for offers with missing departure_date 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return false for offers with missing return_date 20ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return false for offers with invalid dates 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should handle edge case of same day return (0 days) 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should calculate duration correctly across months 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > buildCacheKey > should build cache key with correct format 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > buildCacheKey > should handle different parameter combinations 1ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > buildCacheKey > should include legacy prefix to distinguish from other cache keys 0ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > buildCacheKey > should handle special characters in trip ID 0ms\n ✓ |unit| src/tests/hooks/useTripOffersLegacy.helpers.test.ts (13 tests) 35ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Duration validation > should filter out offers with invalid dates 54ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > Duration validation > should show appropriate message when no offers match duration 59ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts > useTripOffers > No offers scenarios > should handle when no offers are found 56ms\n ✓ |unit| src/tests/hooks/useTripOffers.test.ts (17 tests) 843ms\nstdout | src/tests/hooks/useTripOffersPools.test.ts > useTripOffersPools > should handle budget bumping correctly\n[INFO] [🔍 POOLS-DEBUG] Calling fetchFlightSearch for tripId: test-trip\n[INFO] [🔍 POOLS-DEBUG] Calling fetchFlightSearch for tripId: test-trip\n[INFO] [🔍 POOLS-DEBUG] fetchFlightSearch response: {\n  pool1Count: \u001b[33m0\u001b[39m,\n  pool2Count: \u001b[33m0\u001b[39m,\n  pool3Count: \u001b[33m0\u001b[39m,\n  totalOffers: \u001b[33m0\u001b[39m,\n  success: \u001b[33mtrue\u001b[39m,\n  message: \u001b[32m'Test success'\u001b[39m\n}\n[INFO] [🔍 POOLS-DEBUG] Setting pools state: { pool1Count: \u001b[33m0\u001b[39m, pool2Count: \u001b[33m0\u001b[39m, pool3Count: \u001b[33m0\u001b[39m }\n[INFO] [useTripOffersPools] Pool results cached in unifiedCache for key: test-trip-1000-manual\n[INFO] [🔍 POOLS-DEBUG] fetchFlightSearch response: {\n  pool1Count: \u001b[33m0\u001b[39m,\n  pool2Count: \u001b[33m0\u001b[39m,\n  pool3Count: \u001b[33m0\u001b[39m,\n  totalOffers: \u001b[33m0\u001b[39m,\n  success: \u001b[33mtrue\u001b[39m,\n  message: \u001b[32m'Test success'\u001b[39m\n}\n[INFO] [🔍 POOLS-DEBUG] Setting pools state: { pool1Count: \u001b[33m0\u001b[39m, pool2Count: \u001b[33m0\u001b[39m, pool3Count: \u001b[33m0\u001b[39m }\n[INFO] [useTripOffersPools] Pool results cached in unifiedCache for key: test-trip-1200-manual\n\nstdout | src/tests/hooks/useTripOffersPools.test.ts > useTripOffersPools > should handle budget bumping correctly\n[INFO] [🔍 POOLS-DEBUG] Calling fetchFlightSearch for tripId: test-trip\n[INFO] [🔍 POOLS-DEBUG] Calling fetchFlightSearch for tripId: test-trip\n[INFO] [🔍 POOLS-DEBUG] fetchFlightSearch response: {\n  pool1Count: \u001b[33m0\u001b[39m,\n  pool2Count: \u001b[33m0\u001b[39m,\n  pool3Count: \u001b[33m0\u001b[39m,\n  totalOffers: \u001b[33m0\u001b[39m,\n  success: \u001b[33mtrue\u001b[39m,\n  message: \u001b[32m'Test success'\u001b[39m\n}\n[INFO] [🔍 POOLS-DEBUG] Setting pools state: { pool1Count: \u001b[33m0\u001b[39m, pool2Count: \u001b[33m0\u001b[39m, pool3Count: \u001b[33m0\u001b[39m }\n[INFO] [useTripOffersPools] Pool results cached in unifiedCache for key: test-trip-1000-manual\n[INFO] [🔍 POOLS-DEBUG] fetchFlightSearch response: {\n  pool1Count: \u001b[33m0\u001b[39m,\n  pool2Count: \u001b[33m0\u001b[39m,\n  pool3Count: \u001b[33m0\u001b[39m,\n  totalOffers: \u001b[33m0\u001b[39m,\n  success: \u001b[33mtrue\u001b[39m,\n  message: \u001b[32m'Test success'\u001b[39m\n}\n[INFO] [🔍 POOLS-DEBUG] Setting pools state: { pool1Count: \u001b[33m0\u001b[39m, pool2Count: \u001b[33m0\u001b[39m, pool3Count: \u001b[33m0\u001b[39m }\n[INFO] [useTripOffersPools] Pool results cached in unifiedCache for key: test-trip-1200-manual\n\nstdout | src/tests/hooks/useTripOffersPools.test.ts > useTripOffersPools > should prevent budget bumping after 3 uses\n[INFO] [useTripOffersPools] Using cached results from unifiedCache for key: test-trip-1000-manual\n[INFO] [useTripOffersPools] Using cached results from unifiedCache for key: test-trip-1200-manual\n\nstdout | src/tests/hooks/useTripOffersPools.test.ts > useTripOffersPools > should prevent budget bumping after 3 uses\n[INFO] [useTripOffersPools] Using cached results from unifiedCache for key: test-trip-1000-manual\n[INFO] [useTripOffersPools] Using cached results from unifiedCache for key: test-trip-1200-manual\n\n ✓ |unit| src/tests/hooks/useTripOffersPools.test.ts > useTripOffersPools > should initialize with default values 22ms\n ✓ |unit| src/tests/hooks/useTripOffersPools.test.ts > useTripOffersPools > should handle budget bumping correctly 20ms\n ✓ |unit| src/tests/hooks/useTripOffersPools.test.ts > useTripOffersPools > should prevent budget bumping after 3 uses 7ms\n ✓ |unit| src/tests/hooks/useTripOffersPools.test.ts (3 tests) 51ms\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Offer request created: orq_success\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\n[DuffelService] Offer request created: orq_success\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\nError Recovery Test: Success after 1 attempts\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures\nError Recovery Test: Success after 1 attempts\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Offer request created: undefined\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Offer request created: undefined\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Offer request created: undefined\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Offer request created: undefined\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Offer request created: undefined\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Offer request created: undefined\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Creating offer request: {\n  \"slices\": [\n    {\n      \"origin\": \"NYC\",\n      \"destination\": \"LAX\",\n      \"departure_date\": \"2024-07-01\"\n    }\n  ],\n  \"passengers\": [\n    {\n      \"type\": \"adult\"\n    }\n  ],\n  \"cabin_class\": \"economy\",\n  \"max_connections\": 1\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Offer request created: undefined\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully\n[DuffelService] Offer request created: undefined\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\n[DuffelPayments] Duffel payment intent created: pi_test123\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\nPayment Performance: { avgTime: \u001b[32m'0.12ms'\u001b[39m, throughput: \u001b[32m'8546.98 req/sec'\u001b[39m }\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently\nPayment Performance: { avgTime: \u001b[32m'0.12ms'\u001b[39m, throughput: \u001b[32m'8546.98 req/sec'\u001b[39m }\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should meet all performance SLAs\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should meet all performance SLAs\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should meet all performance SLAs\nProduction SLA Requirements: {\n  maxResponseTime: \u001b[33m2000\u001b[39m,\n  minThroughput: \u001b[33m10\u001b[39m,\n  maxErrorRate: \u001b[33m0.05\u001b[39m,\n  maxMemoryIncrease: \u001b[33m50\u001b[39m\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should meet all performance SLAs\nProduction SLA Requirements: {\n  maxResponseTime: \u001b[33m2000\u001b[39m,\n  minThroughput: \u001b[33m10\u001b[39m,\n  maxErrorRate: \u001b[33m0.05\u001b[39m,\n  maxMemoryIncrease: \u001b[33m50\u001b[39m\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should have proper monitoring and alerting setup\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should have proper monitoring and alerting setup\n[DuffelService] Initialized in TEST mode\n[DuffelAdvanced] Initialized in TEST mode with 0 options\n[DuffelPayments] Initialized with Duffel: true, Stripe: false\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should have proper monitoring and alerting setup\nMonitoring Checklist: {\n  healthEndpoint: \u001b[33mtrue\u001b[39m,\n  errorTracking: \u001b[33mtrue\u001b[39m,\n  performanceMetrics: \u001b[33mtrue\u001b[39m,\n  rateLimitMonitoring: \u001b[33mtrue\u001b[39m,\n  memoryTracking: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should have proper monitoring and alerting setup\nMonitoring Checklist: {\n  healthEndpoint: \u001b[33mtrue\u001b[39m,\n  errorTracking: \u001b[33mtrue\u001b[39m,\n  performanceMetrics: \u001b[33mtrue\u001b[39m,\n  rateLimitMonitoring: \u001b[33mtrue\u001b[39m,\n  memoryTracking: \u001b[33mtrue\u001b[39m\n}\n\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures 3003ms\n × |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully 15ms\n   → expected 2 to be 6 // Object.is equality\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently 3ms\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should meet all performance SLAs 1ms\n ✓ |unit| src/tests/duffel-performance.test.ts > Duffel Performance Tests > Production Readiness Validation > should have proper monitoring and alerting setup 1ms\n ❯ |unit| src/tests/duffel-performance.test.ts (10 tests | 1 failed) 10705ms\n   ✓ Duffel Performance Tests > Response Time Benchmarks > should create offer requests within performance SLA 11ms\n   ✓ Duffel Performance Tests > Response Time Benchmarks > should handle offer validation within performance limits 6ms\n   ✓ Duffel Performance Tests > Load Testing Scenarios > should handle concurrent search requests 3ms\n   ✓ Duffel Performance Tests > Load Testing Scenarios > should respect rate limiting under load  7006ms\n   ✓ Duffel Performance Tests > Memory and Resource Management > should not have memory leaks during extended operations  653ms\n   ✓ Duffel Performance Tests > Error Recovery and Resilience > should recover from network failures  3003ms\n   × Duffel Performance Tests > Error Recovery and Resilience > should handle malformed responses gracefully 15ms\n     → expected 2 to be 6 // Object.is equality\n   ✓ Duffel Performance Tests > Advanced Service Performance > should handle payment intent creation efficiently 3ms\n   ✓ Duffel Performance Tests > Production Readiness Validation > should meet all performance SLAs 1ms\n   ✓ Duffel Performance Tests > Production Readiness Validation > should have proper monitoring and alerting setup 1ms\nstdout | src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display auto-booking banner if tripRequest.auto_book_enabled is true\n[TripConfirm] Component mounted with location: ?id=offer-for-auto-book&airline=AA&flight_number=123&price=500&departure_date=2024-01-01&departure_time=10:00&return_date=2024-01-05&return_time=12:00&duration=PT2H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-auto-book'\u001b[39m,\n  airline: \u001b[32m'AA'\u001b[39m,\n  flight_number: \u001b[32m'123'\u001b[39m,\n  price: \u001b[33m500\u001b[39m,\n  departure_date: \u001b[32m'2024-01-01'\u001b[39m,\n  departure_time: \u001b[32m'10:00'\u001b[39m,\n  return_date: \u001b[32m'2024-01-05'\u001b[39m,\n  return_time: \u001b[32m'12:00'\u001b[39m,\n  duration: \u001b[32m'PT2H'\u001b[39m\n}\n[TripConfirm] Component mounted with location: ?id=offer-for-auto-book&airline=AA&flight_number=123&price=500&departure_date=2024-01-01&departure_time=10:00&return_date=2024-01-05&return_time=12:00&duration=PT2H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-auto-book'\u001b[39m,\n  airline: \u001b[32m'AA'\u001b[39m,\n  flight_number: \u001b[32m'123'\u001b[39m,\n  price: \u001b[33m500\u001b[39m,\n  departure_date: \u001b[32m'2024-01-01'\u001b[39m,\n  departure_time: \u001b[32m'10:00'\u001b[39m,\n  return_date: \u001b[32m'2024-01-05'\u001b[39m,\n  return_time: \u001b[32m'12:00'\u001b[39m,\n  duration: \u001b[32m'PT2H'\u001b[39m\n}\n\nstdout | src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display auto-booking banner if tripRequest.auto_book_enabled is true\n[TripConfirm] Component mounted with location: ?id=offer-for-auto-book&airline=AA&flight_number=123&price=500&departure_date=2024-01-01&departure_time=10:00&return_date=2024-01-05&return_time=12:00&duration=PT2H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-auto-book'\u001b[39m,\n  airline: \u001b[32m'AA'\u001b[39m,\n  flight_number: \u001b[32m'123'\u001b[39m,\n  price: \u001b[33m500\u001b[39m,\n  departure_date: \u001b[32m'2024-01-01'\u001b[39m,\n  departure_time: \u001b[32m'10:00'\u001b[39m,\n  return_date: \u001b[32m'2024-01-05'\u001b[39m,\n  return_time: \u001b[32m'12:00'\u001b[39m,\n  duration: \u001b[32m'PT2H'\u001b[39m\n}\n[TripConfirm] Component mounted with location: ?id=offer-for-auto-book&airline=AA&flight_number=123&price=500&departure_date=2024-01-01&departure_time=10:00&return_date=2024-01-05&return_time=12:00&duration=PT2H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-auto-book'\u001b[39m,\n  airline: \u001b[32m'AA'\u001b[39m,\n  flight_number: \u001b[32m'123'\u001b[39m,\n  price: \u001b[33m500\u001b[39m,\n  departure_date: \u001b[32m'2024-01-01'\u001b[39m,\n  departure_time: \u001b[32m'10:00'\u001b[39m,\n  return_date: \u001b[32m'2024-01-05'\u001b[39m,\n  return_time: \u001b[32m'12:00'\u001b[39m,\n  duration: \u001b[32m'PT2H'\u001b[39m\n}\n\nstdout | src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display auto-booking banner if tripRequest.auto_book_enabled is true\n[TripConfirm] Component mounted with location: ?id=offer-for-auto-book&airline=AA&flight_number=123&price=500&departure_date=2024-01-01&departure_time=10:00&return_date=2024-01-05&return_time=12:00&duration=PT2H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-auto-book'\u001b[39m,\n  airline: \u001b[32m'AA'\u001b[39m,\n  flight_number: \u001b[32m'123'\u001b[39m,\n  price: \u001b[33m500\u001b[39m,\n  departure_date: \u001b[32m'2024-01-01'\u001b[39m,\n  departure_time: \u001b[32m'10:00'\u001b[39m,\n  return_date: \u001b[32m'2024-01-05'\u001b[39m,\n  return_time: \u001b[32m'12:00'\u001b[39m,\n  duration: \u001b[32m'PT2H'\u001b[39m\n}\n\nstdout | src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display auto-booking banner if tripRequest.auto_book_enabled is true\n[TripConfirm] Component mounted with location: ?id=offer-for-auto-book&airline=AA&flight_number=123&price=500&departure_date=2024-01-01&departure_time=10:00&return_date=2024-01-05&return_time=12:00&duration=PT2H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-auto-book'\u001b[39m,\n  airline: \u001b[32m'AA'\u001b[39m,\n  flight_number: \u001b[32m'123'\u001b[39m,\n  price: \u001b[33m500\u001b[39m,\n  departure_date: \u001b[32m'2024-01-01'\u001b[39m,\n  departure_time: \u001b[32m'10:00'\u001b[39m,\n  return_date: \u001b[32m'2024-01-05'\u001b[39m,\n  return_time: \u001b[32m'12:00'\u001b[39m,\n  duration: \u001b[32m'PT2H'\u001b[39m\n}\n\n × |unit| src/tests/components/TripRequestForm.working-demo.test.tsx > Calendar Testing Solution - Working Demo > should successfully test form logic without complex UI interactions 434ms\n   → \nstdout | src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display \"Book Now\" button if tripRequest.auto_book_enabled is false\n[TripConfirm] Component mounted with location: ?id=offer-for-manual-book&airline=BB&flight_number=456&price=600&departure_date=2024-02-01&departure_time=11:00&return_date=2024-02-05&return_time=13:00&duration=PT3H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-manual-book'\u001b[39m,\n  airline: \u001b[32m'BB'\u001b[39m,\n  flight_number: \u001b[32m'456'\u001b[39m,\n  price: \u001b[33m600\u001b[39m,\n  departure_date: \u001b[32m'2024-02-01'\u001b[39m,\n  departure_time: \u001b[32m'11:00'\u001b[39m,\n  return_date: \u001b[32m'2024-02-05'\u001b[39m,\n  return_time: \u001b[32m'13:00'\u001b[39m,\n  duration: \u001b[32m'PT3H'\u001b[39m\n}\n[TripConfirm] Component mounted with location: ?id=offer-for-manual-book&airline=BB&flight_number=456&price=600&departure_date=2024-02-01&departure_time=11:00&return_date=2024-02-05&return_time=13:00&duration=PT3H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-manual-book'\u001b[39m,\n  airline: \u001b[32m'BB'\u001b[39m,\n  flight_number: \u001b[32m'456'\u001b[39m,\n  price: \u001b[33m600\u001b[39m,\n  departure_date: \u001b[32m'2024-02-01'\u001b[39m,\n  departure_time: \u001b[32m'11:00'\u001b[39m,\n  return_date: \u001b[32m'2024-02-05'\u001b[39m,\n  return_time: \u001b[32m'13:00'\u001b[39m,\n  duration: \u001b[32m'PT3H'\u001b[39m\n}\n\nstdout | src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display \"Book Now\" button if tripRequest.auto_book_enabled is false\n[TripConfirm] Component mounted with location: ?id=offer-for-manual-book&airline=BB&flight_number=456&price=600&departure_date=2024-02-01&departure_time=11:00&return_date=2024-02-05&return_time=13:00&duration=PT3H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-manual-book'\u001b[39m,\n  airline: \u001b[32m'BB'\u001b[39m,\n  flight_number: \u001b[32m'456'\u001b[39m,\n  price: \u001b[33m600\u001b[39m,\n  departure_date: \u001b[32m'2024-02-01'\u001b[39m,\n  departure_time: \u001b[32m'11:00'\u001b[39m,\n  return_date: \u001b[32m'2024-02-05'\u001b[39m,\n  return_time: \u001b[32m'13:00'\u001b[39m,\n  duration: \u001b[32m'PT3H'\u001b[39m\n}\n[TripConfirm] Component mounted with location: ?id=offer-for-manual-book&airline=BB&flight_number=456&price=600&departure_date=2024-02-01&departure_time=11:00&return_date=2024-02-05&return_time=13:00&duration=PT3H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-manual-book'\u001b[39m,\n  airline: \u001b[32m'BB'\u001b[39m,\n  flight_number: \u001b[32m'456'\u001b[39m,\n  price: \u001b[33m600\u001b[39m,\n  departure_date: \u001b[32m'2024-02-01'\u001b[39m,\n  departure_time: \u001b[32m'11:00'\u001b[39m,\n  return_date: \u001b[32m'2024-02-05'\u001b[39m,\n  return_time: \u001b[32m'13:00'\u001b[39m,\n  duration: \u001b[32m'PT3H'\u001b[39m\n}\n\n × |unit| src/tests/components/TripRequestForm.working-demo.test.tsx > Calendar Testing Solution - Working Demo > should demonstrate filter toggle testing (simple UI testing) 107ms\n   → \n × |unit| src/tests/components/TripRequestForm.working-demo.test.tsx > Calendar Testing Solution - Working Demo > should focus on business logic validation rather than UI implementation 122ms\n   → \n ✓ |unit| src/tests/components/TripRequestForm.working-demo.test.tsx > Migration Strategy Summary > should document the complete solution approach 2ms\n ❯ |unit| src/tests/components/TripRequestForm.working-demo.test.tsx (4 tests | 3 failed) 667ms\n   × Calendar Testing Solution - Working Demo > should successfully test form logic without complex UI interactions 434ms\n     → \n   × Calendar Testing Solution - Working Demo > should demonstrate filter toggle testing (simple UI testing) 107ms\n     → \n   × Calendar Testing Solution - Working Demo > should focus on business logic validation rather than UI implementation 122ms\n     → \n   ✓ Migration Strategy Summary > should document the complete solution approach 2ms\n ✓ |unit| src/tests/pages/Dashboard.test.tsx > Dashboard Page > 1. Renders loading state initially 85ms\nstdout | src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display \"Book Now\" button if tripRequest.auto_book_enabled is false\n[TripConfirm] Component mounted with location: ?id=offer-for-manual-book&airline=BB&flight_number=456&price=600&departure_date=2024-02-01&departure_time=11:00&return_date=2024-02-05&return_time=13:00&duration=PT3H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-manual-book'\u001b[39m,\n  airline: \u001b[32m'BB'\u001b[39m,\n  flight_number: \u001b[32m'456'\u001b[39m,\n  price: \u001b[33m600\u001b[39m,\n  departure_date: \u001b[32m'2024-02-01'\u001b[39m,\n  departure_time: \u001b[32m'11:00'\u001b[39m,\n  return_date: \u001b[32m'2024-02-05'\u001b[39m,\n  return_time: \u001b[32m'13:00'\u001b[39m,\n  duration: \u001b[32m'PT3H'\u001b[39m\n}\n[TripConfirm] Component mounted with location: ?id=offer-for-manual-book&airline=BB&flight_number=456&price=600&departure_date=2024-02-01&departure_time=11:00&return_date=2024-02-05&return_time=13:00&duration=PT3H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-manual-book'\u001b[39m,\n  airline: \u001b[32m'BB'\u001b[39m,\n  flight_number: \u001b[32m'456'\u001b[39m,\n  price: \u001b[33m600\u001b[39m,\n  departure_date: \u001b[32m'2024-02-01'\u001b[39m,\n  departure_time: \u001b[32m'11:00'\u001b[39m,\n  return_date: \u001b[32m'2024-02-05'\u001b[39m,\n  return_time: \u001b[32m'13:00'\u001b[39m,\n  duration: \u001b[32m'PT3H'\u001b[39m\n}\n\nstdout | src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display \"Book Now\" button if tripRequest.auto_book_enabled is false\n[TripConfirm] Component mounted with location: ?id=offer-for-manual-book&airline=BB&flight_number=456&price=600&departure_date=2024-02-01&departure_time=11:00&return_date=2024-02-05&return_time=13:00&duration=PT3H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-manual-book'\u001b[39m,\n  airline: \u001b[32m'BB'\u001b[39m,\n  flight_number: \u001b[32m'456'\u001b[39m,\n  price: \u001b[33m600\u001b[39m,\n  departure_date: \u001b[32m'2024-02-01'\u001b[39m,\n  departure_time: \u001b[32m'11:00'\u001b[39m,\n  return_date: \u001b[32m'2024-02-05'\u001b[39m,\n  return_time: \u001b[32m'13:00'\u001b[39m,\n  duration: \u001b[32m'PT3H'\u001b[39m\n}\n[TripConfirm] Component mounted with location: ?id=offer-for-manual-book&airline=BB&flight_number=456&price=600&departure_date=2024-02-01&departure_time=11:00&return_date=2024-02-05&return_time=13:00&duration=PT3H\n[TripConfirm] Parsed offer: {\n  id: \u001b[32m'offer-for-manual-book'\u001b[39m,\n  airline: \u001b[32m'BB'\u001b[39m,\n  flight_number: \u001b[32m'456'\u001b[39m,\n  price: \u001b[33m600\u001b[39m,\n  departure_date: \u001b[32m'2024-02-01'\u001b[39m,\n  departure_time: \u001b[32m'11:00'\u001b[39m,\n  return_date: \u001b[32m'2024-02-05'\u001b[39m,\n  return_time: \u001b[32m'13:00'\u001b[39m,\n  duration: \u001b[32m'PT3H'\u001b[39m\n}\n\n ✓ |unit| src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display auto-booking banner if tripRequest.auto_book_enabled is true 224ms\n ✓ |unit| src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should display \"Book Now\" button if tripRequest.auto_book_enabled is false 201ms\n ↓ |unit| src/tests/pages/TripConfirm.test.tsx > TripConfirm Page > should call toast on booking status update to \"done\"\n ✓ |unit| src/tests/pages/TripConfirm.test.tsx (3 tests | 1 skipped) 428ms\n ✓ |unit| src/tests/services/carry-on-fee.client.test.ts > computeCarryOnFee: malformed travelerPricings handled (null) 4ms\n ✓ |unit| src/tests/services/carry-on-fee.client.test.ts > computeCarryOnFee: empty travelerPricings array 1ms\n ✓ |unit| src/tests/services/carry-on-fee.client.test.ts > computeCarryOnFee: CARRY ON service found with amount 3ms\n ✓ |unit| src/tests/services/carry-on-fee.client.test.ts (3 tests) 9ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should return very low score for empty profile 5ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should calculate basic info score correctly 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should give higher score for complete profile 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should identify missing fields correctly 26ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should generate appropriate recommendations 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend phone verification when phone exists but not verified 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend passport update for expiring passport 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend identity verification when passport info is complete 2ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > getCompletionPercentage > should return the overall completion percentage 2ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > getNextAction > should return the highest priority recommendation 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > getNextAction > should return null for complete profile 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > meetsBookingRequirements > should return true for profile with required booking fields 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > meetsBookingRequirements > should return false and list missing requirements for incomplete profile 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate contact info score based on phone verification 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate travel documents score based on passport info 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate verification score based on identity verification 0ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate preferences score based on notification settings 1ms\n ✓ |unit| src/tests/services/profileCompletenessService.test.ts (17 tests) 47ms\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: trip-123. Invoking flight-search-v2...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: trip-123. Invoking flight-search-v2...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Response from 'flight-search-v2' for tripRequestId trip-123: { success: \u001b[33mtrue\u001b[39m, inserted: \u001b[33m5\u001b[39m }\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Response from 'flight-search-v2' for tripRequestId trip-123: { success: \u001b[33mtrue\u001b[39m, inserted: \u001b[33m5\u001b[39m }\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Transformed 0 legacy offers to V2 format\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Transformed 0 legacy offers to V2 format\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] Transformed 0 legacy offers to V2 format\n\nstdout | src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] Transformed 0 legacy offers to V2 format\n\n ✓ |unit| src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Pure helpers > transformLegacyToV2 should transform a single legacy offer 8ms\n ✓ |unit| src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Pure helpers > transformLegacyOffers should transform an array of legacy offers 2ms\n ✓ |unit| src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client 10ms\n ✓ |unit| src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true 3ms\n ✓ |unit| src/tests/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag 2ms\n ✓ |unit| src/tests/serverActions/getFlightOffers.refactored.test.ts (5 tests) 53ms\n ✓ |unit| src/tests/utils/getPoolDisplayName.test.ts > getPoolDisplayName > returns correct names for manual mode 5ms\n ✓ |unit| src/tests/utils/getPoolDisplayName.test.ts > getPoolDisplayName > returns correct names for auto mode 1ms\n ✓ |unit| src/tests/utils/getPoolDisplayName.test.ts (2 tests) 8ms\n × |unit| src/tests/pages/Dashboard.test.tsx > Dashboard Page > 2. Renders \"Active Watches\" tab by default when authenticated 1036ms\n   → Unable to find an element with the text: Welcome back, traveler! Where to next?. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div />\u001b[39m\n\u001b[36m</body>\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div />\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n ✓ |unit| tests/unit/hooks/usePoolsSafe.test.ts > usePoolsSafe > Normal operation > should return pools result when useTripOffersPools succeeds 40ms\n ✓ |unit| tests/unit/hooks/usePoolsSafe.test.ts > usePoolsSafe > Error handling and fallback > should fall back to legacy hook when useTripOffersPools has error state 24ms\n ✓ |unit| tests/unit/hooks/usePoolsSafe.test.ts > usePoolsSafe > Error handling and fallback > should show error toast when pools fail 30ms\n ✓ |unit| tests/unit/hooks/usePoolsSafe.test.ts > usePoolsSafe > Error handling and fallback > should clear cache when pools fail 10ms\n ✓ |unit| tests/unit/hooks/usePoolsSafe.test.ts > usePoolsSafe > Error handling and fallback > should handle cache-related errors with specific logging 4ms\n ✓ |unit| tests/unit/hooks/usePoolsSafe.test.ts > usePoolsSafe > Fallback behavior > should map legacy offers to pool1 with score 4ms\n ✓ |unit| tests/unit/hooks/usePoolsSafe.test.ts > usePoolsSafe > Fallback behavior > should map legacy trip details to budget and dateRange 3ms\n ✓ |unit| tests/unit/hooks/usePoolsSafe.test.ts (7 tests) 119ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Initial loading > should initialize with loading state when tripId is provided 36ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Initial loading > should not load when tripId is null 7ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Initial loading > should use initialTripDetails when provided 4ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Loading offers successfully > should load offers and apply duration filter by default 58ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Loading offers successfully > should show toast when duration filter is applied 56ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Loading offers successfully > should load all offers when ignoreFilter is true 107ms\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Connection Test > should test connection successfully\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Connection Test > should test connection successfully\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Connection Test > should test connection successfully\n✅ Duffel API connection successful\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Connection Test > should test connection successfully\n✅ Duffel API connection successful\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Connection Test > should handle connection test failures\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Connection Test > should handle connection test failures\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Rate Limiting > should respect rate limits per operation type\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Rate Limiting > should respect rate limits per operation type\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Utility Functions > should map passenger data correctly\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Utility Functions > should map passenger data correctly\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Utility Functions > should map trip requests to Duffel search parameters\n[DuffelService] Initialized in TEST mode\n\nstdout | src/tests/duffel-integration.test.ts > Duffel Integration Tests > Utility Functions > should map trip requests to Duffel search parameters\n[DuffelService] Initialized in TEST mode\n\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Error Handling > should provide default error message for unknown errors 7005ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Connection Test > should test connection successfully 1ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Connection Test > should handle connection test failures 5ms\n ✓ |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Rate Limiting > should respect rate limits per operation type 1ms\n × |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Utility Functions > should map passenger data correctly 2ms\n   → Cannot find module '../services/duffelServiceGuided'\nRequire stack:\n- /Users/parkerbarnett/github-link-up-buddy/src/tests/duffel-integration.test.ts\n × |unit| src/tests/duffel-integration.test.ts > Duffel Integration Tests > Utility Functions > should map trip requests to Duffel search parameters 1ms\n   → Cannot find module '../services/duffelServiceGuided'\nRequire stack:\n- /Users/parkerbarnett/github-link-up-buddy/src/tests/duffel-integration.test.ts\n ❯ |unit| src/tests/duffel-integration.test.ts (24 tests | 2 failed) 14077ms\n   ✓ Duffel Integration Tests > Environment Validation > should pass validation with proper test environment 6ms\n   ✓ Duffel Integration Tests > Environment Validation > should fail validation without required tokens 1ms\n   ✓ Duffel Integration Tests > Environment Validation > should validate token formats 6ms\n   ✓ Duffel Integration Tests > Environment Validation > should warn about live mode configuration issues 2ms\n   ✓ Duffel Integration Tests > Service Initialization > should initialize in TEST mode by default 2ms\n   ✓ Duffel Integration Tests > Service Initialization > should initialize in LIVE mode when enabled 1ms\n   ✓ Duffel Integration Tests > Service Initialization > should throw error without required tokens 1ms\n   ✓ Duffel Integration Tests > Flight Search (Offer Request) > should create offer request with proper parameters 4ms\n   ✓ Duffel Integration Tests > Flight Search (Offer Request) > should create round-trip offer request 15ms\n   ✓ Duffel Integration Tests > Offers Retrieval > should get offers and filter expired ones 1ms\n   ✓ Duffel Integration Tests > Offers Retrieval > should validate individual offers 1ms\n   ✓ Duffel Integration Tests > Offers Retrieval > should return null for expired offers 1ms\n   ✓ Duffel Integration Tests > Offer Validation > should validate offer expiration with safety buffer 1ms\n   ✓ Duffel Integration Tests > Offer Validation > should reject offers within safety buffer 1ms\n   ✓ Duffel Integration Tests > Order Creation > should create order with idempotency 3ms\n   ✓ Duffel Integration Tests > Order Creation > should reject expired offers before booking 2ms\n   ✓ Duffel Integration Tests > Error Handling > should map Duffel API errors to user-friendly messages 6ms\n   ✓ Duffel Integration Tests > Error Handling > should handle rate limiting errors  7004ms\n   ✓ Duffel Integration Tests > Error Handling > should provide default error message for unknown errors  7005ms\n   ✓ Duffel Integration Tests > Connection Test > should test connection successfully 1ms\n   ✓ Duffel Integration Tests > Connection Test > should handle connection test failures 5ms\n   ✓ Duffel Integration Tests > Rate Limiting > should respect rate limits per operation type 1ms\n   × Duffel Integration Tests > Utility Functions > should map passenger data correctly 2ms\n     → Cannot find module '../services/duffelServiceGuided'\nRequire stack:\n- /Users/parkerbarnett/github-link-up-buddy/src/tests/duffel-integration.test.ts\n   × Duffel Integration Tests > Utility Functions > should map trip requests to Duffel search parameters 1ms\n     → Cannot find module '../services/duffelServiceGuided'\nRequire stack:\n- /Users/parkerbarnett/github-link-up-buddy/src/tests/duffel-integration.test.ts\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return true for offers within duration range 5ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return false for offers outside duration range 1ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return true for offers at exact minimum duration 1ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return true for offers at exact maximum duration 5ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return false for offers with missing departure_date 16ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return false for offers with missing return_date 1ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should return false for offers with invalid dates 1ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should handle edge case of same day return (0 days) 2ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > validateDuration > should calculate duration correctly across months 2ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > buildCacheKey > should build cache key with correct format 1ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > buildCacheKey > should handle different parameter combinations 1ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > buildCacheKey > should include legacy prefix to distinguish from other cache keys 1ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts > useTripOffersLegacy Helper Functions > buildCacheKey > should handle special characters in trip ID 0ms\n ✓ |unit| tests/unit/hooks/useTripOffersLegacy.helpers.test.ts (13 tests) 38ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Error handling > should handle flight search API errors 56ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Error handling > should fall back to existing offers when search fails 56ms\n × |unit| src/tests/pages/Dashboard.test.tsx > Dashboard Page > 3. Switches to \"My Trips\" tab, renders TripHistory component with userId 1010ms\n   → Unable to find an element with the text: Welcome back, traveler! Where to next?. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div />\u001b[39m\n\u001b[36m</body>\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div />\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Error handling > should handle Supabase errors when fetching trip details 57ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Error handling > should handle missing trip ID 2ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Refresh functionality > should refresh offers when refreshOffers is called 56ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Refresh functionality > should prevent rapid successive refreshes 6ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Relaxed criteria search > should handle relaxed criteria search 111ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Caching > should use cached results for repeated requests 57ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Duration validation > should filter out offers with invalid dates 54ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > Duration validation > should show appropriate message when no offers match duration 54ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts > useTripOffers > No offers scenarios > should handle when no offers are found 55ms\n ✓ |unit| tests/unit/hooks/useTripOffers.test.ts (17 tests) 836ms\nstdout | tests/unit/hooks/useTripOffersPools.test.ts > useTripOffersPools > should handle budget bumping correctly\n[INFO] [🔍 POOLS-DEBUG] Calling fetchFlightSearch for tripId: test-trip\n[INFO] [🔍 POOLS-DEBUG] Calling fetchFlightSearch for tripId: test-trip\n[INFO] [🔍 POOLS-DEBUG] fetchFlightSearch response: {\n  pool1Count: \u001b[33m0\u001b[39m,\n  pool2Count: \u001b[33m0\u001b[39m,\n  pool3Count: \u001b[33m0\u001b[39m,\n  totalOffers: \u001b[33m0\u001b[39m,\n  success: \u001b[33mtrue\u001b[39m,\n  message: \u001b[32m'Test success'\u001b[39m\n}\n[INFO] [🔍 POOLS-DEBUG] Setting pools state: { pool1Count: \u001b[33m0\u001b[39m, pool2Count: \u001b[33m0\u001b[39m, pool3Count: \u001b[33m0\u001b[39m }\n[INFO] [useTripOffersPools] Pool results cached in unifiedCache for key: test-trip-1000-manual\n[INFO] [🔍 POOLS-DEBUG] fetchFlightSearch response: {\n  pool1Count: \u001b[33m0\u001b[39m,\n  pool2Count: \u001b[33m0\u001b[39m,\n  pool3Count: \u001b[33m0\u001b[39m,\n  totalOffers: \u001b[33m0\u001b[39m,\n  success: \u001b[33mtrue\u001b[39m,\n  message: \u001b[32m'Test success'\u001b[39m\n}\n[INFO] [🔍 POOLS-DEBUG] Setting pools state: { pool1Count: \u001b[33m0\u001b[39m, pool2Count: \u001b[33m0\u001b[39m, pool3Count: \u001b[33m0\u001b[39m }\n[INFO] [useTripOffersPools] Pool results cached in unifiedCache for key: test-trip-1200-manual\n\nstdout | tests/unit/hooks/useTripOffersPools.test.ts > useTripOffersPools > should handle budget bumping correctly\n[INFO] [🔍 POOLS-DEBUG] Calling fetchFlightSearch for tripId: test-trip\n[INFO] [🔍 POOLS-DEBUG] Calling fetchFlightSearch for tripId: test-trip\n[INFO] [🔍 POOLS-DEBUG] fetchFlightSearch response: {\n  pool1Count: \u001b[33m0\u001b[39m,\n  pool2Count: \u001b[33m0\u001b[39m,\n  pool3Count: \u001b[33m0\u001b[39m,\n  totalOffers: \u001b[33m0\u001b[39m,\n  success: \u001b[33mtrue\u001b[39m,\n  message: \u001b[32m'Test success'\u001b[39m\n}\n[INFO] [🔍 POOLS-DEBUG] Setting pools state: { pool1Count: \u001b[33m0\u001b[39m, pool2Count: \u001b[33m0\u001b[39m, pool3Count: \u001b[33m0\u001b[39m }\n[INFO] [useTripOffersPools] Pool results cached in unifiedCache for key: test-trip-1000-manual\n[INFO] [🔍 POOLS-DEBUG] fetchFlightSearch response: {\n  pool1Count: \u001b[33m0\u001b[39m,\n  pool2Count: \u001b[33m0\u001b[39m,\n  pool3Count: \u001b[33m0\u001b[39m,\n  totalOffers: \u001b[33m0\u001b[39m,\n  success: \u001b[33mtrue\u001b[39m,\n  message: \u001b[32m'Test success'\u001b[39m\n}\n[INFO] [🔍 POOLS-DEBUG] Setting pools state: { pool1Count: \u001b[33m0\u001b[39m, pool2Count: \u001b[33m0\u001b[39m, pool3Count: \u001b[33m0\u001b[39m }\n[INFO] [useTripOffersPools] Pool results cached in unifiedCache for key: test-trip-1200-manual\n\nstdout | tests/unit/hooks/useTripOffersPools.test.ts > useTripOffersPools > should prevent budget bumping after 3 uses\n[INFO] [useTripOffersPools] Using cached results from unifiedCache for key: test-trip-1000-manual\n[INFO] [useTripOffersPools] Using cached results from unifiedCache for key: test-trip-1200-manual\n\nstdout | tests/unit/hooks/useTripOffersPools.test.ts > useTripOffersPools > should prevent budget bumping after 3 uses\n[INFO] [useTripOffersPools] Using cached results from unifiedCache for key: test-trip-1000-manual\n[INFO] [useTripOffersPools] Using cached results from unifiedCache for key: test-trip-1200-manual\n\n ✓ |unit| tests/unit/hooks/useTripOffersPools.test.ts > useTripOffersPools > should initialize with default values 47ms\n ✓ |unit| tests/unit/hooks/useTripOffersPools.test.ts > useTripOffersPools > should handle budget bumping correctly 18ms\n ✓ |unit| tests/unit/hooks/useTripOffersPools.test.ts > useTripOffersPools > should prevent budget bumping after 3 uses 11ms\n ✓ |unit| tests/unit/hooks/useTripOffersPools.test.ts (3 tests) 78ms\n × |unit| src/tests/pages/Dashboard.test.tsx > Dashboard Page > 4. Switches back to \"Active Watches\" tab 1010ms\n   → Unable to find an element with the text: Welcome back, traveler! Where to next?. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div />\u001b[39m\n\u001b[36m</body>\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div />\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n ✓ |unit| src/tests/pages/Dashboard.test.tsx > Dashboard Page > 5. Handles unauthenticated state (simulates redirect to /login) 18ms\n ❯ |unit| src/tests/pages/Dashboard.test.tsx (5 tests | 3 failed) 3160ms\n   ✓ Dashboard Page > 1. Renders loading state initially 85ms\n   × Dashboard Page > 2. Renders \"Active Watches\" tab by default when authenticated 1036ms\n     → Unable to find an element with the text: Welcome back, traveler! Where to next?. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div />\u001b[39m\n\u001b[36m</body>\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div />\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n   × Dashboard Page > 3. Switches to \"My Trips\" tab, renders TripHistory component with userId 1010ms\n     → Unable to find an element with the text: Welcome back, traveler! Where to next?. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div />\u001b[39m\n\u001b[36m</body>\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div />\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n   × Dashboard Page > 4. Switches back to \"Active Watches\" tab 1010ms\n     → Unable to find an element with the text: Welcome back, traveler! Where to next?. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div />\u001b[39m\n\u001b[36m</body>\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div />\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n   ✓ Dashboard Page > 5. Handles unauthenticated state (simulates redirect to /login) 18ms\n ✓ |unit| tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 1. Renders loading state initially 98ms\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Analytics Integration > should initialize analytics with correct form configuration 321ms\n   → resizeObserver.observe is not a function\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Analytics Integration > should track field interactions on input changes 57ms\n   → resizeObserver.observe is not a function\nstdout | tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 2. Renders \"Active Watches\" tab by default when authenticated\n📊 Greeting shown: {\n  type: \u001b[32m'greeting_shown'\u001b[39m,\n  context: \u001b[32m'dashboard'\u001b[39m,\n  data: {\n    variant: \u001b[32m'default'\u001b[39m,\n    hasPersonalData: \u001b[33mtrue\u001b[39m,\n    interactionType: \u001b[32m'static'\u001b[39m\n  },\n  timestamp: \u001b[35m2025-07-21T19:02:45.359Z\u001b[39m,\n  userId: \u001b[32m'user-123'\u001b[39m\n}\nReal-time subscription for booking requests disabled\n\nstdout | tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 2. Renders \"Active Watches\" tab by default when authenticated\n📊 Greeting shown: {\n  type: \u001b[32m'greeting_shown'\u001b[39m,\n  context: \u001b[32m'dashboard'\u001b[39m,\n  data: {\n    variant: \u001b[32m'default'\u001b[39m,\n    hasPersonalData: \u001b[33mtrue\u001b[39m,\n    interactionType: \u001b[32m'static'\u001b[39m\n  },\n  timestamp: \u001b[35m2025-07-21T19:02:45.359Z\u001b[39m,\n  userId: \u001b[32m'user-123'\u001b[39m\n}\nReal-time subscription for booking requests disabled\n\n ✓ |unit| tests/unit/components/ConstraintChips.test.tsx > ConstraintChips > renders carry-on included chip 174ms\n ✓ |unit| tests/unit/components/ConstraintChips.test.tsx > ConstraintChips > renders date range chip with formatted dates 38ms\n ✓ |unit| tests/unit/components/ConstraintChips.test.tsx > ConstraintChips > renders non-stop only chip 28ms\n ✓ |unit| tests/unit/components/ConstraintChips.test.tsx > ConstraintChips > calls onToggleNonStop when non-stop chip is clicked 27ms\n ✓ |unit| tests/unit/components/ConstraintChips.test.tsx > ConstraintChips > shows different styling when nonStopOnly is true 116ms\n ✓ |unit| tests/unit/components/ConstraintChips.test.tsx (5 tests) 396ms\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Analytics Integration > should track field errors for invalid business rule values 97ms\n   → resizeObserver.observe is not a function\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Analytics Integration > should track form submission with correct data 70ms\n   → resizeObserver.observe is not a function\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Analytics Integration > should display config-driven price range in UI 64ms\n   → resizeObserver.observe is not a function\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Analytics Integration > should only show cabin classes allowed by configuration 60ms\n   → resizeObserver.observe is not a function\nstdout | tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 3. Switches to \"My Trips\" tab, renders TripHistory component with userId\n📊 Greeting shown: {\n  type: \u001b[32m'greeting_shown'\u001b[39m,\n  context: \u001b[32m'dashboard'\u001b[39m,\n  data: {\n    variant: \u001b[32m'default'\u001b[39m,\n    hasPersonalData: \u001b[33mtrue\u001b[39m,\n    interactionType: \u001b[32m'static'\u001b[39m\n  },\n  timestamp: \u001b[35m2025-07-21T19:02:45.547Z\u001b[39m,\n  userId: \u001b[32m'user-123'\u001b[39m\n}\nReal-time subscription for booking requests disabled\n\nstdout | tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 3. Switches to \"My Trips\" tab, renders TripHistory component with userId\n📊 Greeting shown: {\n  type: \u001b[32m'greeting_shown'\u001b[39m,\n  context: \u001b[32m'dashboard'\u001b[39m,\n  data: {\n    variant: \u001b[32m'default'\u001b[39m,\n    hasPersonalData: \u001b[33mtrue\u001b[39m,\n    interactionType: \u001b[32m'static'\u001b[39m\n  },\n  timestamp: \u001b[35m2025-07-21T19:02:45.547Z\u001b[39m,\n  userId: \u001b[32m'user-123'\u001b[39m\n}\nReal-time subscription for booking requests disabled\n\n ✓ |unit| tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 2. Renders \"Active Watches\" tab by default when authenticated 449ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Pure helper function > formatDateRange should format dates correctly 60ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Pure helper function > formatDateRange should handle different months 2ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Pure helper function > formatDateRange should handle timezone parameter 1ms\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Business Rules Validation > should enforce config-driven minimum price 53ms\n   → resizeObserver.observe is not a function\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Business Rules Validation > should enforce config-driven maximum price 63ms\n   → resizeObserver.observe is not a function\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Component rendering with semantic elements > should render all chips with proper accessibility roles 184ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Component rendering with semantic elements > should render formatted date range 18ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Component rendering with semantic elements > should show non-stop toggle as disabled by default 21ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Component rendering with semantic elements > should show non-stop toggle as enabled when nonStopOnly is true 25ms\nstdout | tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 4. Switches back to \"Active Watches\" tab\n📊 Greeting shown: {\n  type: \u001b[32m'greeting_shown'\u001b[39m,\n  context: \u001b[32m'dashboard'\u001b[39m,\n  data: {\n    variant: \u001b[32m'default'\u001b[39m,\n    hasPersonalData: \u001b[33mtrue\u001b[39m,\n    interactionType: \u001b[32m'static'\u001b[39m\n  },\n  timestamp: \u001b[35m2025-07-21T19:02:45.809Z\u001b[39m,\n  userId: \u001b[32m'user-123'\u001b[39m\n}\nReal-time subscription for booking requests disabled\n\nstdout | tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 4. Switches back to \"Active Watches\" tab\n📊 Greeting shown: {\n  type: \u001b[32m'greeting_shown'\u001b[39m,\n  context: \u001b[32m'dashboard'\u001b[39m,\n  data: {\n    variant: \u001b[32m'default'\u001b[39m,\n    hasPersonalData: \u001b[33mtrue\u001b[39m,\n    interactionType: \u001b[32m'static'\u001b[39m\n  },\n  timestamp: \u001b[35m2025-07-21T19:02:45.809Z\u001b[39m,\n  userId: \u001b[32m'user-123'\u001b[39m\n}\nReal-time subscription for booking requests disabled\n\n × |unit| tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 3. Switches to \"My Trips\" tab, renders TripHistory component with userId 276ms\n   → expected \"spy\" to be called with arguments: [ ObjectContaining{…}, Anything ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[2m      \"userId\": \"user-123\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[32m-   Anything,\u001b[90m\n\u001b[31m+   undefined,\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Business Rules Validation > should disable form when auto-booking is disabled in config 80ms\n   → resizeObserver.observe is not a function\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Business Rules Validation > should show configuration version and auto-booking status 58ms\n   → resizeObserver.observe is not a function\nstdout | tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > calls bumpBudget and shows toast when budget button is clicked\n[ANALYTICS] BUDGET_BUMPED { tripId: \u001b[32m'test-trip'\u001b[39m, bumpsUsed: \u001b[33m1\u001b[39m, newBudget: \u001b[33m1000\u001b[39m, maxBudget: \u001b[33m3000\u001b[39m }\n\nstdout | tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > calls bumpBudget and shows toast when budget button is clicked\n[ANALYTICS] BUDGET_BUMPED { tripId: \u001b[32m'test-trip'\u001b[39m, bumpsUsed: \u001b[33m1\u001b[39m, newBudget: \u001b[33m1000\u001b[39m, maxBudget: \u001b[33m3000\u001b[39m }\n\n ✓ |unit| tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > renders ConstraintChips with correct dateRange 192ms\n ✓ |unit| tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > displays budget information correctly 38ms\n ✓ |unit| tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > enables budget button when bumps < 3 and budget < maxBudget 24ms\n ✓ |unit| tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > disables budget button when bumpsUsed >= 3 11ms\n ✓ |unit| tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > disables budget button when budget >= maxBudget 10ms\n ✓ |unit| tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > calls bumpBudget and shows toast when budget button is clicked 39ms\n ✓ |unit| tests/unit/components/PoolOfferControls.test.tsx > PoolOfferControls > shows bumps used indicator when bumpsUsed > 0 6ms\n ✓ |unit| tests/unit/components/PoolOfferControls.test.tsx (7 tests) 322ms\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Loading and Error States > should show loading state when config is loading 51ms\n   → resizeObserver.observe is not a function\n × |unit| tests/unit/components/CampaignForm.test.tsx > CampaignForm Loading and Error States > should show error state when config fails to load 47ms\n   → resizeObserver.observe is not a function\n ❯ |unit| tests/unit/components/CampaignForm.test.tsx (12 tests | 12 failed) 1034ms\n   × CampaignForm Analytics Integration > should initialize analytics with correct form configuration 321ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Analytics Integration > should track field interactions on input changes 57ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Analytics Integration > should track field errors for invalid business rule values 97ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Analytics Integration > should track form submission with correct data 70ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Analytics Integration > should display config-driven price range in UI 64ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Analytics Integration > should only show cabin classes allowed by configuration 60ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Business Rules Validation > should enforce config-driven minimum price 53ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Business Rules Validation > should enforce config-driven maximum price 63ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Business Rules Validation > should disable form when auto-booking is disabled in config 80ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Business Rules Validation > should show configuration version and auto-booking status 58ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Loading and Error States > should show loading state when config is loading 51ms\n     → resizeObserver.observe is not a function\n   × CampaignForm Loading and Error States > should show error state when config fails to load 47ms\n     → resizeObserver.observe is not a function\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > User interactions > should call onToggleNonStop when non-stop button is clicked 197ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > User interactions > should toggle non-stop using getByRole for accessibility testing 72ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > User interactions > should handle keyboard interactions 15ms\n ✓ |unit| tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 4. Switches back to \"Active Watches\" tab 241ms\n ✓ |unit| tests/unit/pages/Dashboard.test.tsx > Dashboard Page > 5. Handles unauthenticated state (simulates redirect to /login) 73ms\n ❯ |unit| tests/unit/pages/Dashboard.test.tsx (5 tests | 1 failed) 1139ms\n   ✓ Dashboard Page > 1. Renders loading state initially 98ms\n   ✓ Dashboard Page > 2. Renders \"Active Watches\" tab by default when authenticated  449ms\n   × Dashboard Page > 3. Switches to \"My Trips\" tab, renders TripHistory component with userId 276ms\n     → expected \"spy\" to be called with arguments: [ ObjectContaining{…}, Anything ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[2m      \"userId\": \"user-123\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[32m-   Anything,\u001b[90m\n\u001b[31m+   undefined,\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n   ✓ Dashboard Page > 4. Switches back to \"Active Watches\" tab 241ms\n   ✓ Dashboard Page > 5. Handles unauthenticated state (simulates redirect to /login) 73ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Visual states > should render different states for non-stop toggle 27ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx > ConstraintChips (Refactored) > Visual states > should have proper accessibility labels for each state 105ms\n ✓ |unit| tests/unit/components/ConstraintChips.refactored.test.tsx (12 tests) 730ms\n ✓ |unit| tests/unit/utils/getPoolDisplayName.test.ts > getPoolDisplayName > returns correct names for manual mode 4ms\n ✓ |unit| tests/unit/utils/getPoolDisplayName.test.ts > getPoolDisplayName > returns correct names for auto mode 1ms\n ✓ |unit| tests/unit/utils/getPoolDisplayName.test.ts (2 tests) 7ms\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client\n[ServerAction/getFlightOffers] Found 1 offers in flight_offers_v2 table\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: trip-123. Invoking flight-search-v2...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Refresh requested for tripRequestId: trip-123. Invoking flight-search-v2...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Response from 'flight-search-v2' for tripRequestId trip-123: { success: \u001b[33mtrue\u001b[39m, inserted: \u001b[33m5\u001b[39m }\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Response from 'flight-search-v2' for tripRequestId trip-123: { success: \u001b[33mtrue\u001b[39m, inserted: \u001b[33m5\u001b[39m }\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Transformed 0 legacy offers to V2 format\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true\n[ServerAction/getFlightOffers] Transformed 0 legacy offers to V2 format\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] Cache miss or stale for tripRequestId: trip-123. Fetching from flight_offers_v2 table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] No V2 data found, falling back to legacy flight_offers table...\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] Transformed 0 legacy offers to V2 format\n\nstdout | tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag\n[ServerAction/getFlightOffers] Transformed 0 legacy offers to V2 format\n\n ✓ |unit| tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Pure helpers > transformLegacyToV2 should transform a single legacy offer 6ms\n ✓ |unit| tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Pure helpers > transformLegacyOffers should transform an array of legacy offers 43ms\n ✓ |unit| tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected Supabase client 4ms\n ✓ |unit| tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Dependency injection > should use injected edge function when refresh is true 3ms\n ✓ |unit| tests/unit/serverActions/getFlightOffers.refactored.test.ts > getFlightOffers (Refactored) > Cache behavior in test environment > should respect useCache flag 23ms\n ✓ |unit| tests/unit/serverActions/getFlightOffers.refactored.test.ts (5 tests) 83ms\n ✓ |unit| tests/unit/services/carry-on-fee.client.test.ts > computeCarryOnFee: malformed travelerPricings handled (null) 5ms\n ✓ |unit| tests/unit/services/carry-on-fee.client.test.ts > computeCarryOnFee: empty travelerPricings array 1ms\n ✓ |unit| tests/unit/services/carry-on-fee.client.test.ts > computeCarryOnFee: CARRY ON service found with amount 1ms\n ✓ |unit| tests/unit/services/carry-on-fee.client.test.ts (3 tests) 9ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should return very low score for empty profile 5ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should calculate basic info score correctly 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should give higher score for complete profile 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should identify missing fields correctly 3ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should generate appropriate recommendations 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend phone verification when phone exists but not verified 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend passport update for expiring passport 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > calculateCompleteness > should recommend identity verification when passport info is complete 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > getCompletionPercentage > should return the overall completion percentage 2ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > getNextAction > should return the highest priority recommendation 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > getNextAction > should return null for complete profile 0ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > meetsBookingRequirements > should return true for profile with required booking fields 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > meetsBookingRequirements > should return false and list missing requirements for incomplete profile 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate contact info score based on phone verification 0ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate travel documents score based on passport info 8ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate verification score based on identity verification 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts > ProfileCompletenessService > category scores > should calculate preferences score based on notification settings 1ms\n ✓ |unit| tests/unit/services/profileCompletenessService.test.ts (17 tests) 30ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should successfully retrieve a secret value 17ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should handle binary secret values 5ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should handle undefined secret values 3ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should propagate errors from the error handler 10ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should work with different AWS regions 4ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > getSecretValue > should work with different secret naming conventions 3ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Error Scenarios > should handle client creation errors 3ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Error Scenarios > should handle network timeouts 4ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Error Scenarios > should handle authentication errors 4ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Environment Configuration > should use production environment when NODE_ENV is production 3ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts > AWS Secrets Manager Integration - Standalone > Environment Configuration > should default to development environment when NODE_ENV is not set 3ms\n ✓ |unit| src/lib/aws-sdk-enhanced/__tests__/secrets-manager.standalone.test.ts (11 tests) 63ms\n ✓ |unit| src/lib/business-rules/__tests__/ConfigLoader.test.ts > ConfigLoader > should load and validate config successfully 9ms\n ✓ |unit| src/lib/business-rules/__tests__/ConfigLoader.test.ts > ConfigLoader > should return fallback config on fetch failure 7ms\n ✓ |unit| src/lib/business-rules/__tests__/ConfigLoader.test.ts > ConfigLoader > should cache config and reuse it 2ms\n ✓ |unit| src/lib/business-rules/__tests__/ConfigLoader.test.ts (3 tests) 29ms\nstdout | src/lib/errors/__tests__/handler.test.ts > ErrorHandler > handle > should return formatted error response\n[INFO] Client error: Test validation error {\n  \"code\": \"VALIDATION_ERROR\",\n  \"message\": \"Test validation error\",\n  \"retryable\": false,\n  \"timestamp\": \"2025-07-21T19:02:48.743Z\"\n}\n\nstdout | src/lib/errors/__tests__/handler.test.ts > ErrorHandler > handle > should return formatted error response\n[INFO] Client error: Test validation error {\n  \"code\": \"VALIDATION_ERROR\",\n  \"message\": \"Test validation error\",\n  \"retryable\": false,\n  \"timestamp\": \"2025-07-21T19:02:48.743Z\"\n}\n\nstdout | src/lib/errors/__tests__/handler.test.ts > ErrorHandler > handle > should include userMessage when available\n[INFO] Client error: Technical error {\n  \"code\": \"VALIDATION_ERROR\",\n  \"message\": \"Technical error\",\n  \"context\": {},\n  \"retryable\": false,\n  \"timestamp\": \"2025-07-21T19:02:48.746Z\"\n}\n\nstdout | src/lib/errors/__tests__/handler.test.ts > ErrorHandler > handle > should include userMessage when available\n[INFO] Client error: Technical error {\n  \"code\": \"VALIDATION_ERROR\",\n  \"message\": \"Technical error\",\n  \"context\": {},\n  \"retryable\": false,\n  \"timestamp\": \"2025-07-21T19:02:48.746Z\"\n}\n\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > normalizeError > should pass through AppError instances unchanged 5ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > normalizeError > should convert JavaScript Error to BusinessLogicError 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > normalizeError > should identify network errors 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > normalizeError > should identify validation errors from message content 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > normalizeError > should handle string errors 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > normalizeError > should handle unknown error types 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > mapExternalApiError > should map known Amadeus error codes 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > mapExternalApiError > should map known Duffel error types 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > mapExternalApiError > should handle unknown external API errors 2ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > handle > should return formatted error response 3ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > handle > should include userMessage when available 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > ErrorHandler > handleAndThrow > should normalize error and throw AppError 80ms\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize successfully with resilience features disabled\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize successfully with resilience features disabled\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize successfully with resilience features disabled\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize successfully with resilience features disabled\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize with resilience features enabled\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize with resilience features enabled\nLaunchDarkly client initialized successfully in 0ms\n\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > Convenience functions > should export handleError function 2ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > Convenience functions > should export mapAmadeusError function 1ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > Convenience functions > should export mapDuffelError function 0ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts > Error logging > should log errors with appropriate levels 4ms\n ✓ |unit| src/lib/errors/__tests__/handler.test.ts (16 tests) 108ms\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize with resilience features enabled\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize with resilience features enabled\nAll developer overrides cleared\n\n ✓ |unit| src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize successfully with resilience features disabled 24ms\n ✓ |unit| src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should initialize with resilience features enabled 15ms\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a standard pipeline with all filters\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a standard pipeline with all filters\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a budget pipeline with limited filters\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a budget pipeline with limited filters\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a fast pipeline with essential filters only\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a fast pipeline with essential filters only\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Context Creation > should create proper filter context from search parameters\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Context Creation > should create proper filter context from search parameters\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Context Creation > should handle alternative parameter names\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Context Creation > should handle alternative parameter names\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should filter out one-way offers for round-trip searches\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should filter out one-way offers for round-trip searches\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should filter out one-way offers for round-trip searches\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] Filtered out offer without 2 itineraries: ow1 (has 1)\n[RoundTripFilter] Filtered out offer without 2 itineraries: ow2 (has 1)\n[RoundTripFilter] After itinerary count filter: 4 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 4 → 2 offers (removed 2)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should filter out one-way offers for round-trip searches\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] Filtered out offer without 2 itineraries: ow1 (has 1)\n[RoundTripFilter] Filtered out offer without 2 itineraries: ow2 (has 1)\n[RoundTripFilter] After itinerary count filter: 4 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 4 → 2 offers (removed 2)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should validate round-trip routing\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should validate round-trip routing\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should validate round-trip routing\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] Offer rt2: Invalid routing - expected JFK→LAX→JFK, got JFK→LAX→ORD\n[RoundTripFilter] After routing validation: 2 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 1 offers (removed 1)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should validate round-trip routing\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] Offer rt2: Invalid routing - expected JFK→LAX→JFK, got JFK→LAX→ORD\n[RoundTripFilter] After routing validation: 2 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 1 offers (removed 1)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should handle one-way searches properly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should handle one-way searches properly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should handle one-way searches properly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: rt1\n[RoundTripFilter] One-way filtering: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should handle one-way searches properly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: rt1\n[RoundTripFilter] One-way filtering: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m400\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m400\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget\n[BudgetFilter] Starting budget filtering with budget: 400 USD\n[BudgetFilter] Effective budget (with tolerance): 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget\n[BudgetFilter] Starting budget filtering with budget: 400 USD\n[BudgetFilter] Effective budget (with tolerance): 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget\n[BudgetFilter] Filtered out offer expensive: 500 USD > 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget\n[BudgetFilter] Filtered out offer expensive: 500 USD > 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget\n[BudgetFilter] Filtered out offer very-expensive: 600 USD > 450 USD\n[BudgetFilter] Budget filtering complete: 4 → 2 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget\n[BudgetFilter] Filtered out offer very-expensive: 600 USD > 450 USD\n[BudgetFilter] Budget filtering complete: 4 → 2 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should apply budget tolerance\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m400\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should apply budget tolerance\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m400\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should apply budget tolerance\n[BudgetFilter] Starting budget filtering with budget: 400 USD\n[BudgetFilter] Effective budget (with tolerance): 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should apply budget tolerance\n[BudgetFilter] Starting budget filtering with budget: 400 USD\n[BudgetFilter] Effective budget (with tolerance): 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should apply budget tolerance\n[BudgetFilter] Filtered out offer beyond-tolerance: 460 USD > 450 USD\n[BudgetFilter] Budget filtering complete: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should apply budget tolerance\n[BudgetFilter] Filtered out offer beyond-tolerance: 460 USD > 450 USD\n[BudgetFilter] Budget filtering complete: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m400\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m400\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion\n[BudgetFilter] Starting budget filtering with budget: 400 USD\n[BudgetFilter] Effective budget (with tolerance): 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion\n[BudgetFilter] Starting budget filtering with budget: 400 USD\n[BudgetFilter] Effective budget (with tolerance): 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion\n[BudgetFilter] Currency conversion: 350 EUR → 433.65 USD (with 5% buffer)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion\n[BudgetFilter] Currency conversion: 350 EUR → 433.65 USD (with 5% buffer)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion\n[BudgetFilter] Performed 1 currency conversions\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion\n[BudgetFilter] Performed 1 currency conversions\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should filter out flights with stops when nonstop required\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should filter out flights with stops when nonstop required\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should filter out flights with stops when nonstop required\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Filtering for nonstop flights only (app requirement)\n[NonstopFilter] Offer with-stops1: Contains itinerary with stops\n[NonstopFilter] Offer with-stops2: Contains itinerary with stops\n[NonstopFilter] Nonstop filtering complete: 4 → 2 offers (removed 2 with stops)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should filter out flights with stops when nonstop required\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Filtering for nonstop flights only (app requirement)\n[NonstopFilter] Offer with-stops1: Contains itinerary with stops\n[NonstopFilter] Offer with-stops2: Contains itinerary with stops\n[NonstopFilter] Nonstop filtering complete: 4 → 2 offers (removed 2 with stops)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should return all offers when nonstop not required\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should return all offers when nonstop not required\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should return all offers when nonstop not required\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should return all offers when nonstop not required\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m400\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n[FilterPipeline] Starting execution with 5 offers\n[FilterPipeline] Executing filter: RoundTripFilter (5 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] Filtered out offer without 2 itineraries: one-way (has 1)\n[RoundTripFilter] After itinerary count filter: 5 → 4 offers\n[RoundTripFilter] After routing validation: 4 → 4 offers\n[RoundTripFilter] After provider-specific validation: 4 → 4 offers\n[RoundTripFilter] Round-trip filtering complete: 5 → 4 offers (removed 1)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m400\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n[FilterPipeline] Starting execution with 5 offers\n[FilterPipeline] Executing filter: RoundTripFilter (5 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] Filtered out offer without 2 itineraries: one-way (has 1)\n[RoundTripFilter] After itinerary count filter: 5 → 4 offers\n[RoundTripFilter] After routing validation: 4 → 4 offers\n[RoundTripFilter] After provider-specific validation: 4 → 4 offers\n[RoundTripFilter] Round-trip filtering complete: 5 → 4 offers (removed 1)\n\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Basic filtering functionality > should return all offers when no preferred airlines are specified 6ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Basic filtering functionality > should filter offers by preferred airlines 25ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Basic filtering functionality > should handle empty preferred airlines array 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Multi-provider support > should filter Amadeus offers correctly 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Multi-provider support > should filter Duffel offers correctly 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Multi-provider support > should handle mixed provider offers 2ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Complex airline data extraction > should extract from validatingAirlines field 11ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Complex airline data extraction > should extract from rawData for Duffel offers 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Complex airline data extraction > should handle offers with no airline data gracefully 12ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Error handling > should handle errors gracefully and return original offers 2ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Validation > should validate valid IATA codes 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Validation > should reject invalid IATA codes 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Validation > should warn about too many airline selections 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > AirlineFilter > Validation > should handle missing preferredAirlines gracefully 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > Utility functions > getAirlineName > should return airline name for known IATA codes 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > Utility functions > getAirlineName > should return the code itself for unknown IATA codes 0ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > Utility functions > getAvailableAirlinesFromOffers > should extract unique airlines from offers 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > Utility functions > getAvailableAirlinesFromOffers > should sort airlines by frequency 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > Utility functions > getAvailableAirlinesFromOffers > should handle empty offers array 1ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts > Integration with FilterFactory > should integrate with filter context from FilterFactory 2ms\n ✓ |unit| src/lib/filtering/__tests__/AirlineFilter.test.ts (20 tests) 74ms\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] RoundTripFilter: 5→4 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 5 → 4 (removed 1)\n[FilterPipeline] Executing filter: BudgetFilter (4 offers)\n[BudgetFilter] Starting budget filtering with budget: 400 USD\n[BudgetFilter] Effective budget (with tolerance): 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] RoundTripFilter: 5→4 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 5 → 4 (removed 1)\n[FilterPipeline] Executing filter: BudgetFilter (4 offers)\n[BudgetFilter] Starting budget filtering with budget: 400 USD\n[BudgetFilter] Effective budget (with tolerance): 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[BudgetFilter] Filtered out offer expensive: 500 USD > 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[BudgetFilter] Filtered out offer expensive: 500 USD > 450 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[BudgetFilter] Budget filtering complete: 4 → 3 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[BudgetFilter] Budget filtering complete: 4 → 3 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] BudgetFilter: 4→3 (52ms)\n[FilterPipeline] Filter BudgetFilter completed: 4 → 3 (removed 1)\n[FilterPipeline] Executing filter: CarryOnFilter (3 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 3 → 3 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] BudgetFilter: 4→3 (52ms)\n[FilterPipeline] Filter BudgetFilter completed: 4 → 3 (removed 1)\n[FilterPipeline] Executing filter: CarryOnFilter (3 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 3 → 3 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] CarryOnFilter: 3→3 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 3 → 3 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (3 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Filtering for nonstop flights only (app requirement)\n[NonstopFilter] Offer with-stops: Contains itinerary with stops\n[NonstopFilter] Nonstop filtering complete: 3 → 2 offers (removed 1 with stops)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] CarryOnFilter: 3→3 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 3 → 3 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (3 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Filtering for nonstop flights only (app requirement)\n[NonstopFilter] Offer with-stops: Contains itinerary with stops\n[NonstopFilter] Nonstop filtering complete: 3 → 2 offers (removed 1 with stops)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] NonstopFilter: 3→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 3 → 2 (removed 1)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] NonstopFilter: 3→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 3 → 2 (removed 1)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] AirlineFilter: 2→2 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 5 → 2 (53ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order\n[PerformanceLogger] AirlineFilter: 2→2 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 5 → 2 (53ms)\n\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a standard pipeline with all filters 8ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a budget pipeline with limited filters 28ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Pipeline Creation > should create a fast pipeline with essential filters only 2ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Context Creation > should create proper filter context from search parameters 2ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Context Creation > should handle alternative parameter names 2ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Parameter Validation > should validate required search parameters 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Parameter Validation > should detect missing required parameters 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > FilterFactory > Parameter Validation > should validate date relationships 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should filter out one-way offers for round-trip searches 2ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should validate round-trip routing 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > RoundTripFilter > should handle one-way searches properly 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should filter offers exceeding budget 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should apply budget tolerance 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > BudgetFilter > should handle currency conversion 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should filter out flights with stops when nonstop required 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > NonstopFilter > should return all offers when nonstop not required 1ms\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m-100\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m' → '\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: -100 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m-100\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m' → '\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: -100 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[PerformanceLogger] NonstopFilter: 1→1 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[PerformanceLogger] NonstopFilter: 1→1 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (3ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (3ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Legacy Adapter > should migrate old round-trip filtering to new system\n[LegacyFilterAdapter] Migrating old round-trip filtering to new system\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 0 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Legacy Adapter > should migrate old round-trip filtering to new system\n[LegacyFilterAdapter] Migrating old round-trip filtering to new system\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 0 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Legacy Adapter > should migrate old round-trip filtering to new system\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Legacy Adapter > should migrate old round-trip filtering to new system\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Legacy Adapter > should migrate old round-trip filtering to new system\n[LegacyFilterAdapter] Legacy filtering migration complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Legacy Adapter > should migrate old round-trip filtering to new system\n[LegacyFilterAdapter] Legacy filtering migration complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 1000 offers\n[FilterPipeline] Executing filter: BudgetFilter (500 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 1000 offers\n[FilterPipeline] Executing filter: BudgetFilter (500 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-251: 551 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-251: 551 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-252: 552 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-252: 552 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-253: 553 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-253: 553 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-254: 554 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-254: 554 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-255: 555 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-255: 555 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-256: 556 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-256: 556 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-257: 557 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-257: 557 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-258: 558 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-258: 558 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-259: 559 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-259: 559 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-260: 560 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-260: 560 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-261: 561 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-261: 561 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-262: 562 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-262: 562 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-263: 563 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-263: 563 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-264: 564 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-264: 564 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-265: 565 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-265: 565 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-266: 566 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-266: 566 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-267: 567 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-267: 567 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-268: 568 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-268: 568 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-269: 569 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-269: 569 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-270: 570 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-270: 570 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-271: 571 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-271: 571 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-272: 572 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-272: 572 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-273: 573 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-273: 573 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-274: 574 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-274: 574 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-275: 575 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-275: 575 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-276: 576 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-276: 576 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-277: 577 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-277: 577 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-278: 578 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-278: 578 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-279: 579 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-279: 579 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-280: 580 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-280: 580 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-281: 581 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-281: 581 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-282: 582 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-282: 582 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-283: 583 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-283: 583 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-284: 584 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-284: 584 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-285: 585 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-285: 585 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-286: 586 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-286: 586 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-287: 587 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-287: 587 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-288: 588 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-288: 588 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-289: 589 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-289: 589 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-290: 590 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-290: 590 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-291: 591 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-291: 591 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-292: 592 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-292: 592 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-293: 593 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-293: 593 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-294: 594 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-294: 594 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-295: 595 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-295: 595 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-296: 596 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-296: 596 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-297: 597 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-297: 597 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-298: 598 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-298: 598 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-299: 599 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Filtered out offer offer-299: 599 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Budget filtering complete: 500 → 451 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[BudgetFilter] Budget filtering complete: 500 → 451 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[FilterPipeline] Filter BudgetFilter completed: 500 → 451 (removed 49)\n[FilterPipeline] Execution completed: 1000 → 451 (3ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently\n[FilterPipeline] Filter BudgetFilter completed: 500 → 451 (removed 49)\n[FilterPipeline] Execution completed: 1000 → 451 (3ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should respect maxOffersToProcess limit\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 100 offers\n[FilterPipeline] Executing filter: RoundTripFilter (10 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-0\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-1\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-2\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-3\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-4\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-5\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-6\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-7\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-8\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-9\n[RoundTripFilter] One-way filtering: 10 → 0 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should respect maxOffersToProcess limit\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 100 offers\n[FilterPipeline] Executing filter: RoundTripFilter (10 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-0\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-1\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-2\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-3\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-4\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-5\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-6\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-7\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-8\n[RoundTripFilter] Filtered out multi-itinerary offer for one-way search: offer-9\n[RoundTripFilter] One-way filtering: 10 → 0 offers\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should respect maxOffersToProcess limit\n[FilterPipeline] Filter RoundTripFilter completed: 10 → 0 (removed 10)\n[FilterPipeline] Execution completed: 100 → 0 (0ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should respect maxOffersToProcess limit\n[FilterPipeline] Filter RoundTripFilter completed: 10 → 0 (removed 10)\n[FilterPipeline] Execution completed: 100 → 0 (0ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Error Handling > should continue processing after individual filter errors\n[FilterPipeline] Added filter: ErrorFilter (priority: 1)\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: ErrorFilter (1 offers)\n[FilterPipeline] Execution completed: 1 → 1 (13ms)\n\nstdout | src/lib/filtering/__tests__/FilteringSystem.test.ts > Error Handling > should continue processing after individual filter errors\n[FilterPipeline] Added filter: ErrorFilter (priority: 1)\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m0\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: ErrorFilter (1 offers)\n[FilterPipeline] Execution completed: 1 → 1 (13ms)\n\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should apply multiple filters in correct order 55ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > Integration Tests > should handle errors gracefully 7ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > Legacy Adapter > should migrate old round-trip filtering to new system 2ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > Legacy Adapter > should warn about deprecated function usage 2ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should handle large numbers of offers efficiently 5ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > Performance Tests > should respect maxOffersToProcess limit 1ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts > Error Handling > should continue processing after individual filter errors 14ms\n ✓ |unit| src/lib/filtering/__tests__/FilteringSystem.test.ts (23 tests) 144ms\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Provider Adapter Integration > should normalize Amadeus offers correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Provider Adapter Integration > should normalize Amadeus offers correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Provider Adapter Integration > should normalize Duffel offers correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Provider Adapter Integration > should normalize Duffel offers correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[ProviderAdapter] Successfully normalized 2 offers from 2 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[ProviderAdapter] Successfully normalized 2 offers from 2 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] RoundTripFilter: 2→2 (1ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] RoundTripFilter: 2→2 (1ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] BudgetFilter: 2→2 (1ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] BudgetFilter: 2→2 (1ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] CarryOnFilter: 2→2 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] CarryOnFilter: 2→2 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] NonstopFilter: 2→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] NonstopFilter: 2→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] AirlineFilter: 2→2 (1ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (3ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers\n[PerformanceLogger] AirlineFilter: 2→2 (1ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (3ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 1 → 1 offers\n[RoundTripFilter] After routing validation: 1 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 1 → 1 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 1 → 1 offers\n[RoundTripFilter] After routing validation: 1 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 1 → 1 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 300 USD\n[BudgetFilter] Effective budget (with tolerance): 350 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 300 USD\n[BudgetFilter] Effective budget (with tolerance): 350 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[BudgetFilter] Filtered out offer AMADEUS_001: 625 USD > 350 USD\n[BudgetFilter] Budget filtering complete: 1 → 0 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[BudgetFilter] Filtered out offer AMADEUS_001: 625 USD > 350 USD\n[BudgetFilter] Budget filtering complete: 1 → 0 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[FilterPipeline] Filter BudgetFilter completed: 1 → 0 (removed 1)\n[FilterPipeline] Execution completed: 1 → 0 (1ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget\n[FilterPipeline] Filter BudgetFilter completed: 1 → 0 (removed 1)\n[FilterPipeline] Execution completed: 1 → 0 (1ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m600\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m600\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] RoundTripFilter: 1→1 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 600 USD\n[BudgetFilter] Effective budget (with tolerance): 650 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] RoundTripFilter: 1→1 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 600 USD\n[BudgetFilter] Effective budget (with tolerance): 650 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[BudgetFilter] Budget filtering complete: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[BudgetFilter] Budget filtering complete: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] NonstopFilter: 1→1 (1ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] NonstopFilter: 1→1 (1ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (2ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (2ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should recommend correct pipeline types\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should recommend correct pipeline types\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 1 → 1 offers\n[RoundTripFilter] After routing validation: 1 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 1 → 1 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 1 → 1 offers\n[RoundTripFilter] After routing validation: 1 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 1 → 1 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[BudgetFilter] Budget filtering complete: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[BudgetFilter] Budget filtering complete: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (5ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (5ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle empty offers gracefully\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle empty offers gracefully\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle empty offers gracefully\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 0 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle empty offers gracefully\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 0 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle malformed offers gracefully\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle malformed offers gracefully\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle malformed offers gracefully\n[ProviderAdapter] Successfully normalized 0 offers from 1 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 0 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle malformed offers gracefully\n[ProviderAdapter] Successfully normalized 0 offers from 1 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 0 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[ProviderAdapter] Successfully normalized 100 offers from 100 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 100 offers\n[FilterPipeline] Executing filter: RoundTripFilter (100 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 100 → 100 offers\n[RoundTripFilter] After routing validation: 100 → 100 offers\n[RoundTripFilter] After provider-specific validation: 100 → 100 offers\n[RoundTripFilter] Round-trip filtering complete: 100 → 100 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[ProviderAdapter] Successfully normalized 100 offers from 100 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 100 offers\n[FilterPipeline] Executing filter: RoundTripFilter (100 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 100 → 100 offers\n[RoundTripFilter] After routing validation: 100 → 100 offers\n[RoundTripFilter] After provider-specific validation: 100 → 100 offers\n[RoundTripFilter] Round-trip filtering complete: 100 → 100 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] RoundTripFilter: 100→100 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (100 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] RoundTripFilter: 100→100 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (100 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[BudgetFilter] Budget filtering complete: 100 → 100 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[BudgetFilter] Budget filtering complete: 100 → 100 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] BudgetFilter: 100→100 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (100 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 100 → 100 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] BudgetFilter: 100→100 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (100 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 100 → 100 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] CarryOnFilter: 100→100 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (100 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] CarryOnFilter: 100→100 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (100 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] NonstopFilter: 100→100 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (100 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] NonstopFilter: 100→100 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (100 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] AirlineFilter: 100→100 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Execution completed: 100 → 100 (1ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time\n[PerformanceLogger] AirlineFilter: 100→100 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 100 → 100 (removed 0)\n[FilterPipeline] Execution completed: 100 → 100 (1ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 1 → 1 offers\n[RoundTripFilter] After routing validation: 1 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 1 → 1 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 1 → 1 offers\n[RoundTripFilter] After routing validation: 1 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 1 → 1 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] RoundTripFilter: 1→1 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] RoundTripFilter: 1→1 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[BudgetFilter] Budget filtering complete: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[BudgetFilter] Budget filtering complete: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] NonstopFilter: 1→1 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] NonstopFilter: 1→1 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] AirlineFilter: 1→1 (1ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order\n[PerformanceLogger] AirlineFilter: 1→1 (1ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m300\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 1 → 1 offers\n[RoundTripFilter] After routing validation: 1 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 1 → 1 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 1 → 1 offers\n[RoundTripFilter] After routing validation: 1 → 1 offers\n[RoundTripFilter] After provider-specific validation: 1 → 1 offers\n[RoundTripFilter] Round-trip filtering complete: 1 → 1 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] RoundTripFilter: 1→1 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] RoundTripFilter: 1→1 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: 1000 USD\n[BudgetFilter] Effective budget (with tolerance): 1050 USD\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[BudgetFilter] Budget filtering complete: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[BudgetFilter] Budget filtering complete: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] NonstopFilter: 1→1 (1ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] NonstopFilter: 1→1 (1ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > Integration with Service Layer > should work seamlessly with tripOffersService integration\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/end-to-end-integration.test.ts > Integration with Service Layer > should work seamlessly with tripOffersService integration\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m1000\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'JFK → LAX'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Provider Adapter Integration > should normalize Amadeus offers correctly 8ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Provider Adapter Integration > should normalize Duffel offers correctly 20ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should execute standard pipeline successfully for round-trip offers 13ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should filter out offers exceeding budget 3ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should handle one-way filtering correctly 4ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Complete Filtering Pipeline > should recommend correct pipeline types 2ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Edge Function Integration Simulation > should simulate complete edge function flow 7ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle empty offers gracefully 1ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should handle malformed offers gracefully 2ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Performance and Error Handling > should complete filtering within reasonable time 3ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should maintain filter execution order 2ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > End-to-End Filtering Integration > Filter State Integration > should track filter performance metrics correctly 18ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts > Integration with Service Layer > should work seamlessly with tripOffersService integration 22ms\n ✓ |unit| src/lib/filtering/__tests__/end-to-end-integration.test.ts (13 tests) 112ms\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > FilterFactory Integration > should create different pipeline types with correct filters\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > FilterFactory Integration > should create different pipeline types with correct filters\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > FilterFactory Integration > should create filter context from API parameters\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > FilterFactory Integration > should create filter context from API parameters\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 3 offers\n[FilterPipeline] Executing filter: RoundTripFilter (3 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 3 → 3 offers\n[RoundTripFilter] After routing validation: 3 → 3 offers\n[RoundTripFilter] After provider-specific validation: 3 → 3 offers\n[RoundTripFilter] Round-trip filtering complete: 3 → 3 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mtrue\u001b[39m\n}\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 3 offers\n[FilterPipeline] Executing filter: RoundTripFilter (3 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 3 → 3 offers\n[RoundTripFilter] After routing validation: 3 → 3 offers\n[RoundTripFilter] After provider-specific validation: 3 → 3 offers\n[RoundTripFilter] Round-trip filtering complete: 3 → 3 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] RoundTripFilter: 3→3 (1ms)\n[FilterPipeline] Filter RoundTripFilter completed: 3 → 3 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (3 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] RoundTripFilter: 3→3 (1ms)\n[FilterPipeline] Filter RoundTripFilter completed: 3 → 3 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (3 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[BudgetFilter] Filtered out offer offer-2: 600 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[BudgetFilter] Filtered out offer offer-2: 600 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[BudgetFilter] Budget filtering complete: 3 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[BudgetFilter] Budget filtering complete: 3 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] BudgetFilter: 3→2 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 3 → 2 (removed 1)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] BudgetFilter: 3→2 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 3 → 2 (removed 1)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] CarryOnFilter: 2→2 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Filtering for nonstop flights only (app requirement)\n[NonstopFilter] Offer offer-3: Contains itinerary with stops\n[NonstopFilter] Nonstop filtering complete: 2 → 1 offers (removed 1 with stops)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] CarryOnFilter: 2→2 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Filtering for nonstop flights only (app requirement)\n[NonstopFilter] Offer offer-3: Contains itinerary with stops\n[NonstopFilter] Nonstop filtering complete: 2 → 1 offers (removed 1 with stops)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] NonstopFilter: 2→1 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 1 (removed 1)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] NonstopFilter: 2→1 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 1 (removed 1)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] AirlineFilter: 1→1 (1ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 3 → 1 (3ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline\n[PerformanceLogger] AirlineFilter: 1→1 (1ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 3 → 1 (3ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] RoundTripFilter: 2→2 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] RoundTripFilter: 2→2 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[BudgetFilter] Filtered out offer offer-2: 600 USD > 550 USD\n[BudgetFilter] Budget filtering complete: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[BudgetFilter] Filtered out offer offer-2: 600 USD > 550 USD\n[BudgetFilter] Budget filtering complete: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] BudgetFilter: 2→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 1 (removed 1)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] BudgetFilter: 2→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 1 (removed 1)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] CarryOnFilter: 1→1 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] CarryOnFilter: 1→1 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] NonstopFilter: 1→1 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] NonstopFilter: 1→1 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 2 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 2 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[BudgetFilter] Filtered out offer offer-2: 600 USD > 550 USD\n[BudgetFilter] Budget filtering complete: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[BudgetFilter] Filtered out offer offer-2: 600 USD > 550 USD\n[BudgetFilter] Budget filtering complete: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Filter BudgetFilter completed: 2 → 1 (removed 1)\n[FilterPipeline] Execution completed: 2 → 1 (0ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Filter BudgetFilter completed: 2 → 1 (removed 1)\n[FilterPipeline] Execution completed: 2 → 1 (0ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[BudgetFilter] Filtered out offer offer-2: 600 USD > 550 USD\n[BudgetFilter] Budget filtering complete: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[BudgetFilter] Filtered out offer offer-2: 600 USD > 550 USD\n[BudgetFilter] Budget filtering complete: 2 → 1 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Filter BudgetFilter completed: 2 → 1 (removed 1)\n[FilterPipeline] Execution completed: 2 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types\n[FilterPipeline] Filter BudgetFilter completed: 2 → 1 (removed 1)\n[FilterPipeline] Execution completed: 2 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Starting execution with 500 offers\n[FilterPipeline] Executing filter: RoundTripFilter (500 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 500 → 500 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Starting execution with 500 offers\n[FilterPipeline] Executing filter: RoundTripFilter (500 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 500 → 500 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[FilterPipeline] Filter RoundTripFilter completed: 500 → 500 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (500 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[FilterPipeline] Filter RoundTripFilter completed: 500 → 500 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (500 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-226: 552 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-226: 552 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-227: 554 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-227: 554 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-228: 556 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-228: 556 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-229: 558 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-229: 558 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-230: 560 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-230: 560 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-231: 562 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-231: 562 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-232: 564 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-232: 564 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-233: 566 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-233: 566 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-234: 568 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-234: 568 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-235: 570 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-235: 570 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-236: 572 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-236: 572 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-237: 574 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-237: 574 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-238: 576 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-238: 576 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-239: 578 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-239: 578 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-240: 580 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-240: 580 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-241: 582 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-241: 582 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-242: 584 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-242: 584 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-243: 586 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-243: 586 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-244: 588 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-244: 588 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-245: 590 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-245: 590 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-246: 592 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-246: 592 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-247: 594 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-247: 594 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-248: 596 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-248: 596 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-249: 598 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-249: 598 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-250: 600 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-250: 600 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-251: 602 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-251: 602 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-252: 604 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-252: 604 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-253: 606 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-253: 606 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-254: 608 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-254: 608 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-255: 610 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-255: 610 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-256: 612 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-256: 612 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-257: 614 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-257: 614 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-258: 616 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-258: 616 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-259: 618 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-259: 618 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-260: 620 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-260: 620 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-261: 622 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-261: 622 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-262: 624 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-262: 624 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-263: 626 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-263: 626 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-264: 628 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-264: 628 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-265: 630 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-265: 630 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-266: 632 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-266: 632 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-267: 634 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-267: 634 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-268: 636 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-268: 636 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-269: 638 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-269: 638 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-270: 640 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-270: 640 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-271: 642 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-271: 642 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-272: 644 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-272: 644 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-273: 646 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-273: 646 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-274: 648 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-274: 648 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-275: 650 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-275: 650 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-276: 652 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-276: 652 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-277: 654 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-277: 654 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-278: 656 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-278: 656 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-279: 658 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-279: 658 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-280: 660 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-280: 660 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-281: 662 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-281: 662 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-282: 664 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-282: 664 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-283: 666 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-283: 666 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-284: 668 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-284: 668 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-285: 670 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-285: 670 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-286: 672 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-286: 672 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-287: 674 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-287: 674 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-288: 676 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-288: 676 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-289: 678 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-289: 678 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-290: 680 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-290: 680 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-291: 682 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-291: 682 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-292: 684 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-292: 684 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-293: 686 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-293: 686 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-294: 688 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-294: 688 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-295: 690 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-295: 690 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-296: 692 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-296: 692 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-297: 694 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-297: 694 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-298: 696 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-298: 696 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-299: 698 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-299: 698 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-300: 700 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-300: 700 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-301: 702 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-301: 702 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-302: 704 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-302: 704 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-303: 706 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-303: 706 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-304: 708 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-304: 708 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-305: 710 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-305: 710 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-306: 712 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-306: 712 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-307: 714 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-307: 714 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-308: 716 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-308: 716 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-309: 718 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-309: 718 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-310: 720 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-310: 720 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-311: 722 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-311: 722 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-312: 724 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-312: 724 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-313: 726 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-313: 726 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-314: 728 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-314: 728 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-315: 730 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-315: 730 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-316: 732 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-316: 732 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-317: 734 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-317: 734 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-318: 736 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-318: 736 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-319: 738 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-319: 738 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-320: 740 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-320: 740 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-321: 742 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-321: 742 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-322: 744 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-322: 744 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-323: 746 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-323: 746 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-324: 748 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-324: 748 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-325: 750 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-325: 750 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-326: 752 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-326: 752 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-327: 754 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-327: 754 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-328: 756 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-328: 756 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-329: 758 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-329: 758 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-330: 760 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-330: 760 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-331: 762 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-331: 762 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-332: 764 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-332: 764 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-333: 766 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-333: 766 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-334: 768 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-334: 768 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-335: 770 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-335: 770 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-336: 772 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-336: 772 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-337: 774 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-337: 774 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-338: 776 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-338: 776 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-339: 778 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-339: 778 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-340: 780 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-340: 780 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-341: 782 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-341: 782 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-342: 784 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-342: 784 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-343: 786 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-343: 786 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-344: 788 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-344: 788 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-345: 790 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-345: 790 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-346: 792 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-346: 792 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-347: 794 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-347: 794 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-348: 796 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-348: 796 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-349: 798 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-349: 798 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-350: 800 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-350: 800 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-351: 802 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-351: 802 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-352: 804 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-352: 804 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-353: 806 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-353: 806 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-354: 808 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-354: 808 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-355: 810 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-355: 810 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-356: 812 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-356: 812 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-357: 814 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-357: 814 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-358: 816 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-358: 816 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-359: 818 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-359: 818 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-360: 820 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-360: 820 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-361: 822 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-361: 822 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-362: 824 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-362: 824 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-363: 826 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-363: 826 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-364: 828 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-364: 828 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-365: 830 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-365: 830 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-366: 832 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-366: 832 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-367: 834 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-367: 834 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-368: 836 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-368: 836 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-369: 838 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-369: 838 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-370: 840 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-370: 840 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-371: 842 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-371: 842 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-372: 844 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-372: 844 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-373: 846 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-373: 846 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-374: 848 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-374: 848 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-375: 850 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-375: 850 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-376: 852 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-376: 852 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-377: 854 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-377: 854 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-378: 856 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-378: 856 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-379: 858 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-379: 858 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-380: 860 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-380: 860 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-381: 862 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-381: 862 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-382: 864 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-382: 864 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-383: 866 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-383: 866 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-384: 868 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-384: 868 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-385: 870 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-385: 870 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-386: 872 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-386: 872 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-387: 874 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-387: 874 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-388: 876 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-388: 876 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-389: 878 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-389: 878 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-390: 880 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-390: 880 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-391: 882 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-391: 882 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-392: 884 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-392: 884 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-393: 886 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-393: 886 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-394: 888 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-394: 888 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-395: 890 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-395: 890 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-396: 892 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-396: 892 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-397: 894 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-397: 894 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-398: 896 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-398: 896 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-399: 898 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-399: 898 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-400: 900 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-400: 900 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-401: 902 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-401: 902 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-402: 904 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-402: 904 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-403: 906 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-403: 906 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-404: 908 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-404: 908 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-405: 910 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-405: 910 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-406: 912 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-406: 912 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-407: 914 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-407: 914 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-408: 916 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-408: 916 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-409: 918 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-409: 918 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-410: 920 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-410: 920 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-411: 922 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-411: 922 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-412: 924 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-412: 924 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-413: 926 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-413: 926 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-414: 928 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-414: 928 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-415: 930 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-415: 930 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-416: 932 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-416: 932 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-417: 934 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-417: 934 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-418: 936 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-418: 936 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-419: 938 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-419: 938 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-420: 940 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-420: 940 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-421: 942 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-421: 942 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-422: 944 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-422: 944 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-423: 946 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-423: 946 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-424: 948 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-424: 948 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-425: 950 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-425: 950 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-426: 952 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-426: 952 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-427: 954 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-427: 954 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-428: 956 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-428: 956 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-429: 958 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-429: 958 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-430: 960 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-430: 960 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-431: 962 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-431: 962 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-432: 964 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-432: 964 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-433: 966 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-433: 966 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-434: 968 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-434: 968 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-435: 970 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-435: 970 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-436: 972 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-436: 972 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-437: 974 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-437: 974 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-438: 976 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-438: 976 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-439: 978 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-439: 978 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-440: 980 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-440: 980 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-441: 982 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-441: 982 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-442: 984 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-442: 984 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-443: 986 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-443: 986 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-444: 988 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-444: 988 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-445: 990 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-445: 990 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-446: 992 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-446: 992 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-447: 994 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-447: 994 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-448: 996 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-448: 996 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-449: 998 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-449: 998 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-450: 1000 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-450: 1000 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-451: 1002 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-451: 1002 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-452: 1004 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-452: 1004 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-453: 1006 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-453: 1006 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-454: 1008 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-454: 1008 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-455: 1010 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-455: 1010 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-456: 1012 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-456: 1012 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-457: 1014 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-457: 1014 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-458: 1016 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-458: 1016 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-459: 1018 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-459: 1018 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-460: 1020 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-460: 1020 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-461: 1022 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-461: 1022 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-462: 1024 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-462: 1024 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-463: 1026 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-463: 1026 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-464: 1028 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-464: 1028 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-465: 1030 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-465: 1030 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-466: 1032 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-466: 1032 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-467: 1034 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-467: 1034 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-468: 1036 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-468: 1036 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-469: 1038 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-469: 1038 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-470: 1040 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-470: 1040 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-471: 1042 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-471: 1042 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-472: 1044 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-472: 1044 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-473: 1046 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-473: 1046 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-474: 1048 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-474: 1048 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-475: 1050 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-475: 1050 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-476: 1052 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-476: 1052 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-477: 1054 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-477: 1054 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-478: 1056 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-478: 1056 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-479: 1058 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-479: 1058 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-480: 1060 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-480: 1060 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-481: 1062 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-481: 1062 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-482: 1064 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-482: 1064 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-483: 1066 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-483: 1066 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-484: 1068 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-484: 1068 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-485: 1070 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-485: 1070 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-486: 1072 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-486: 1072 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-487: 1074 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-487: 1074 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-488: 1076 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-488: 1076 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-489: 1078 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-489: 1078 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-490: 1080 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-490: 1080 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-491: 1082 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-491: 1082 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-492: 1084 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-492: 1084 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-493: 1086 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-493: 1086 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-494: 1088 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-494: 1088 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-495: 1090 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-495: 1090 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-496: 1092 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-496: 1092 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-497: 1094 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-497: 1094 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-498: 1096 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-498: 1096 USD > 550 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-499: 1098 USD > 550 USD\n[BudgetFilter] Budget filtering complete: 500 → 226 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[BudgetFilter] Filtered out offer offer-499: 1098 USD > 550 USD\n[BudgetFilter] Budget filtering complete: 500 → 226 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[FilterPipeline] Filter BudgetFilter completed: 500 → 226 (removed 274)\n[FilterPipeline] Execution completed: 500 → 226 (32ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently\n[FilterPipeline] Filter BudgetFilter completed: 500 → 226 (removed 274)\n[FilterPipeline] Execution completed: 500 → 226 (32ms)\n\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > FilterFactory Integration > should create different pipeline types with correct filters 8ms\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > FilterFactory Integration > should create filter context from API parameters 22ms\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Offer Normalization > should normalize V2 offers correctly 2ms\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Offer Normalization > should normalize legacy offers correctly 1ms\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should filter offers using complete pipeline 5ms\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > End-to-End Filtering > should handle budget filtering with different pipeline types 7ms\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m-100\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m-100\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mfalse\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterPipeline] Starting execution with 1 offers\n[FilterPipeline] Executing filter: RoundTripFilter (1 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: one-way\n[RoundTripFilter] One-way filtering: 1 → 1 offers\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] RoundTripFilter: 1→1 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: -100 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] RoundTripFilter: 1→1 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (1 offers)\n[BudgetFilter] Starting budget filtering with budget: -100 USD\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] BudgetFilter: 1→1 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (1 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 1 → 1 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] CarryOnFilter: 1→1 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (1 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] NonstopFilter: 1→1 (1ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] NonstopFilter: 1→1 (1ms)\n[FilterPipeline] Filter NonstopFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (1 offers)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors\n[PerformanceLogger] AirlineFilter: 1→1 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 1 → 1 (removed 0)\n[FilterPipeline] Execution completed: 1 → 1 (1ms)\n\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should handle large offer sets efficiently 33ms\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts > Phase 2 Integration: Core Functionality > Performance and Error Handling > should continue processing when individual filters encounter errors 3ms\n ✓ |unit| src/lib/filtering/__tests__/integration-simple.test.ts (8 tests) 116ms\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  pipelineType: \u001b[32m'standard'\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  pipelineType: \u001b[32m'standard'\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[🔍 SERVICE] Executing standard filtering pipeline with 5 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[🔍 SERVICE] Executing standard filtering pipeline with 5 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] RoundTripFilter: 2→2 (24ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] RoundTripFilter: 2→2 (24ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] BudgetFilter: 2→2 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] BudgetFilter: 2→2 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] CarryOnFilter: 2→2 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] CarryOnFilter: 2→2 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] NonstopFilter: 2→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] NonstopFilter: 2→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] AirlineFilter: 2→2 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (25ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[PerformanceLogger] AirlineFilter: 2→2 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (25ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: \u001b[90mundefined\u001b[39m\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: \u001b[90mundefined\u001b[39m\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[🔍 SERVICE] Executing standard filtering pipeline with 5 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[🔍 SERVICE] Executing standard filtering pipeline with 5 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] RoundTripFilter: 2→2 (1ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] RoundTripFilter: 2→2 (1ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] BudgetFilter: 2→2 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] BudgetFilter: 2→2 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] CarryOnFilter: 2→2 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] CarryOnFilter: 2→2 (0ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] NonstopFilter: 2→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] NonstopFilter: 2→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] AirlineFilter: 2→2 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[PerformanceLogger] AirlineFilter: 2→2 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: { pipelineType: \u001b[32m'budget'\u001b[39m, budget: \u001b[33m500\u001b[39m }\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: { pipelineType: \u001b[32m'budget'\u001b[39m, budget: \u001b[33m500\u001b[39m }\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[🔍 SERVICE] Executing budget filtering pipeline with 2 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[🔍 SERVICE] Executing budget filtering pipeline with 2 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: { pipelineType: \u001b[32m'fast'\u001b[39m, budget: \u001b[33m500\u001b[39m }\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: { pipelineType: \u001b[32m'fast'\u001b[39m, budget: \u001b[33m500\u001b[39m }\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[🔍 SERVICE] Executing fast filtering pipeline with 2 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[🔍 SERVICE] Executing fast filtering pipeline with 2 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: { pipelineType: \u001b[32m'standard'\u001b[39m, budget: \u001b[33m500\u001b[39m }\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: { pipelineType: \u001b[32m'standard'\u001b[39m, budget: \u001b[33m500\u001b[39m }\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[🔍 SERVICE] Executing standard filtering pipeline with 5 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[🔍 SERVICE] Executing standard filtering pipeline with 5 filters\n[FilterPipeline] Starting execution with 2 offers\n[FilterPipeline] Executing filter: RoundTripFilter (2 offers)\n[RoundTripFilter] Starting round-trip filtering\n[RoundTripFilter] Search type: round-trip\n[RoundTripFilter] After itinerary count filter: 2 → 2 offers\n[RoundTripFilter] After routing validation: 2 → 2 offers\n[RoundTripFilter] After provider-specific validation: 2 → 2 offers\n[RoundTripFilter] Round-trip filtering complete: 2 → 2 offers (removed 0)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] RoundTripFilter: 2→2 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] RoundTripFilter: 2→2 (0ms)\n[FilterPipeline] Filter RoundTripFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: BudgetFilter (2 offers)\n[BudgetFilter] Starting budget filtering with budget: 500 USD\n[BudgetFilter] Effective budget (with tolerance): 550 USD\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[BudgetFilter] Budget filtering complete: 2 → 2 offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] BudgetFilter: 2→2 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] BudgetFilter: 2→2 (0ms)\n[FilterPipeline] Filter BudgetFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: CarryOnFilter (2 offers)\n[CarryOnFilter] Starting carry-on filtering\n[CarryOnFilter] Filtering for carry-on included offers only (app requirement)\n[CarryOnFilter] Carry-on filtering complete: 2 → 2 offers (removed 0 without carry-on)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] CarryOnFilter: 2→2 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] CarryOnFilter: 2→2 (1ms)\n[FilterPipeline] Filter CarryOnFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: NonstopFilter (2 offers)\n[NonstopFilter] Starting nonstop filtering\n[NonstopFilter] Nonstop not required, skipping filter\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] NonstopFilter: 2→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] NonstopFilter: 2→2 (0ms)\n[FilterPipeline] Filter NonstopFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Executing filter: AirlineFilter (2 offers)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] AirlineFilter: 2→2 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[PerformanceLogger] AirlineFilter: 2→2 (0ms)\n[FilterPipeline] Filter AirlineFilter completed: 2 → 2 (removed 0)\n[FilterPipeline] Execution completed: 2 → 2 (1ms)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types\n[🔍 SERVICE] Filtering completed: 2 → 2 offers\n[🔍 SERVICE] Successfully processed 2 filtered offers\n[🔍 SERVICE] Sample filtered offers: [\n  { id: \u001b[32m'offer-1'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mfalse\u001b[39m },\n  { id: \u001b[32m'offer-2'\u001b[39m, price: \u001b[33m0\u001b[39m, airline: \u001b[32m'LAX-JFK'\u001b[39m, nonstop: \u001b[33mtrue\u001b[39m }\n]\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Filter Factory Integration > should create different pipeline types with correct filters\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Filter Factory Integration > should create different pipeline types with correct filters\n[FilterFactory] Creating standard filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterPipeline] Added filter: CarryOnFilter (priority: 12)\n[FilterPipeline] Added filter: NonstopFilter (priority: 15)\n[FilterPipeline] Added filter: AirlineFilter (priority: 20)\n[FilterFactory] Standard pipeline created with filters: RoundTripFilter(5), BudgetFilter(10), CarryOnFilter(12), NonstopFilter(15), AirlineFilter(20)\n[FilterFactory] Creating budget-focused pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n[FilterFactory] Creating fast filtering pipeline\n[FilterPipeline] Added filter: RoundTripFilter (priority: 5)\n[FilterPipeline] Added filter: BudgetFilter (priority: 10)\n\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should fetch and filter trip offers using new architecture 39ms\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should apply round-trip filtering correctly 5ms\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Service Layer Integration > should handle different pipeline types 8ms\n ↓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > API Layer Integration > should pass filter options through API layer\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Filter Factory Integration > should create filter context from API parameters\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Filter Factory Integration > should create filter context from API parameters\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Offer Normalization > should normalize V2 offers correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Offer Normalization > should normalize V2 offers correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Offer Normalization > should normalize legacy offers correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Offer Normalization > should normalize legacy offers correctly\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[ProviderAdapter] Successfully normalized 1 offers from 1 raw offers\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Error Handling > should fallback gracefully when filtering fails\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: \u001b[90mundefined\u001b[39m\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Error Handling > should fallback gracefully when filtering fails\n[🔍 SERVICE] Fetching trip offers for tripRequestId: test-trip-id\n[🔍 SERVICE] Filter options: \u001b[90mundefined\u001b[39m\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Error Handling > should fallback gracefully when filtering fails\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Error Handling > should fallback gracefully when filtering fails\n[🔍 SERVICE] Trip request is round-trip\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Error Handling > should fallback gracefully when filtering fails\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[🔍 SERVICE] Falling back to raw offers without filtering\n\nstdout | src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Error Handling > should fallback gracefully when filtering fails\n[🔍 SERVICE] Found 2 raw offers in flight_offers_v2 table\n[🔍 SERVICE] Retrieved 2 raw offers from V2 table\n[FilterFactory] Created filter context: {\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  route: \u001b[32m'LAX → JFK'\u001b[39m,\n  roundTrip: \u001b[33mtrue\u001b[39m,\n  nonstopRequired: \u001b[33mfalse\u001b[39m\n}\n[🔍 SERVICE] Created filter context: {\n  tripType: \u001b[32m'roundtrip'\u001b[39m,\n  budget: \u001b[33m500\u001b[39m,\n  currency: \u001b[32m'USD'\u001b[39m,\n  nonstop: \u001b[33mfalse\u001b[39m,\n  offerCount: \u001b[33m2\u001b[39m\n}\n[🔍 SERVICE] Normalized 2 offers\n[🔍 SERVICE] Falling back to raw offers without filtering\n\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Filter Factory Integration > should create different pipeline types with correct filters 52ms\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Filter Factory Integration > should create filter context from API parameters 2ms\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Offer Normalization > should normalize V2 offers correctly 3ms\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Offer Normalization > should normalize legacy offers correctly 2ms\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Integration: New Filtering Architecture > Error Handling > should fallback gracefully when filtering fails 7ms\n ↓ |unit| src/lib/filtering/__tests__/integration.test.ts > Phase 2 Performance Considerations > should handle large offer sets efficiently\n ✓ |unit| src/lib/filtering/__tests__/integration.test.ts (10 tests | 2 skipped) 122ms\n ✓ |unit| src/tests/components/dashboard/TripHistory.test.tsx > TripHistory Component > 1. Shows loading state initially 54ms\n ✓ |unit| src/tests/components/dashboard/TripHistory.test.tsx > TripHistory Component > 2. Shows error message if data fetching fails 43ms\n ✓ |unit| src/tests/components/dashboard/TripHistory.test.tsx > TripHistory Component > 3. Shows \"No past bookings found\" if history is empty 8ms\n × |unit| src/tests/components/personalization/GreetingBanner.test.tsx > GreetingBanner > should render without crashing 56ms\n   → Cannot read properties of undefined (reading 'replace')\n × |unit| src/tests/components/personalization/GreetingBanner.test.tsx > GreetingBanner > should track exposure event on render 4ms\n   → Cannot read properties of undefined (reading 'replace')\n × |unit| src/tests/components/personalization/GreetingBanner.test.tsx > GreetingBanner > should handle click event and track engagement 13ms\n   → Cannot read properties of undefined (reading 'replace')\n ❯ |unit| src/tests/components/personalization/GreetingBanner.test.tsx (3 tests | 3 failed) 75ms\n   × GreetingBanner > should render without crashing 56ms\n     → Cannot read properties of undefined (reading 'replace')\n   × GreetingBanner > should track exposure event on render 4ms\n     → Cannot read properties of undefined (reading 'replace')\n   × GreetingBanner > should handle click event and track engagement 13ms\n     → Cannot read properties of undefined (reading 'replace')\n × |unit| src/tests/components/dashboard/TripHistory.test.tsx > TripHistory Component > 4. Renders booking history in a table with correct data and links 616ms\n   → Unable to find an accessible element with the role \"cell\" and name \"10/1/2023\"\n\nHere are the accessible roles:\n\n  heading:\n\n  Name \"My Past Bookings\":\n  \u001b[36m<h2\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl md:text-2xl font-semibold mb-4 text-gray-800\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  table:\n\n  Name \"\":\n  \u001b[36m<table\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"w-full text-sm text-left text-gray-500 dark:text-gray-400\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  rowgroup:\n\n  Name \"\":\n  \u001b[36m<thead\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"\":\n  \u001b[36m<tbody />\u001b[39m\n\n  --------------------------------------------------\n  row:\n\n  Name \"PNR Price Seat Booked On Details Status / Actions\":\n  \u001b[36m<tr />\u001b[39m\n\n  Name \"PNR123 $150.75 12A Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"PNR456 $200.00 Auto-assigned Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A N/A 5C Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  columnheader:\n\n  Name \"PNR\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Price\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Seat\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Booked On\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Details\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Status / Actions\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  cell:\n\n  Name \"PNR123\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"$150.75\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"12A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"PNR456\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"$200.00\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Auto-assigned\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"5C\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  link:\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr1\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr2\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr3\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<section\u001b[39m\n      \u001b[33mclass\u001b[39m=\u001b[32m\"mt-8 pt-6 border-t\"\u001b[39m\n    \u001b[36m>\u001b[39m\n      \u001b[36m<h2\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl md:text-2xl font-semibold mb-4 text-gray-800\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mMy Past Bookings\u001b[0m\n      \u001b[36m</h2>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"overflow-x-auto relative shadow-md sm:rounded-lg\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<table\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"w-full text-sm text-left text-gray-500 dark:text-gray-400\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<thead\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<tr>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPrice\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mSeat\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mBooked On\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mDetails\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mStatus / Actions\u001b[0m\n              \u001b[36m</th>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n          \u001b[36m</thead>\u001b[39m\n          \u001b[36m<tbody>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR123\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m$150.75\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m12A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr1\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR456\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m$200.00\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mAuto-assigned\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr2\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mN/A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mN/A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m5C\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr3\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n          \u001b[36m</tbody>\u001b[39m\n        \u001b[36m</table>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</section>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n × |unit| src/tests/components/dashboard/TripHistory.test.tsx > TripHistory Component > 5. Verifies link construction for \"View Details\" 45ms\n   → expected \"spy\" to be called with arguments: [ ObjectContaining{…}, Anything ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[31m+     \"children\": \"View Details\",\u001b[90m\n\u001b[31m+     \"className\": \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\",\u001b[90m\n\u001b[31m+     \"ref\": null,\u001b[90m\n\u001b[2m      \"to\": \"/trip/confirm?tripId=tr1\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[32m-   Anything,\u001b[90m\n\u001b[31m+   undefined,\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n ❯ |unit| src/tests/components/dashboard/TripHistory.test.tsx (5 tests | 2 failed) 779ms\n   ✓ TripHistory Component > 1. Shows loading state initially 54ms\n   ✓ TripHistory Component > 2. Shows error message if data fetching fails 43ms\n   ✓ TripHistory Component > 3. Shows \"No past bookings found\" if history is empty 8ms\n   × TripHistory Component > 4. Renders booking history in a table with correct data and links 616ms\n     → Unable to find an accessible element with the role \"cell\" and name \"10/1/2023\"\n\nHere are the accessible roles:\n\n  heading:\n\n  Name \"My Past Bookings\":\n  \u001b[36m<h2\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl md:text-2xl font-semibold mb-4 text-gray-800\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  table:\n\n  Name \"\":\n  \u001b[36m<table\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"w-full text-sm text-left text-gray-500 dark:text-gray-400\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  rowgroup:\n\n  Name \"\":\n  \u001b[36m<thead\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"\":\n  \u001b[36m<tbody />\u001b[39m\n\n  --------------------------------------------------\n  row:\n\n  Name \"PNR Price Seat Booked On Details Status / Actions\":\n  \u001b[36m<tr />\u001b[39m\n\n  Name \"PNR123 $150.75 12A Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"PNR456 $200.00 Auto-assigned Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A N/A 5C Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  columnheader:\n\n  Name \"PNR\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Price\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Seat\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Booked On\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Details\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Status / Actions\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  cell:\n\n  Name \"PNR123\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"$150.75\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"12A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"PNR456\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"$200.00\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Auto-assigned\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"5C\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  link:\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr1\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr2\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr3\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<section\u001b[39m\n      \u001b[33mclass\u001b[39m=\u001b[32m\"mt-8 pt-6 border-t\"\u001b[39m\n    \u001b[36m>\u001b[39m\n      \u001b[36m<h2\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl md:text-2xl font-semibold mb-4 text-gray-800\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mMy Past Bookings\u001b[0m\n      \u001b[36m</h2>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"overflow-x-auto relative shadow-md sm:rounded-lg\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<table\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"w-full text-sm text-left text-gray-500 dark:text-gray-400\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<thead\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<tr>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPrice\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mSeat\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mBooked On\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mDetails\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mStatus / Actions\u001b[0m\n              \u001b[36m</th>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n          \u001b[36m</thead>\u001b[39m\n          \u001b[36m<tbody>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR123\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m$150.75\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m12A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr1\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR456\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m$200.00\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mAuto-assigned\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr2\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mN/A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mN/A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m5C\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr3\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n          \u001b[36m</tbody>\u001b[39m\n        \u001b[36m</table>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</section>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n   × TripHistory Component > 5. Verifies link construction for \"View Details\" 45ms\n     → expected \"spy\" to be called with arguments: [ ObjectContaining{…}, Anything ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[31m+     \"children\": \"View Details\",\u001b[90m\n\u001b[31m+     \"className\": \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\",\u001b[90m\n\u001b[31m+     \"ref\": null,\u001b[90m\n\u001b[2m      \"to\": \"/trip/confirm?tripId=tr1\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[32m-   Anything,\u001b[90m\n\u001b[31m+   undefined,\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx > PersonalizedGreeting > renders loading state initially 92ms\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx > PersonalizedGreeting > renders generic greeting when personalization is disabled 22ms\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx > PersonalizedGreeting > renders personalized greeting with name 85ms\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx > PersonalizedGreeting > renders time-based greeting without name 17ms\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx > PersonalizedGreeting > handles API error gracefully 29ms\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx > PersonalizedGreeting > calls correct API endpoint 6ms\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx > PersonalizedGreeting > tracks greeting display correctly 5ms\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx > PersonalizedGreeting > tracks generic greeting display 5ms\n ✓ |unit| src/tests/components/personalization/PersonalizedGreeting.test.tsx (8 tests) 264ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > calculate_profile_completeness_enhanced function > should calculate completeness scores correctly 5ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > calculate_profile_completeness_enhanced function > should handle empty profile data 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > calculate_profile_completeness_enhanced function > should detect expired passport and recommend update 13ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > calculate_profile_completeness_enhanced function > should prioritize recommendations by importance 10ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > calculate_profile_completeness_enhanced function > should handle database errors gracefully 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > validate_profile_fields function > should validate correct profile fields 2ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > validate_profile_fields function > should detect invalid email format 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > validate_profile_fields function > should detect invalid phone number format 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > validate_profile_fields function > should validate date formats 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > log_ai_activity function > should log profile completeness calculations 2ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > log_ai_activity function > should handle logging errors gracefully 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > Trigger Integration Tests > should execute complete trigger workflow 9ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > Trigger Integration Tests > should handle cascade failures in trigger workflow 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > Performance and Edge Cases > should handle large profile objects efficiently 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > Performance and Edge Cases > should handle concurrent calculations 2ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts > Database Profile Completeness Trigger Tests > Performance and Edge Cases > should handle null and undefined values in database 1ms\n ✓ |unit| src/tests/unit/database/profileCompleteness.trigger.test.ts (16 tests) 54ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Profile completion status display > renders completion percentage correctly 134ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Profile completion status display > shows \"Complete!\" when profile is 100% complete 13ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Profile completion status display > displays appropriate status message based on completion level 53ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Missing fields display > shows missing fields when profile is incomplete 5ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > calculateCompleteness > should return 0% for empty profile 6ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > calculateCompleteness > should calculate 100% for complete profile 2ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > calculateCompleteness > should handle partial profile completion correctly 46ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > calculateCompleteness > should handle passport expiry logic 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > calculateCompleteness > should validate email format correctly 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > calculateCompleteness > should prioritize recommendations correctly 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > calculateCompleteness > should handle null and undefined values gracefully 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > meetsBookingRequirements > should return true for profile with all required fields 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > meetsBookingRequirements > should return false for profile missing required fields 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > getNextAction > should return highest priority recommendation 13ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > getNextAction > should return null for complete profile 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > Error Handling > should handle corrupted profile data gracefully 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > Error Handling > should handle extremely large preference objects 3ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > Performance Tests > should calculate completeness quickly for normal profiles 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > Edge Cases > should handle profile with future birth date 0ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > Edge Cases > should handle extremely old birth dates 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > Edge Cases > should handle very long names and fields 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts > ProfileCompletenessService Enhanced Tests > Integration with AI Activity Logging > should log completion calculation attempts 1ms\n ✓ |unit| src/tests/unit/services/profileCompletenessService.enhanced.test.ts (18 tests) 84ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Missing fields display > limits displayed missing fields to 4 and shows \"more\" indicator 39ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Recommendations and actions > displays next step recommendation when available 30ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Recommendations and actions > calls onActionClick when recommendation action button is clicked 13ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Recommendations and actions > shows main action button for incomplete profiles 5ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Recommendations and actions > shows \"Start Completing Profile\" for very incomplete profiles 26ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > CompactProfileStatus > renders compact version correctly 6ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > CompactProfileStatus > shows \"Complete\" status for 100% profiles 6ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > CompactProfileStatus > shows next step title when available 3ms\n ✓ |unit| src/tests/components/profile/SimpleProfileStatus.test.tsx (12 tests) 335ms\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should handle initialization failure gracefully\nFalling back to offline mode with default flag values\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should handle initialization failure gracefully\nFalling back to offline mode with default flag values\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should handle initialization failure gracefully\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should handle initialization failure gracefully\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should not initialize if already initialized\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should not initialize if already initialized\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should not initialize if already initialized\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should not initialize if already initialized\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should handle missing client ID\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should handle missing client ID\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should handle missing client ID\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Initialization > should handle missing client ID\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should evaluate flags successfully\nLaunchDarkly client initialized successfully in 1ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should evaluate flags successfully\nLaunchDarkly client initialized successfully in 1ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should evaluate flags successfully\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should evaluate flags successfully\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should return default value when client is not initialized\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should return default value when client is not initialized\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should return default value when client is not initialized\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should return default value when client is not initialized\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should use fallback values when offline\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should use fallback values when offline\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should use fallback values when offline\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should use fallback values when offline\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should handle personalization flag correctly\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should handle personalization flag correctly\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should handle personalization flag correctly\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should handle personalization flag correctly\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should handle opt-out banner flag correctly\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should handle opt-out banner flag correctly\nLaunchDarkly client initialized successfully in 0ms\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should handle opt-out banner flag correctly\nAll developer overrides cleared\n\nstdout | src/lib/featureFlags/__tests__/launchDarklyService.test.ts > LaunchDarklyService > Flag Evaluation > should handle opt-out banner flag correctly\nAll developer overrides cleared\n\n ✓ |unit| tests/unit/components/dashboard/TripHistory.test.tsx > TripHistory Component > 1. Shows loading state initially 65ms\n ✓ |unit| tests/unit/components/dashboard/TripHistory.test.tsx > TripHistory Component > 2. Shows error message if data fetching fails 53ms\n ✓ |unit| tests/unit/components/dashboard/TripHistory.test.tsx > TripHistory Component > 3. Shows \"No past bookings found\" if history is empty 9ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Profile completion status display > renders completion percentage correctly 116ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Profile completion status display > shows \"Complete!\" when profile is 100% complete 8ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Profile completion status display > displays appropriate status message based on completion level 46ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Missing fields display > shows missing fields when profile is incomplete 6ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Missing fields display > limits displayed missing fields to 4 and shows \"more\" indicator 15ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolHeader.test.tsx > PoolHeader > renders pool name and count 81ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolHeader.test.tsx > PoolHeader > handles zero count 11ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolHeader.test.tsx (2 tests) 95ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Recommendations and actions > displays next step recommendation when available 31ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Recommendations and actions > calls onActionClick when recommendation action button is clicked 17ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Recommendations and actions > shows main action button for incomplete profiles 12ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > Recommendations and actions > shows \"Start Completing Profile\" for very incomplete profiles 10ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > CompactProfileStatus > renders compact version correctly 11ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > CompactProfileStatus > shows \"Complete\" status for 100% profiles 5ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx > SimpleProfileStatus > CompactProfileStatus > shows next step title when available 3ms\n ✓ |unit| tests/unit/components/profile/SimpleProfileStatus.test.tsx (12 tests) 283ms\n × |unit| tests/unit/components/dashboard/TripHistory.test.tsx > TripHistory Component > 4. Renders booking history in a table with correct data and links 548ms\n   → Unable to find an accessible element with the role \"cell\" and name \"10/1/2023\"\n\nHere are the accessible roles:\n\n  heading:\n\n  Name \"My Past Bookings\":\n  \u001b[36m<h2\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl md:text-2xl font-semibold mb-4 text-gray-800\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  table:\n\n  Name \"\":\n  \u001b[36m<table\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"w-full text-sm text-left text-gray-500 dark:text-gray-400\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  rowgroup:\n\n  Name \"\":\n  \u001b[36m<thead\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"\":\n  \u001b[36m<tbody />\u001b[39m\n\n  --------------------------------------------------\n  row:\n\n  Name \"PNR Price Seat Booked On Details Status / Actions\":\n  \u001b[36m<tr />\u001b[39m\n\n  Name \"PNR123 $150.75 12A Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"PNR456 $200.00 Auto-assigned Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A N/A 5C Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  columnheader:\n\n  Name \"PNR\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Price\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Seat\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Booked On\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Details\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Status / Actions\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  cell:\n\n  Name \"PNR123\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"$150.75\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"12A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"PNR456\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"$200.00\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Auto-assigned\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"5C\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  link:\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr1\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr2\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr3\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<section\u001b[39m\n      \u001b[33mclass\u001b[39m=\u001b[32m\"mt-8 pt-6 border-t\"\u001b[39m\n    \u001b[36m>\u001b[39m\n      \u001b[36m<h2\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl md:text-2xl font-semibold mb-4 text-gray-800\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mMy Past Bookings\u001b[0m\n      \u001b[36m</h2>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"overflow-x-auto relative shadow-md sm:rounded-lg\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<table\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"w-full text-sm text-left text-gray-500 dark:text-gray-400\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<thead\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<tr>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPrice\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mSeat\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mBooked On\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mDetails\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mStatus / Actions\u001b[0m\n              \u001b[36m</th>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n          \u001b[36m</thead>\u001b[39m\n          \u001b[36m<tbody>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR123\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m$150.75\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m12A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr1\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR456\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m$200.00\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mAuto-assigned\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr2\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mN/A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mN/A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m5C\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr3\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n          \u001b[36m</tbody>\u001b[39m\n        \u001b[36m</table>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</section>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n × |unit| tests/unit/components/dashboard/TripHistory.test.tsx > TripHistory Component > 5. Verifies link construction for \"View Details\" 47ms\n   → expected \"spy\" to be called with arguments: [ ObjectContaining{…}, Anything ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[31m+     \"children\": \"View Details\",\u001b[90m\n\u001b[31m+     \"className\": \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\",\u001b[90m\n\u001b[31m+     \"ref\": null,\u001b[90m\n\u001b[2m      \"to\": \"/trip/confirm?tripId=tr1\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[32m-   Anything,\u001b[90m\n\u001b[31m+   undefined,\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n ❯ |unit| tests/unit/components/dashboard/TripHistory.test.tsx (5 tests | 2 failed) 724ms\n   ✓ TripHistory Component > 1. Shows loading state initially 65ms\n   ✓ TripHistory Component > 2. Shows error message if data fetching fails 53ms\n   ✓ TripHistory Component > 3. Shows \"No past bookings found\" if history is empty 9ms\n   × TripHistory Component > 4. Renders booking history in a table with correct data and links 548ms\n     → Unable to find an accessible element with the role \"cell\" and name \"10/1/2023\"\n\nHere are the accessible roles:\n\n  heading:\n\n  Name \"My Past Bookings\":\n  \u001b[36m<h2\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl md:text-2xl font-semibold mb-4 text-gray-800\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  table:\n\n  Name \"\":\n  \u001b[36m<table\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"w-full text-sm text-left text-gray-500 dark:text-gray-400\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  rowgroup:\n\n  Name \"\":\n  \u001b[36m<thead\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"\":\n  \u001b[36m<tbody />\u001b[39m\n\n  --------------------------------------------------\n  row:\n\n  Name \"PNR Price Seat Booked On Details Status / Actions\":\n  \u001b[36m<tr />\u001b[39m\n\n  Name \"PNR123 $150.75 12A Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"PNR456 $200.00 Auto-assigned Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A N/A 5C Invalid Date View Details Unknown\":\n  \u001b[36m<tr\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  columnheader:\n\n  Name \"PNR\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Price\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Seat\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Booked On\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Details\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Status / Actions\":\n  \u001b[36m<th\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n    \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  cell:\n\n  Name \"PNR123\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"$150.75\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"12A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"PNR456\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"$200.00\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Auto-assigned\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"N/A\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"5C\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Invalid Date\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"Unknown\":\n  \u001b[36m<td\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n  link:\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr1\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr2\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  Name \"View Details\":\n  \u001b[36m<a\u001b[39m\n    \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n    \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr3\"\u001b[39m\n  \u001b[36m/>\u001b[39m\n\n  --------------------------------------------------\n\nIgnored nodes: comments, script, style\n\u001b[36m<body>\u001b[39m\n  \u001b[36m<div>\u001b[39m\n    \u001b[36m<section\u001b[39m\n      \u001b[33mclass\u001b[39m=\u001b[32m\"mt-8 pt-6 border-t\"\u001b[39m\n    \u001b[36m>\u001b[39m\n      \u001b[36m<h2\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"text-xl md:text-2xl font-semibold mb-4 text-gray-800\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[0mMy Past Bookings\u001b[0m\n      \u001b[36m</h2>\u001b[39m\n      \u001b[36m<div\u001b[39m\n        \u001b[33mclass\u001b[39m=\u001b[32m\"overflow-x-auto relative shadow-md sm:rounded-lg\"\u001b[39m\n      \u001b[36m>\u001b[39m\n        \u001b[36m<table\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"w-full text-sm text-left text-gray-500 dark:text-gray-400\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<thead\u001b[39m\n            \u001b[33mclass\u001b[39m=\u001b[32m\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<tr>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPrice\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mSeat\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mBooked On\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mDetails\u001b[0m\n              \u001b[36m</th>\u001b[39m\n              \u001b[36m<th\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-3\"\u001b[39m\n                \u001b[33mscope\u001b[39m=\u001b[32m\"col\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mStatus / Actions\u001b[0m\n              \u001b[36m</th>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n          \u001b[36m</thead>\u001b[39m\n          \u001b[36m<tbody>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR123\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m$150.75\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m12A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr1\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPNR456\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m$200.00\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mAuto-assigned\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr2\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n            \u001b[36m<tr\u001b[39m\n              \u001b[33mclass\u001b[39m=\u001b[32m\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mN/A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mN/A\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m5C\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mInvalid Date\u001b[0m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<a\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\"\u001b[39m\n                  \u001b[33mhref\u001b[39m=\u001b[32m\"/trip/confirm?tripId=tr3\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mView Details\u001b[0m\n                \u001b[36m</a>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n              \u001b[36m<td\u001b[39m\n                \u001b[33mclass\u001b[39m=\u001b[32m\"px-6 py-4\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[36m<span\u001b[39m\n                  \u001b[33mclass\u001b[39m=\u001b[32m\"text-sm text-gray-600 capitalize\"\u001b[39m\n                \u001b[36m>\u001b[39m\n                  \u001b[0mUnknown\u001b[0m\n                \u001b[36m</span>\u001b[39m\n              \u001b[36m</td>\u001b[39m\n            \u001b[36m</tr>\u001b[39m\n          \u001b[36m</tbody>\u001b[39m\n        \u001b[36m</table>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</section>\u001b[39m\n  \u001b[36m</div>\u001b[39m\n\u001b[36m</body>\u001b[39m\n   × TripHistory Component > 5. Verifies link construction for \"View Details\" 47ms\n     → expected \"spy\" to be called with arguments: [ ObjectContaining{…}, Anything ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[31m+     \"children\": \"View Details\",\u001b[90m\n\u001b[31m+     \"className\": \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 ring-focus underline-offset-4 p-0 h-auto text-blue-600 hover:underline\",\u001b[90m\n\u001b[31m+     \"ref\": null,\u001b[90m\n\u001b[2m      \"to\": \"/trip/confirm?tripId=tr1\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[32m-   Anything,\u001b[90m\n\u001b[31m+   undefined,\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n ✓ |unit| src/components/trip/Pools/__tests__/PoolLayout.test.tsx > PoolLayout > renders three pool sections 134ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolLayout.test.tsx > PoolLayout > shows loading skeleton when loading 8ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolLayout.test.tsx > PoolLayout > shows error message when there is an error 7ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolLayout.test.tsx (3 tests) 151ms\n × |unit| tests/unit/components/TripRequestForm.test.tsx > TripRequestForm Mode Handling > should show manual mode UI by default 441ms\n   → \n × |unit| tests/unit/components/TripRequestForm.test.tsx > TripRequestForm Mode Handling > should show manual mode UI when mode=manual 149ms\n   → \n × |unit| tests/unit/components/TripRequestForm.test.tsx > TripRequestForm Mode Handling > should show auto mode UI when mode=auto 86ms\n   → \n × |unit| tests/unit/components/TripRequestForm.test.tsx > TripRequestForm Mode Handling > should show step indicator in auto mode 69ms\n   → \n × |unit| tests/unit/components/TripRequestForm.test.tsx > TripRequestForm Mode Handling > should show different sections in auto mode step 1 80ms\n   → \n ❯ |unit| tests/unit/components/TripRequestForm.test.tsx (5 tests | 5 failed) 827ms\n   × TripRequestForm Mode Handling > should show manual mode UI by default 441ms\n     → \n   × TripRequestForm Mode Handling > should show manual mode UI when mode=manual 149ms\n     → \n   × TripRequestForm Mode Handling > should show auto mode UI when mode=auto 86ms\n     → \n   × TripRequestForm Mode Handling > should show step indicator in auto mode 69ms\n     → \n   × TripRequestForm Mode Handling > should show different sections in auto mode step 1 80ms\n     → \n ✓ |unit| src/components/trip/Pools/__tests__/PoolSection.test.tsx > PoolSection > renders children when count > 0 and section is expanded 189ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolSection.test.tsx > PoolSection > shows no options message when count is 0 and section is expanded 22ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolSection.test.tsx > PoolSection > toggles content when trigger is clicked 133ms\n ✓ |unit| src/components/trip/Pools/__tests__/PoolSection.test.tsx (3 tests) 346ms\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > useFilterState Hook > should initialize with default filter options 18ms\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > useFilterState Hook > should update filters and maintain state 4ms\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > useFilterState Hook > should apply client-side filtering correctly 5ms\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > useFilterState Hook > should reset filters to defaults 3ms\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > useFilterState Hook > should persist filters to localStorage when enabled 58ms\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > useFilterState Hook > should load persisted filters on initialization 1ms\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > useFilterState Hook > should generate correct backend filter options 2ms\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > renders all form fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.071Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.071Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.071Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.071Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > renders all form fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.071Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.071Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.071Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.071Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > AdvancedFilterControls Component > should render filter controls correctly 66ms\n ✓ |unit| src/components/filtering/__tests__/frontend-integration.test.tsx > Phase 3: Frontend Integration Tests > AdvancedFilterControls Component > should display active filters count and results info 11ms\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mtrue\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'J'\u001b[39m ],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mtrue\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'J'\u001b[39m ],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\n ✓ |unit| src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > renders all form fields 153ms\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mtrue\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m'L'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mtrue\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m'L'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    },\n    destination: {\n      message: \u001b[32m'Please provide a destination'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    },\n    destination: {\n      message: \u001b[32m'Please provide a destination'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    },\n    destination: {\n      message: \u001b[32m'Please provide a destination'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > displays validation errors for empty required fields\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {\n    origin: {\n      message: \u001b[32m'At least one departure airport must be selected'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    },\n    destination: {\n      message: \u001b[32m'Please provide a destination'\u001b[39m,\n      type: \u001b[32m'too_small'\u001b[39m,\n      ref: \u001b[36m[Object]\u001b[39m\n    }\n  },\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [],\n    destination: \u001b[32m''\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.218Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.218Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m500\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > submits form with valid data\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'JFK'\u001b[39m ],\n    destination: \u001b[32m'LAX'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m800\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'JFK'\u001b[39m ],\n    destination: \u001b[32m'LAX'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m800\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mtrue\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'JFK'\u001b[39m ],\n    destination: \u001b[32m'LAX'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m800\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > submits form with valid data\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'JFK'\u001b[39m ],\n    destination: \u001b[32m'LAX'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m800\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'JFK'\u001b[39m ],\n    destination: \u001b[32m'LAX'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m800\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\nForm validation state: {\n  isValid: \u001b[33mfalse\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mtrue\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'JFK'\u001b[39m ],\n    destination: \u001b[32m'LAX'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m800\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > submits form with valid data\nForm submitted with data: {\n  origin: [ \u001b[32m'JFK'\u001b[39m ],\n  destination: \u001b[32m'LAX'\u001b[39m,\n  earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n  latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n  cabinClass: \u001b[32m'economy'\u001b[39m,\n  budget: \u001b[33m800\u001b[39m,\n  autoBookEnabled: \u001b[33mfalse\u001b[39m\n}\nForm is valid: \u001b[33mfalse\u001b[39m\nForm errors: {}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > submits form with valid data\nForm submitted with data: {\n  origin: [ \u001b[32m'JFK'\u001b[39m ],\n  destination: \u001b[32m'LAX'\u001b[39m,\n  earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n  latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n  cabinClass: \u001b[32m'economy'\u001b[39m,\n  budget: \u001b[33m800\u001b[39m,\n  autoBookEnabled: \u001b[33mfalse\u001b[39m\n}\nForm is valid: \u001b[33mfalse\u001b[39m\nForm errors: {}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > submits form with valid data\nForm validation state: {\n  isValid: \u001b[33mtrue\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'JFK'\u001b[39m ],\n    destination: \u001b[32m'LAX'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m800\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\nstdout | src/components/forms/FlightRuleForm.test.tsx > FlightRuleForm > submits form with valid data\nForm validation state: {\n  isValid: \u001b[33mtrue\u001b[39m,\n  errors: {},\n  isSubmitting: \u001b[33mfalse\u001b[39m,\n  isDirty: \u001b[33mfalse\u001b[39m,\n  values: {\n    origin: [ \u001b[32m'JFK'\u001b[39m ],\n    destination: \u001b[32m'LAX'\u001b[39m,\n    earliestOutbound: \u001b[35m2025-07-22T19:02:54.406Z\u001b[39m,\n    latestReturn: \u001b[35m2025-07-28T19:02:54.406Z\u001b[39m,\n    cabinClass: \u001b[32m'economy'\u001b[39m,\n    budget: \u001b[33m800\u001b[39m,\n    autoBookEnabled: \u001b[33mfalse\u001b[39m\n  }\n}\n\n"
    },
    "integration_tests": {
      "name": "Integration Tests",
      "status": "failed",
      "duration": 264.16057999999975,
      "details": [
        "node scripts/test-google-auth-optimized.js --fast: FAILED - Command failed: node scripts/test-google-auth-optimized.js --fast\nnode:internal/modules/cjs/loader:1408\n  throw err;\n  ^\n\nError: Cannot find module '/Users/parkerbarnett/github-link-up-buddy/scripts/test-google-auth-optimized.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1405:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1061:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1066:22)\n    at Function._load (node:internal/modules/cjs/loader:1215:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\n    at node:internal/main/run_main_module:33:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v23.11.0\n",
        "node test-kms-integration.js: FAILED - Command failed: node test-kms-integration.js\nnode:internal/modules/cjs/loader:1408\n  throw err;\n  ^\n\nError: Cannot find module '/Users/parkerbarnett/github-link-up-buddy/test-kms-integration.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1405:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1061:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1066:22)\n    at Function._load (node:internal/modules/cjs/loader:1215:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\n    at node:internal/main/run_main_module:33:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v23.11.0\n",
        "node validate-profile-architecture.js: FAILED - Command failed: node validate-profile-architecture.js\nnode:internal/modules/cjs/loader:1408\n  throw err;\n  ^\n\nError: Cannot find module '/Users/parkerbarnett/github-link-up-buddy/validate-profile-architecture.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1405:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1061:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1066:22)\n    at Function._load (node:internal/modules/cjs/loader:1215:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\n    at node:internal/main/run_main_module:33:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v23.11.0\n",
        "node test-env-validation.js --local: FAILED - Command failed: node test-env-validation.js --local\nnode:internal/modules/cjs/loader:1408\n  throw err;\n  ^\n\nError: Cannot find module '/Users/parkerbarnett/github-link-up-buddy/test-env-validation.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1405:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1061:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1066:22)\n    at Function._load (node:internal/modules/cjs/loader:1215:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\n    at node:internal/main/run_main_module:33:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v23.11.0\n"
      ]
    },
    "security_tests": {
      "name": "Security Audit",
      "status": "failed",
      "error": "Command failed: node scripts/security/security-audit.js\nnode:internal/modules/cjs/loader:1408\n  throw err;\n  ^\n\nError: Cannot find module '/Users/parkerbarnett/github-link-up-buddy/scripts/security/security-audit.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1405:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1061:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1066:22)\n    at Function._load (node:internal/modules/cjs/loader:1215:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)\n    at node:internal/main/run_main_module:33:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v23.11.0\n",
      "output": ""
    },
    "accessibility_tests": {
      "name": "Accessibility Tests",
      "status": "failed",
      "error": "Command failed: npx playwright test tests/e2e/user-journey.spec.ts --grep \"accessibility\"\n❌ Global setup failed: Error: Missing required environment variables: VITE_SUPABASE_URL, VITE_SUPABASE_ANON_KEY, VITE_LD_CLIENT_ID\n    at validateEnvironmentVariables (file:///Users/parkerbarnett/github-link-up-buddy/tests/global-setup.ts:64:11)\n    at globalSetup (file:///Users/parkerbarnett/github-link-up-buddy/tests/global-setup.ts:19:5)\n    at Object.setup (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/tasks.js:173:27)\n    at taskLoop (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/taskRunner.js:62:11)\n    at TaskRunner.runDeferCleanup (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/taskRunner.js:78:5)\n    at TaskRunner.run (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/taskRunner.js:42:33)\n    at runTasks (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/tasks.js:79:18)\n    at Runner.runAllTests (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/runner.js:71:20)\n    at runTests (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/program.js:202:18)\n    at t.<anonymous> (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/program.js:57:7)\n",
      "output": "🚀 Starting Playwright global setup...\n📦 Checking browser installations...\n  ✓ Browser installation check passed\n🔧 Validating environment configuration...\n"
    },
    "e2e_tests": {
      "name": "End-to-End Tests (Playwright)",
      "status": "failed",
      "error": "Command failed: npx playwright test\n❌ Global setup failed: Error: Missing required environment variables: VITE_SUPABASE_URL, VITE_SUPABASE_ANON_KEY, VITE_LD_CLIENT_ID\n    at validateEnvironmentVariables (file:///Users/parkerbarnett/github-link-up-buddy/tests/global-setup.ts:64:11)\n    at globalSetup (file:///Users/parkerbarnett/github-link-up-buddy/tests/global-setup.ts:19:5)\n    at Object.setup (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/tasks.js:173:27)\n    at taskLoop (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/taskRunner.js:62:11)\n    at TaskRunner.runDeferCleanup (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/taskRunner.js:78:5)\n    at TaskRunner.run (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/taskRunner.js:42:33)\n    at runTasks (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/tasks.js:79:18)\n    at Runner.runAllTests (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/runner/runner.js:71:20)\n    at runTests (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/program.js:202:18)\n    at t.<anonymous> (/Users/parkerbarnett/github-link-up-buddy/node_modules/.pnpm/playwright@1.53.2/node_modules/playwright/lib/program.js:57:7)\n",
      "output": "🚀 Starting Playwright global setup...\n📦 Checking browser installations...\n  ✓ Browser installation check passed\n🔧 Validating environment configuration...\n"
    }
  },
  "summary": {
    "total": 5,
    "passed": 0,
    "failed": 5,
    "skipped": 2,
    "warnings": 0
  },
  "total_duration": 39359.723003
}