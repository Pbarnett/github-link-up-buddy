version: '3.8'

services:
  parker-flight:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
        - VITE_FLAG_FS_V2=${VITE_FLAG_FS_V2:-true}
        - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
        - NODE_ENV=${NODE_ENV:-production}
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VERSION=${APP_VERSION:-1.5.0}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
        - PORT=${PORT:-80}
    container_name: ${APP_NAME:-parker-flight}-app
    restart: unless-stopped
    ports:
      - "${PORT:-80}:${PORT:-80}"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-80}
    volumes:
      # Custom nginx config
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Logs volume for debugging
      - app_logs:/var/log/nginx
    networks:
      - parker-flight-network
    labels:
      - "com.docker.compose.service=parker-flight"
      - "version=${APP_VERSION:-1.5.0}"
      - "environment=production"
      - "maintainer=parker-flight"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-80}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Security settings
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
      - /var/cache/nginx
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    security_opt:
      - no-new-privileges:true

  # Optional: Add a reverse proxy with SSL termination
  # Uncomment if you want HTTPS support
  # nginx-proxy:
  #   image: nginx:alpine
  #   container_name: parker-flight-proxy
  #   restart: unless-stopped
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./docker/ssl-nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #     - /path/to/ssl/certs:/etc/nginx/certs:ro
  #   depends_on:
  #     - parker-flight
  #   networks:
  #     - parker-flight-network

networks:
  app_network:
    driver: bridge
    internal: false  # Allow external access for the app
  internal_network:
    driver: bridge
    internal: true   # Internal network for service communication

# Volumes for logs and persistent data
volumes:
  app_logs:
    driver: local
  nginx_cache:
    driver: local
