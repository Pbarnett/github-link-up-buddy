import{DynamoDBClient as c,PutItemCommand as m,UpdateItemCommand as p,QueryCommand as l}from"@aws-sdk/client-dynamodb";var i=class{ddb;paymentsTable;sagaTable;constructor(t,e,n){this.ddb=new c({region:t}),this.paymentsTable=process.env.PAYMENTS_IDEMPOTENCY_TABLE||e||"payments-idempotency",this.sagaTable=process.env.SAGA_TRANSACTIONS_TABLE||n||"saga-transactions"}async recordPaymentAttempt(t,e,n,r=24*60*60){let a=Math.floor(Date.now()/1e3)+r;await this.ddb.send(new m({TableName:this.paymentsTable,Item:{idempotencyKey:{S:t},correlationId:{S:e},amount:{N:n.toString()},status:{S:"pending"},createdAt:{S:new Date().toISOString()},ttl:{N:a.toString()}},ConditionExpression:"attribute_not_exists(idempotencyKey)"}))}async markPaymentCompleted(t,e){await this.ddb.send(new p({TableName:this.paymentsTable,Key:{idempotencyKey:{S:t}},UpdateExpression:"SET #s = :s, paymentIntentId = :pid, completedAt = :ts",ExpressionAttributeNames:{"#s":"status"},ExpressionAttributeValues:{":s":{S:"completed"},":pid":{S:e},":ts":{S:new Date().toISOString()}}}))}async recordSagaStep(t,e,n,r,a,s=7){let d=Math.floor(Date.now()/1e3)+s*24*60*60;await this.ddb.send(new m({TableName:this.sagaTable,Item:{transactionId:{S:t},stepId:{S:e},correlationId:{S:n},action:{S:r},status:{S:a},timestamp:{S:new Date().toISOString()},ttl:{N:d.toString()}}}))}async getSagaStepsByCorrelation(t){return(await this.ddb.send(new l({TableName:this.sagaTable,IndexName:"CorrelationIdIndex",KeyConditionExpression:"correlationId = :c",ExpressionAttributeValues:{":c":{S:t}}}))).Items||[]}};async function b(o){let{correlationId:t,idempotencyKey:e,amount:n}=o||{};if(!t||!e||!Number.isFinite(n))throw new Error("ValidationError");let r=new i;try{await r.recordPaymentAttempt(e,t,n)}catch(s){if(!String(s).includes("ConditionalCheckFailed"))throw new Error("TransientProviderError")}let a=`pi_${Math.random().toString(36).slice(2,12)}`;try{await r.markPaymentCompleted(e,a)}catch{throw new Error("TransientProviderError")}return{ok:!0,correlationId:t,idempotencyKey:e,paymentIntentId:a,amount:n}}export{b as handler};
