"use strict";var d=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.prototype.hasOwnProperty;var S=(n,t)=>{for(var e in t)d(n,e,{get:t[e],enumerable:!0})},b=(n,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of p(t))!m.call(n,o)&&o!==e&&d(n,o,{get:()=>t[o],enumerable:!(s=g(t,o))||s.enumerable});return n};var y=n=>b(d({},"__esModule",{value:!0}),n);var w={};S(w,{handler:()=>u});module.exports=y(w);var a=require("@aws-sdk/client-dynamodb"),i=class{ddb;paymentsTable;sagaTable;constructor(t,e,s){this.ddb=new a.DynamoDBClient({region:t}),this.paymentsTable=process.env.PAYMENTS_IDEMPOTENCY_TABLE||e||"payments-idempotency",this.sagaTable=process.env.SAGA_TRANSACTIONS_TABLE||s||"saga-transactions"}async recordPaymentAttempt(t,e,s,o=24*60*60){let r=Math.floor(Date.now()/1e3)+o;await this.ddb.send(new a.PutItemCommand({TableName:this.paymentsTable,Item:{idempotencyKey:{S:t},correlationId:{S:e},amount:{N:s.toString()},status:{S:"pending"},createdAt:{S:new Date().toISOString()},ttl:{N:r.toString()}},ConditionExpression:"attribute_not_exists(idempotencyKey)"}))}async markPaymentCompleted(t,e){await this.ddb.send(new a.UpdateItemCommand({TableName:this.paymentsTable,Key:{idempotencyKey:{S:t}},UpdateExpression:"SET #s = :s, paymentIntentId = :pid, completedAt = :ts",ExpressionAttributeNames:{"#s":"status"},ExpressionAttributeValues:{":s":{S:"completed"},":pid":{S:e},":ts":{S:new Date().toISOString()}}}))}async recordSagaStep(t,e,s,o,r,c=7){let l=Math.floor(Date.now()/1e3)+c*24*60*60;await this.ddb.send(new a.PutItemCommand({TableName:this.sagaTable,Item:{transactionId:{S:t},stepId:{S:e},correlationId:{S:s},action:{S:o},status:{S:r},timestamp:{S:new Date().toISOString()},ttl:{N:l.toString()}}}))}async getSagaStepsByCorrelation(t){return(await this.ddb.send(new a.QueryCommand({TableName:this.sagaTable,IndexName:"CorrelationIdIndex",KeyConditionExpression:"correlationId = :c",ExpressionAttributeValues:{":c":{S:t}}}))).Items||[]}};async function u(n){let t=n.correlationId||"unknown-correlation";console.log(JSON.stringify({correlationId:t,stage:"process_booking",status:"started"}));try{await new i().recordSagaStep(t,"process_booking_started",t,"process_booking","completed")}catch(r){console.warn("Failed to record saga step (process_booking_started):",r)}let e=n.bookingData&&n.bookingData.simulate||process.env.PROCESS_SIMULATE;if(e==="transient")throw console.warn("Simulating transient provider error"),new Error("TransientProviderError");if(e==="fatal")throw console.error("Simulating fatal provider error"),new Error("FatalProviderError");let s=`bk_${Math.random().toString(36).slice(2,10)}`,o={statusCode:200,bookingId:s,status:"SUCCEEDED",correlationId:t};console.log(JSON.stringify({correlationId:t,stage:"process_booking",status:"success",bookingId:s}));try{await new i().recordSagaStep(t,"process_booking_succeeded",t,"process_booking","completed")}catch(r){console.warn("Failed to record saga step (process_booking_succeeded):",r)}return o}0&&(module.exports={handler});
