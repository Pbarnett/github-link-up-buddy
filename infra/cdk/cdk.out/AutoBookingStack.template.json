{
 "Resources": {
  "AutoBookingStateMachineLogs08476C0D": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/stepfunctions/auto-booking-AutoBookingStack",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingStateMachineLogs/Resource"
   }
  },
  "ValidateBookingInputFnServiceRole0E2F28F7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ValidateBookingInputFn/ServiceRole/Resource"
   }
  },
  "ValidateBookingInputFnServiceRoleDefaultPolicyFEA7004C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ValidateBookingInputFnServiceRoleDefaultPolicyFEA7004C",
    "Roles": [
     {
      "Ref": "ValidateBookingInputFnServiceRole0E2F28F7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ValidateBookingInputFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ValidateBookingInputFn6CCE76E6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "S3Key": "e3cecc8c365dd9a1d7b0f46e91dfb7f5d0bc0339ca3d450341728822702c743e.zip"
    },
    "FunctionName": "validate-booking-input",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ValidateBookingInputFnServiceRole0E2F28F7",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 10,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ValidateBookingInputFnServiceRoleDefaultPolicyFEA7004C",
    "ValidateBookingInputFnServiceRole0E2F28F7"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ValidateBookingInputFn/Resource",
    "aws:asset:path": "asset.e3cecc8c365dd9a1d7b0f46e91dfb7f5d0bc0339ca3d450341728822702c743e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AutoBookingStateMachineRoleFBA00017": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Auto Booking State Machine to invoke lambdas and write logs"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingStateMachineRole/Resource"
   }
  },
  "AutoBookingStateMachineRoleDefaultPolicyB99B217F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ValidateBookingInputFn6CCE76E6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ValidateBookingInputFn6CCE76E6",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProcessAutoBookingFn77636C74",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ProcessAutoBookingFn77636C74",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "RefundPaymentStubFn892BB54D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "RefundPaymentStubFn892BB54D",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CancelBookingStubFnB7AAB940",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CancelBookingStubFnB7AAB940",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PaymentStubFnD56A5A14",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PaymentStubFnD56A5A14",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PaymentStripeFn7DED637D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PaymentStripeFn7DED637D",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProviderCallbackInitiateFnB7833538",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ProviderCallbackInitiateFnB7833538",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogDelivery",
        "logs:GetLogDelivery",
        "logs:UpdateLogDelivery",
        "logs:DeleteLogDelivery",
        "logs:ListLogDeliveries",
        "logs:PutResourcePolicy",
        "logs:DescribeResourcePolicies",
        "logs:DescribeLogGroups"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords",
        "xray:GetSamplingRules",
        "xray:GetSamplingTargets"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ValidateBookingInputFn6CCE76E6",
         "Arn"
        ]
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ProcessAutoBookingFn77636C74",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AutoBookingStateMachineLogs08476C0D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AutoBookingStateMachineRoleDefaultPolicyB99B217F",
    "Roles": [
     {
      "Ref": "AutoBookingStateMachineRoleFBA00017"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingStateMachineRole/DefaultPolicy/Resource"
   }
  },
  "ProcessAutoBookingFnServiceRole91D29A29": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProcessAutoBookingFn/ServiceRole/Resource"
   }
  },
  "ProcessAutoBookingFnServiceRoleDefaultPolicy91B28D5F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ProcessAutoBookingFnServiceRoleDefaultPolicy91B28D5F",
    "Roles": [
     {
      "Ref": "ProcessAutoBookingFnServiceRole91D29A29"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProcessAutoBookingFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ProcessAutoBookingFn77636C74": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "S3Key": "bea1c5f4c9aff4a2787df873339ad879f334486125fd242d508c6db7ca119d80.zip"
    },
    "FunctionName": "process-auto-booking",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ProcessAutoBookingFnServiceRole91D29A29",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ProcessAutoBookingFnServiceRoleDefaultPolicy91B28D5F",
    "ProcessAutoBookingFnServiceRole91D29A29"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProcessAutoBookingFn/Resource",
    "aws:asset:path": "asset.bea1c5f4c9aff4a2787df873339ad879f334486125fd242d508c6db7ca119d80",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "RefundPaymentStubFnServiceRole34829611": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/RefundPaymentStubFn/ServiceRole/Resource"
   }
  },
  "RefundPaymentStubFnServiceRoleDefaultPolicyE9ACCD45": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PaymentsIdempotencyTable0E5F63BF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SagaTransactionsTable4F35CC88",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SagaTransactionsTable4F35CC88",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RefundPaymentStubFnServiceRoleDefaultPolicyE9ACCD45",
    "Roles": [
     {
      "Ref": "RefundPaymentStubFnServiceRole34829611"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/RefundPaymentStubFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RefundPaymentStubFn892BB54D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "S3Key": "862082549646dd1ecb50fa721f6b9731e650028e965bddec24dd994095ef419b.zip"
    },
    "Environment": {
     "Variables": {
      "PAYMENTS_IDEMPOTENCY_TABLE": {
       "Ref": "PaymentsIdempotencyTable0E5F63BF"
      },
      "SAGA_TRANSACTIONS_TABLE": {
       "Ref": "SagaTransactionsTable4F35CC88"
      }
     }
    },
    "FunctionName": "refund-payment-stub",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "RefundPaymentStubFnServiceRole34829611",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 15,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "RefundPaymentStubFnServiceRoleDefaultPolicyE9ACCD45",
    "RefundPaymentStubFnServiceRole34829611"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/RefundPaymentStubFn/Resource",
    "aws:asset:path": "asset.862082549646dd1ecb50fa721f6b9731e650028e965bddec24dd994095ef419b",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CancelBookingStubFnServiceRoleEB147118": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/CancelBookingStubFn/ServiceRole/Resource"
   }
  },
  "CancelBookingStubFnServiceRoleDefaultPolicy347194B2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PaymentsIdempotencyTable0E5F63BF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SagaTransactionsTable4F35CC88",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SagaTransactionsTable4F35CC88",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CancelBookingStubFnServiceRoleDefaultPolicy347194B2",
    "Roles": [
     {
      "Ref": "CancelBookingStubFnServiceRoleEB147118"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/CancelBookingStubFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CancelBookingStubFnB7AAB940": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "S3Key": "4d89d9519281be36e48363c3878cd93f965cd568939ed727598f89e9d7f63db0.zip"
    },
    "Environment": {
     "Variables": {
      "PAYMENTS_IDEMPOTENCY_TABLE": {
       "Ref": "PaymentsIdempotencyTable0E5F63BF"
      },
      "SAGA_TRANSACTIONS_TABLE": {
       "Ref": "SagaTransactionsTable4F35CC88"
      }
     }
    },
    "FunctionName": "cancel-booking-stub",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CancelBookingStubFnServiceRoleEB147118",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 15,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "CancelBookingStubFnServiceRoleDefaultPolicy347194B2",
    "CancelBookingStubFnServiceRoleEB147118"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/CancelBookingStubFn/Resource",
    "aws:asset:path": "asset.4d89d9519281be36e48363c3878cd93f965cd568939ed727598f89e9d7f63db0",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "PaymentStubFnServiceRoleD0485132": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/PaymentStubFn/ServiceRole/Resource"
   }
  },
  "PaymentStubFnServiceRoleDefaultPolicy3157A75C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PaymentsIdempotencyTable0E5F63BF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SagaTransactionsTable4F35CC88",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SagaTransactionsTable4F35CC88",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PaymentStubFnServiceRoleDefaultPolicy3157A75C",
    "Roles": [
     {
      "Ref": "PaymentStubFnServiceRoleD0485132"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/PaymentStubFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PaymentStubFnD56A5A14": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "S3Key": "53b8b49f788c6f157e99f7d84b5a392a2dd756910995a7065c1b2b81db661945.zip"
    },
    "Environment": {
     "Variables": {
      "PAYMENTS_IDEMPOTENCY_TABLE": {
       "Ref": "PaymentsIdempotencyTable0E5F63BF"
      },
      "SAGA_TRANSACTIONS_TABLE": {
       "Ref": "SagaTransactionsTable4F35CC88"
      }
     }
    },
    "FunctionName": "payment-stub",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "PaymentStubFnServiceRoleD0485132",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 15,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "PaymentStubFnServiceRoleDefaultPolicy3157A75C",
    "PaymentStubFnServiceRoleD0485132"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/PaymentStubFn/Resource",
    "aws:asset:path": "asset.53b8b49f788c6f157e99f7d84b5a392a2dd756910995a7065c1b2b81db661945",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AutoBookingSecretsKey9FEE6B42": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "Description": "CMK for encrypting auto-booking secrets in SSM Parameter Store",
    "EnableKeyRotation": true,
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::759262713606:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingSecretsKey/Resource"
   }
  },
  "AutoBookingSecretsKeyAliasC54DD3E9": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/auto-booking-secrets",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "AutoBookingSecretsKey9FEE6B42",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingSecretsKey/Alias/Resource"
   }
  },
  "StripeSecretParamA205E5C0": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Stripe secret key for auto-booking (SecureString in all envs)",
    "Name": "/auto-booking/stripe-secret",
    "Type": "SecureString",
    "Value": "REPLACE_WITH_REAL_SECRET"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/StripeSecretParam/Resource"
   }
  },
  "PaymentStripeFnServiceRole8872E082": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/PaymentStripeFn/ServiceRole/Resource"
   }
  },
  "PaymentStripeFnServiceRoleDefaultPolicyD13B580F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ssm:DescribeParameters",
        "ssm:GetParameters",
        "ssm:GetParameter",
        "ssm:GetParameterHistory"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ssm:us-east-1:759262713606:parameter",
          {
           "Ref": "StripeSecretParamA205E5C0"
          }
         ]
        ]
       }
      },
      {
       "Action": "kms:Decrypt",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AutoBookingSecretsKey9FEE6B42",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PaymentsIdempotencyTable0E5F63BF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SagaTransactionsTable4F35CC88",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SagaTransactionsTable4F35CC88",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PaymentStripeFnServiceRoleDefaultPolicyD13B580F",
    "Roles": [
     {
      "Ref": "PaymentStripeFnServiceRole8872E082"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/PaymentStripeFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PaymentStripeFn7DED637D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "S3Key": "f7435044bab23d06e22b8a7b44934be2e625542ffcd3abab428d579e7c0fbd75.zip"
    },
    "Environment": {
     "Variables": {
      "ENABLE_STRIPE": "false",
      "STRIPE_SECRET_PARAM": {
       "Ref": "StripeSecretParamA205E5C0"
      },
      "PAYMENTS_IDEMPOTENCY_TABLE": {
       "Ref": "PaymentsIdempotencyTable0E5F63BF"
      },
      "SAGA_TRANSACTIONS_TABLE": {
       "Ref": "SagaTransactionsTable4F35CC88"
      }
     }
    },
    "FunctionName": "payment-stripe",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "PaymentStripeFnServiceRole8872E082",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 20,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "PaymentStripeFnServiceRoleDefaultPolicyD13B580F",
    "PaymentStripeFnServiceRole8872E082"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/PaymentStripeFn/Resource",
    "aws:asset:path": "asset.f7435044bab23d06e22b8a7b44934be2e625542ffcd3abab428d579e7c0fbd75",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "PendingCallbacksTable09DC58B0": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "correlationId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "correlationId",
      "KeyType": "HASH"
     }
    ],
    "TableName": "AutoBookingStack-pending-callbacks"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/PendingCallbacksTable/Resource"
   }
  },
  "WebhookSecretParam29432A84": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Shared secret for provider webhook authentication",
    "Name": "/auto-booking/webhook-secret",
    "Type": "SecureString",
    "Value": "gfo4gvoqcvkynhrdx5v7"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/WebhookSecretParam/Resource"
   }
  },
  "ProviderCallbackInitiateFnServiceRole2457BFED": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProviderCallbackInitiateFn/ServiceRole/Resource"
   }
  },
  "ProviderCallbackInitiateFnServiceRoleDefaultPolicyC1916FA3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PendingCallbacksTable09DC58B0",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SagaTransactionsTable4F35CC88",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SagaTransactionsTable4F35CC88",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ProviderCallbackInitiateFnServiceRoleDefaultPolicyC1916FA3",
    "Roles": [
     {
      "Ref": "ProviderCallbackInitiateFnServiceRole2457BFED"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProviderCallbackInitiateFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ProviderCallbackInitiateFnB7833538": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "S3Key": "b8d2b75f9d4afc74d264e411a35d2e50a9de0c82335c38d2d496be870169b353.zip"
    },
    "Environment": {
     "Variables": {
      "CALLBACK_TABLE": {
       "Ref": "PendingCallbacksTable09DC58B0"
      }
     }
    },
    "FunctionName": "provider-callback-initiate",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ProviderCallbackInitiateFnServiceRole2457BFED",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ProviderCallbackInitiateFnServiceRoleDefaultPolicyC1916FA3",
    "ProviderCallbackInitiateFnServiceRole2457BFED"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProviderCallbackInitiateFn/Resource",
    "aws:asset:path": "asset.b8d2b75f9d4afc74d264e411a35d2e50a9de0c82335c38d2d496be870169b353",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ProviderWebhookCompleteFnServiceRole08AAE152": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProviderWebhookCompleteFn/ServiceRole/Resource"
   }
  },
  "ProviderWebhookCompleteFnServiceRoleDefaultPolicy54529196": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PendingCallbacksTable09DC58B0",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "ssm:DescribeParameters",
        "ssm:GetParameters",
        "ssm:GetParameter",
        "ssm:GetParameterHistory"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ssm:us-east-1:759262713606:parameter",
          {
           "Ref": "WebhookSecretParam29432A84"
          }
         ]
        ]
       }
      },
      {
       "Action": "kms:Decrypt",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AutoBookingSecretsKey9FEE6B42",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "states:SendTaskSuccess",
        "states:SendTaskFailure"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SagaTransactionsTable4F35CC88",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SagaTransactionsTable4F35CC88",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ProviderWebhookCompleteFnServiceRoleDefaultPolicy54529196",
    "Roles": [
     {
      "Ref": "ProviderWebhookCompleteFnServiceRole08AAE152"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProviderWebhookCompleteFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ProviderWebhookCompleteFn04DBFBB3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "S3Key": "d3b9066cdc3d64ca6268cb1dcb15550bc08c8263ad2ac3addf619ac9cb939bd1.zip"
    },
    "Environment": {
     "Variables": {
      "CALLBACK_TABLE": {
       "Ref": "PendingCallbacksTable09DC58B0"
      },
      "WEBHOOK_SECRET_PARAM": {
       "Ref": "WebhookSecretParam29432A84"
      }
     }
    },
    "FunctionName": "provider-webhook-complete",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ProviderWebhookCompleteFnServiceRole08AAE152",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ProviderWebhookCompleteFnServiceRoleDefaultPolicy54529196",
    "ProviderWebhookCompleteFnServiceRole08AAE152"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/ProviderWebhookCompleteFn/Resource",
    "aws:asset:path": "asset.d3b9066cdc3d64ca6268cb1dcb15550bc08c8263ad2ac3addf619ac9cb939bd1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AutoBookingStateMachineDBFA4D30": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionS3Location": {
     "Bucket": "cdk-hnb659fds-assets-759262713606-us-east-1",
     "Key": "dc1e88373047638564730ac776707826cd5b1ef2aa0d7dd54c4ae2ff4018f68c.json"
    },
    "LoggingConfiguration": {
     "Destinations": [
      {
       "CloudWatchLogsLogGroup": {
        "LogGroupArn": {
         "Fn::GetAtt": [
          "AutoBookingStateMachineLogs08476C0D",
          "Arn"
         ]
        }
       }
      }
     ],
     "IncludeExecutionData": false,
     "Level": "ERROR"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "AutoBookingStateMachineRoleFBA00017",
      "Arn"
     ]
    },
    "StateMachineName": "AutoBookingStack-auto-booking",
    "TracingConfiguration": {
     "Enabled": true
    }
   },
   "DependsOn": [
    "AutoBookingStateMachineRoleDefaultPolicyB99B217F",
    "AutoBookingStateMachineRoleFBA00017"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingStateMachine/Resource"
   }
  },
  "PaymentsIdempotencyTable0E5F63BF": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "idempotencyKey",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "idempotencyKey",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "AutoBookingStack-payments-idempotency",
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/PaymentsIdempotencyTable/Resource"
   }
  },
  "SagaTransactionsTable4F35CC88": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "transactionId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "stepId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "correlationId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "CorrelationIdIndex",
      "KeySchema": [
       {
        "AttributeName": "correlationId",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "transactionId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "stepId",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "AutoBookingStack-saga-transactions",
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/SagaTransactionsTable/Resource"
   }
  },
  "AutoBookingDashboard9E689771": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"widgets\":[{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Executions Succeeded/Failed\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/States\",\"ExecutionsSucceeded\",\"StateMachineArn\",\"",
       {
        "Ref": "AutoBookingStateMachineDBFA4D30"
       },
       "\",{\"stat\":\"Sum\"}],[\"AWS/States\",\"ExecutionsFailed\",\"StateMachineArn\",\"",
       {
        "Ref": "AutoBookingStateMachineDBFA4D30"
       },
       "\",{\"stat\":\"Sum\",\"yAxis\":\"right\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":12,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Execution Time (ms)\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/States\",\"ExecutionTime\",\"StateMachineArn\",\"",
       {
        "Ref": "AutoBookingStateMachineDBFA4D30"
       },
       "\"]],\"yAxis\":{}}}]}"
      ]
     ]
    },
    "DashboardName": "auto-booking-dashboard"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingDashboard/Resource"
   }
  },
  "AutoBookingFailuresAlarm5516068A": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmDescription": "Step Functions executions failing",
    "AlarmName": "auto-booking-failures",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "DatapointsToAlarm": 2,
    "Dimensions": [
     {
      "Name": "StateMachineArn",
      "Value": {
       "Ref": "AutoBookingStateMachineDBFA4D30"
      }
     }
    ],
    "EvaluationPeriods": 2,
    "MetricName": "ExecutionsFailed",
    "Namespace": "AWS/States",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingFailuresAlarm/Resource"
   }
  },
  "AutoBookingFailuresTopicE91B2345": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "Auto Booking Failures",
    "TopicName": "auto-booking-failures-topic"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingFailuresTopic/Resource"
   }
  },
  "AutoBookingFailuresTopicPolicy20AC5189": {
   "Type": "AWS::SNS::TopicPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       },
       "Resource": {
        "Ref": "AutoBookingFailuresTopicE91B2345"
       },
       "Sid": "0"
      }
     ],
     "Version": "2012-10-17"
    },
    "Topics": [
     {
      "Ref": "AutoBookingFailuresTopicE91B2345"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingFailuresTopic/Policy/Resource"
   }
  },
  "AutoBookingFailuresTopicprkrsbgmailcom23A9DDFD": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": "prkr.sb@gmail.com",
    "Protocol": "email",
    "TopicArn": {
     "Ref": "AutoBookingFailuresTopicE91B2345"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingFailuresTopic/prkr.sb@gmail.com/Resource"
   }
  },
  "SfnFailuresRule39131E96": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Route Step Functions failed/timed-out/aborted executions to SNS",
    "EventPattern": {
     "source": [
      "aws.states"
     ],
     "detail-type": [
      "Step Functions Execution Status Change"
     ],
     "detail": {
      "status": [
       "FAILED",
       "TIMED_OUT",
       "ABORTED"
      ],
      "stateMachineArn": [
       {
        "Ref": "AutoBookingStateMachineDBFA4D30"
       }
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Ref": "AutoBookingFailuresTopicE91B2345"
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/SfnFailuresRule/Resource"
   }
  },
  "AutoBookingHttpApiA2851C68": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "*"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "Name": "auto-booking-api",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingHttpApi/Resource"
   }
  },
  "AutoBookingHttpApiDefaultStageADD36030": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "AutoBookingHttpApiA2851C68"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingHttpApi/DefaultStage/Resource"
   }
  },
  "AutoBookingHttpApiPOSTproviderwebhookWebhookIntegration9C9296EB": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "AutoBookingHttpApiA2851C68"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ProviderWebhookCompleteFn04DBFBB3",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingHttpApi/POST--provider--webhook/WebhookIntegration/Resource"
   }
  },
  "AutoBookingHttpApiPOSTproviderwebhookWebhookIntegrationPermission5FAB1D2D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProviderWebhookCompleteFn04DBFBB3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:759262713606:",
       {
        "Ref": "AutoBookingHttpApiA2851C68"
       },
       "/*/*/provider/webhook"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingHttpApi/POST--provider--webhook/WebhookIntegration-Permission"
   }
  },
  "AutoBookingHttpApiPOSTproviderwebhook6186F4D2": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "AutoBookingHttpApiA2851C68"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "POST /provider/webhook",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "AutoBookingHttpApiPOSTproviderwebhookWebhookIntegration9C9296EB"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/AutoBookingHttpApi/POST--provider--webhook/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11S2W7DIBD8lr4TmqRfkLbqoZ5y+x6t8dYhMWCxkCiy+PcuOG6ivjAzaHf2gKVcLuZyfgUHmqlmN+t0LYevAGon+Go9dK4lOby69tG72Iu7HzvxJDowdQNr6xrcknwv8BCtCtpZocHIoXId5pyCn67T6pjlyJKgmzUQYSC5ysBa3ka1w3ALhCd7OXDCn2tORm80Easkdoabe8FimmHVaaAsCuECZPI0Xtv2EzwYDOiLxySSaI4WjGt46m+ox24L4eSA/c+pMJWlBHwDtdG2RF3qJFTnYnOAoDZyuAfa1A58k8POYtWBN2NzTNg/u367XqtStJBynhd1Kb9iTcrrftrDpU4C92h5j0MVTxuPeQTodctdHuC4X8rhKYR+1evSAkOWPEQ7TcMkX1UuhpE924Cth6ngP1niUhIVkoteoShvmH142zngI4Y+hiTy/5Bbut4vb+RiwX9tS1rPfLRBG5TViL+NQoWGiAIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "AutoBookingStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "StateMachineArn": {
   "Value": {
    "Ref": "AutoBookingStateMachineDBFA4D30"
   }
  },
  "ValidateInputLambdaArn": {
   "Value": {
    "Fn::GetAtt": [
     "ValidateBookingInputFn6CCE76E6",
     "Arn"
    ]
   }
  },
  "ProcessBookingLambdaArn": {
   "Value": {
    "Fn::GetAtt": [
     "ProcessAutoBookingFn77636C74",
     "Arn"
    ]
   }
  },
  "PaymentStubLambdaArn": {
   "Value": {
    "Fn::GetAtt": [
     "PaymentStubFnD56A5A14",
     "Arn"
    ]
   }
  },
  "RefundPaymentLambdaArn": {
   "Value": {
    "Fn::GetAtt": [
     "RefundPaymentStubFn892BB54D",
     "Arn"
    ]
   }
  },
  "CancelBookingLambdaArn": {
   "Value": {
    "Fn::GetAtt": [
     "CancelBookingStubFnB7AAB940",
     "Arn"
    ]
   }
  },
  "PaymentsIdempotencyTableName": {
   "Value": {
    "Ref": "PaymentsIdempotencyTable0E5F63BF"
   }
  },
  "SagaTransactionsTableName": {
   "Value": {
    "Ref": "SagaTransactionsTable4F35CC88"
   }
  },
  "CallbackTableName": {
   "Value": {
    "Ref": "PendingCallbacksTable09DC58B0"
   }
  },
  "ProviderCallbackInitiateArn": {
   "Value": {
    "Fn::GetAtt": [
     "ProviderCallbackInitiateFnB7833538",
     "Arn"
    ]
   }
  },
  "ProviderWebhookCompleteArn": {
   "Value": {
    "Fn::GetAtt": [
     "ProviderWebhookCompleteFn04DBFBB3",
     "Arn"
    ]
   }
  },
  "DashboardName": {
   "Value": {
    "Ref": "AutoBookingDashboard9E689771"
   }
  },
  "FailuresAlarmName": {
   "Value": {
    "Ref": "AutoBookingFailuresAlarm5516068A"
   }
  },
  "FailuresSnsTopicArn": {
   "Value": {
    "Ref": "AutoBookingFailuresTopicE91B2345"
   }
  },
  "WebhookUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::GetAtt": [
        "AutoBookingHttpApiA2851C68",
        "ApiEndpoint"
       ]
      },
      "/provider/webhook"
     ]
    ]
   }
  },
  "WebhookSecretParameter": {
   "Value": {
    "Ref": "WebhookSecretParam29432A84"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}