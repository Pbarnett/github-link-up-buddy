# Example environment variables
LD_SDK_KEY=sdk-xxxxxxxxxxxxxxxx
VITE_LD_CLIENT_ID=client-xxxxxxxxxxxxxxxx
LD_MOBILE_KEY=mob-xxxxxxxxxxxxxxxx

# Duffel API Configuration (per DUFFEL_IMPLEMENTATION_GUIDE.md)
DUFFEL_API_TOKEN_TEST=duffel_test_YOUR_TEST_TOKEN_HERE
DUFFEL_API_TOKEN_LIVE=duffel_live_YOUR_LIVE_TOKEN_HERE
DUFFEL_LIVE_ENABLED=false
DUFFEL_WEBHOOK_SECRET=your_webhook_secret_at_least_32_chars_long

# ===== AWS CONFIGURATION =====
# AWS Region Configuration
AWS_REGION=us-east-1

# AWS Credentials (Development only - use IAM roles for production)
# Note: In production, use IAM roles instead of access keys
AWS_ACCESS_KEY_ID=your_dev_access_key_id
AWS_SECRET_ACCESS_KEY=your_dev_secret_access_key

# AWS IAM Role Configuration (Production)
# AWS_ROLE_ARN=arn:aws:iam::123456789012:role/SupabaseEdgeFunctionsRole
# AWS_EXTERNAL_ID=your-external-id-for-role-assumption

# ===== KMS CONFIGURATION =====
# Three-key approach as recommended by AWS AI bot
KMS_GENERAL_ALIAS=alias/parker-flight-general-production
KMS_PII_ALIAS=alias/parker-flight-pii-production
KMS_PAYMENT_ALIAS=alias/parker-flight-payment-production

# Multi-region failover configuration (JSON array)
KMS_FALLBACK_REGIONS=["us-west-2", "eu-west-1"]

# KMS Key IDs (alternative to aliases)
# KMS_GENERAL_KEY_ID=arn:aws:kms:us-east-1:123456789012:key/general-key-id
# KMS_PII_KEY_ID=arn:aws:kms:us-east-1:123456789012:key/pii-key-id
# KMS_PAYMENT_KEY_ID=arn:aws:kms:us-east-1:123456789012:key/payment-key-id

# ===== SECRETS MANAGER CONFIGURATION =====
# AWS Secrets Manager secret names (for production credential management)
PAYMENT_CONFIG_SECRET_NAME=supabase/payment-config
KMS_CONFIG_SECRET_NAME=supabase/kms-config
STRIPE_SECRETS_NAME=supabase/stripe-secrets

# ===== ENVIRONMENT IDENTIFICATION =====
NODE_ENV=development
SUPABASE_ENV=development

# ===== PERFORMANCE CONFIGURATION =====
# KMS operation timeouts and cache settings
KMS_REQUEST_TIMEOUT=30000
KMS_MAX_RETRIES=3
KMS_CACHE_TTL=300

# ===== MONITORING AND LOGGING =====
# Enable enhanced KMS logging (disable in production for performance)
KMS_ENABLE_LOGGING=true
KMS_ENABLE_METRICS=true

# CloudWatch log group for KMS operations
# AWS_LOG_GROUP_NAME=/aws/lambda/parker-flight-kms

# ===== TESTING CONFIGURATION =====
# Test KMS functionality on startup
KMS_RUN_STARTUP_TEST=true

# Enable mock KMS for local testing
# KMS_USE_MOCK=false
