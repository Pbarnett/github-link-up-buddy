name: E2E Smoke on PRs

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack (pnpm from package.json)
        run: corepack enable

      - name: Prepare pnpm via Corepack
        run: |
          PNPM_VERSION=$(node -p "require('./package.json').packageManager.split('@')[1]")
          corepack prepare pnpm@${PNPM_VERSION} --activate

      - name: Configure pnpm store
        run: |
          pnpm config set store-dir ~/.pnpm-store
          pnpm config set side-effects-cache false
      - name: Install dependencies
        run: |
          for i in 1 2 3; do
            pnpm install --frozen-lockfile && break || {
              echo "pnpm install failed (attempt $i). Retrying in $((i*5))s...";
              pnpm store prune || true
              sleep $((i*5));
            }
          done

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build app
        run: pnpm build

      - name: Run E2E critical tests (Playwright-managed server)
        env:
          CI: '1'
          E2E_BASE_URL: http://127.0.0.1:3000
          VITE_PUBLIC_BASE_URL: http://127.0.0.1:3000
          VITE_DISABLE_BASE_ENFORCE: true
          PLAYWRIGHT_JUNIT_OUTPUT: tests/reports/junit/playwright-junit.xml
          PLAYWRIGHT_SERVER_CMD: bash -lc "npx vite preview --host 0.0.0.0 --strictPort --port 3000 2>\&1 | tee preview.log"
        run: |
          mkdir -p tests/reports/junit
          npx playwright test tests/e2e/auto-booking-critical.spec.ts --reporter=junit,html || exit 1

      - name: Show preview server log on failure
        if: failure()
        run: |
          echo "===== preview.log (tail) ====="
          tail -n +1 preview.log || true
          echo "===== end preview.log ====="

      - name: Upload preview server log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: preview-log-smoke
          path: preview.log
          if-no-files-found: ignore

