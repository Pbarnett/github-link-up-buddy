name: Optional E2E Suites

on:
  workflow_dispatch:
    inputs:
      run_trip:
        description: "Run TripRequestForm E2E"
        type: boolean
        default: false
      run_oauth:
        description: "Run OAuth callback E2E"
        type: boolean
        default: false
      run_visual:
        description: "Run Visual Regression E2E"
        type: boolean
        default: false

jobs:
  e2e-trip:
    if: ${{ inputs.run_trip == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'


      - name: Enable Corepack (pnpm from package.json)
        run: corepack enable

      - name: Prepare pnpm via Corepack
        run: |
          PNPM_VERSION=$(node -p "require('./package.json').packageManager.split('@')[1]")
          corepack prepare pnpm@${PNPM_VERSION} --activate

      - name: Configure pnpm store
        run: |
          pnpm config set store-dir ~/.pnpm-store
          pnpm config set side-effects-cache false
      - name: Verify lockfile
        run: |
          for i in 1 2 3; do
            pnpm install --frozen-lockfile && break || {
              echo "pnpm install failed (attempt $i). Retrying in $((i*5))s...";
              pnpm store prune || true
              sleep $((i*5));
            }
          done

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build app
        run: pnpm build

      - name: Run TripRequestForm E2E (Playwright-managed server)
        env:
          CI: '1'
          E2E_BASE_URL: http://127.0.0.1:3000
          VITE_PUBLIC_BASE_URL: http://127.0.0.1:3000
          VITE_DISABLE_BASE_ENFORCE: true
          PLAYWRIGHT_SERVER_CMD: bash -lc "pnpm preview -- --host 0.0.0.0 --strictPort --port 3000 2>&1 | tee preview.log"
        run: pnpm run test:e2e:trip-request

      - name: Upload preview server log (trip)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: preview-log-trip
          path: preview.log
          if-no-files-found: ignore

      - name: Upload E2E artifacts (trip) on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-trip-report
          path: |
            test-results/
            playwright-report/

  e2e-oauth:
    if: ${{ inputs.run_oauth == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable pnpm cache
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'

      - name: Enable Corepack (pnpm from package.json)
        run: corepack enable

      - name: Prepare pnpm via Corepack
        run: |
          PNPM_VERSION=$(node -p "require('./package.json').packageManager.split('@')[1]")
          corepack prepare pnpm@${PNPM_VERSION} --activate

      - name: Verify lockfile
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build app
        run: pnpm build

      - name: Run OAuth callback E2E (optional, Playwright-managed)
        env:
          CI: '1'
          E2E_BASE_URL: http://127.0.0.1:3000
          VITE_PUBLIC_BASE_URL: http://127.0.0.1:3000
          VITE_DISABLE_BASE_ENFORCE: true
          MOCK_GOOGLE_OAUTH: '1'
          PLAYWRIGHT_SERVER_CMD: bash -lc "pnpm preview -- --host 0.0.0.0 --strictPort --port 3000 2>&1 | tee preview.log"
        run: pnpm run test:e2e:callback || echo "OAuth callback test optional"

      - name: Upload preview server log (oauth)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: preview-log-oauth
          path: preview.log
          if-no-files-found: ignore

      - name: Upload E2E artifacts (oauth) on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-oauth-report
          path: |
            test-results/
            playwright-report/

  e2e-visual:
    if: ${{ inputs.run_visual == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack (pnpm from package.json)
        run: corepack enable

      - name: Prepare pnpm via Corepack
        run: |
          PNPM_VERSION=$(node -p "require('./package.json').packageManager.split('@')[1]")
          corepack prepare pnpm@${PNPM_VERSION} --activate

      - name: Verify lockfile
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build app
        run: pnpm build

      - name: Run visual E2E (Playwright-managed)
        env:
          CI: '1'
          E2E_BASE_URL: http://127.0.0.1:3000
          VITE_PUBLIC_BASE_URL: http://127.0.0.1:3000
          VITE_DISABLE_BASE_ENFORCE: true
          PLAYWRIGHT_SERVER_CMD: bash -lc "pnpm preview -- --host 0.0.0.0 --strictPort --port 3000 2>&1 | tee preview.log"
        run: pnpm run test:visual

      - name: Upload preview server log (visual)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: preview-log-visual
          path: preview.log
          if-no-files-found: ignore

      - name: Upload E2E artifacts (visual) on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-visual-report
          path: |
            test-results/
            playwright-report/

