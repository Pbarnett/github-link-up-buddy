version: '3.8'

services:
  parker-flight:
    image: ghcr.io/${GITHUB_REPOSITORY:-parkerbarnett/github-link-up-buddy}:${IMAGE_TAG:-latest}
    container_name: parker-flight-app
    restart: unless-stopped
    
    # Resource Management
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
    
    ports:
      - "${APP_PORT:-80}:80"
    
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_FLAG_FS_V2=${VITE_FLAG_FS_V2:-true}
    
    volumes:
      # Custom nginx config override
      - ./docker/nginx.production.conf:/etc/nginx/conf.d/default.conf:ro
      # Centralized logging
      - app_logs:/var/log/nginx
    
    networks:
      - parker-flight-network
    
    labels:
      - "com.docker.compose.service=parker-flight"
      - "version=${IMAGE_TAG:-latest}"
      - "environment=production"
      - "traefik.enable=true"
      - "traefik.http.routers.parker-flight.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.routers.parker-flight.tls=true"
      - "traefik.http.routers.parker-flight.tls.certresolver=letsencrypt"
    
    # Enhanced health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Security
    security_opt:
      - no-new-privileges:true
    user: "101:101"  # nginx user
    read_only: true
    tmpfs:
      - /var/cache/nginx:rw,noexec,nosuid,size=50m
      - /var/run:rw,noexec,nosuid,size=50m
      - /tmp:rw,noexec,nosuid,size=50m

  # Load balancer with SSL termination
  traefik:
    image: traefik:v3.0
    container_name: parker-flight-lb
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"
    
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    
    volumes:
      - ./traefik:/etc/traefik:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/etc/traefik/certs
    
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=${ACME_EMAIL}
    
    networks:
      - parker-flight-network
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  # Log aggregation
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: parker-flight-logs
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"
    
    volumes:
      - ./fluentd:/fluentd/etc:ro
      - app_logs:/var/log/app:ro
    
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    
    networks:
      - parker-flight-network
    
    environment:
      - FLUENTD_CONF=fluent.conf

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: parker-flight-cache
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.1"
    
    volumes:
      - redis_data:/data
    
    networks:
      - parker-flight-network
    
    command: redis-server --appendonly yes --maxmemory 100mb --maxmemory-policy allkeys-lru

networks:
  parker-flight-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  app_logs:
    driver: local
  traefik_certs:
    driver: local
  redis_data:
    driver: local
