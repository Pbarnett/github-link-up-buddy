{
  "metadata": {
    "auditDate": "2025-07-06T07:13:56.822Z",
    "version": "1.0.0",
    "totalFiles": 37
  },
  "summary": {
    "totalFindings": 179,
    "byCategory": {
      "flight-search": [
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//types/form.ts",
          "lineNumber": 60,
          "content": "nonstop_required: z.boolean().default(true),",
          "timestamp": "2025-07-06T07:13:56.004Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 73,
          "content": "nonstop_required: true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 100,
          "content": "nonstop_required: tripData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 182,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 218,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 180,
          "content": "nonstop_required: true",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//services/tripService.ts",
          "lineNumber": 39,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "supabase/functions//flight-search/index.ts",
          "lineNumber": 427,
          "content": "if (request.nonstop_required === true && offer.nonstop_match !== true) {",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 35,
          "content": "forceRoundTrip: z.boolean().default(true),",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 104,
          "content": "forceRoundTrip: false, // More flexibility in dev",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 115,
          "content": "forceRoundTrip: true,",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 123,
          "content": "forceRoundTrip: true,",
          "timestamp": "2025-07-06T07:13:56.138Z"
        }
      ],
      "filters": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//utils/roundTripFiltering.ts",
          "lineNumber": 5,
          "content": "* Use the new FilterFactory from @/lib/filtering/FilterFactory instead.",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//utils/roundTripFiltering.ts",
          "lineNumber": 11,
          "content": "import { LegacyFilterAdapter } from '@/lib/filtering/FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 7,
          "content": "* - Backend FilterFactory system",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 611,
          "content": "describe('Integration with Backend FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 612,
          "content": "it('should generate filter options compatible with FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 626,
          "content": "// These options should match what the FilterFactory expects",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/AdvancedFilterControls.tsx",
          "lineNumber": 14,
          "content": "* Filter options that integrate with the backend FilterFactory system",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 9,
          "content": "import FilterFactory, { LegacyFilterAdapter } from '../FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 125,
          "content": "describe('FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 128,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 137,
          "content": "const pipeline = FilterFactory.createBudgetPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 145,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 165,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 183,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 200,
          "content": "const validation = FilterFactory.validateSearchParams(validParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 211,
          "content": "const validation = FilterFactory.validateSearchParams(invalidParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 225,
          "content": "const validation = FilterFactory.validateSearchParams(invalidParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 238,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 289,
          "content": "const oneWayContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 314,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 374,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 415,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 416,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 453,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 454,
          "content": "const invalidContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 517,
          "content": "'[DEPRECATED] filterAmadeusRoundTripOffers is deprecated. Use FilterFactory.createStandardPipeline() instead.'",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 526,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 527,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 550,
          "content": "const pipeline = FilterFactory.createFastPipeline({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 553,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 583,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 7,
          "content": "import { FilterFactory, createFilterContext } from '@/lib/filtering';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 45,
          "content": "describe('FilterFactory Integration', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 47,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 48,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 49,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 266,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 344,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 345,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 346,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 406,
          "content": "const pipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 466,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 9,
          "content": "import { FilterFactory } from '../FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 106,
          "content": "roundTripContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 117,
          "content": "oneWayContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 127,
          "content": "budgetContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 211,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 228,
          "content": "const pipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 250,
          "content": "const oneWayFilterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 268,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 278,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 284,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 290,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 316,
          "content": "const filterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 333,
          "content": "const pipelineType = FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 339,
          "content": "const pipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 357,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 372,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 389,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 405,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 424,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 443,
          "content": "const filterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 9,
          "content": "import { FilterFactory, createFilterContext, normalizeOffers } from '@/lib/filtering';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 204,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 205,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 206,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 375,
          "content": "// Mock FilterFactory to throw an error",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 376,
          "content": "vi.spyOn(FilterFactory, 'createPipeline').mockImplementation(() => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 423,
          "content": "describe('Integration with FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 424,
          "content": "it('should integrate with filter context from FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 425,
          "content": "// This test would verify integration with the FilterFactory.createFilterContext method",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 431,
          "content": "// 1. Use FilterFactory.createFilterContext(mockSearchParams)",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 26,
          "content": "export class FilterFactory {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 47,
          "content": "return FilterFactory.createStandardPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 49,
          "content": "return FilterFactory.createBudgetPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 51,
          "content": "return FilterFactory.createFastPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 64,
          "content": "const finalConfig = { ...FilterFactory.defaultConfig, ...config };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 67,
          "content": "console.log('[FilterFactory] Creating standard filtering pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 78,
          "content": "console.log('[FilterFactory] Standard pipeline created with filters:',",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 92,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 98,
          "content": "console.log('[FilterFactory] Creating budget-focused pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 116,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 122,
          "content": "console.log('[FilterFactory] Creating fast filtering pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 208,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 213,
          "content": "console.log('[FilterFactory] Created filter context:', {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 308,
          "content": "return { ...FilterFactory.defaultConfig };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 315,
          "content": "FilterFactory.defaultConfig = { ...FilterFactory.defaultConfig, ...updates };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 316,
          "content": "console.log('[FilterFactory] Updated default configuration');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 335,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 336,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 382,
          "content": "console.warn(`[DEPRECATED] ${functionName} is deprecated. Use FilterFactory.createStandardPipeline() instead.`);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 386,
          "content": "export default FilterFactory;",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 8,
          "content": "// Import FilterFactory for use in convenience functions",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 9,
          "content": "import FilterFactoryClass from './FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 12,
          "content": "export { default as FilterFactory, LegacyFilterAdapter } from './FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 54,
          "content": "export const createStandardFilterPipeline = () => FilterFactoryClass.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 55,
          "content": "export const createBudgetFilterPipeline = () => FilterFactoryClass.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 56,
          "content": "export const createFastFilterPipeline = () => FilterFactoryClass.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 57,
          "content": "export const createFilterContext = FilterFactoryClass.createFilterContext.bind(FilterFactoryClass);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 58,
          "content": "export const validateSearchParams = FilterFactoryClass.validateSearchParams.bind(FilterFactoryClass);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//services/tripOffersService.ts",
          "lineNumber": 4,
          "content": "import { FilterFactory, createFilterContext, normalizeOffers } from \"@/lib/filtering\";",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//services/tripOffersService.ts",
          "lineNumber": 274,
          "content": "const filterPipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 10,
          "content": "FilterFactory,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 186,
          "content": "const pipelineType = FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 194,
          "content": "const pipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//_shared/filtering.ts",
          "lineNumber": 476,
          "content": "export class FilterFactory {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "auto-booking": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 23,
          "content": "auto_book_enabled?: boolean;",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 63,
          "content": "auto_book_enabled: z.boolean().default(false).optional(),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 94,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 104,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/utils/reactTestUtils.tsx",
          "lineNumber": 188,
          "content": "auto_book_enabled: false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 46,
          "content": "it('should display auto-booking banner if tripRequest.auto_book_enabled is true', async () => {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 59,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-1', auto_book_enabled: true, name: 'Test Trip AutoBook' }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 84,
          "content": "it('should display \"Book Now\" button if tripRequest.auto_book_enabled is false', async () => {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 97,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-2', auto_book_enabled: false, name: 'Test Trip Manual' }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 134,
          "content": "if (tableName === 'trip_requests') { // For fetching auto_book_enabled status",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 138,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-3', auto_book_enabled: true }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 756,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 782,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 808,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 759,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 785,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 811,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 473,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 496,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 519,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingToggle.tsx",
          "lineNumber": 20,
          "content": "name=\"auto_book_enabled\"",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 23,
          "content": "// Watch the auto_book_enabled field to conditionally show fields",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 26,
          "content": "name: \"auto_book_enabled\",",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 70,
          "content": "name=\"auto_book_enabled\"",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 75,
          "content": "auto_book_enabled: mode === 'auto', // Set based on mode",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 102,
          "content": "auto_book_enabled: tripData.auto_book_enabled ?? false, // Use nullish coalescing",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 147,
          "content": "const isAutoBookingEnabled = data.auto_book_enabled;",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 160,
          "content": "auto_book_enabled: isAutoBookingEnabled,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 184,
          "content": "auto_book_enabled: formData.auto_book_enabled ?? false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 194,
          "content": "autoBookEnabled: tripRequestData.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 220,
          "content": "auto_book_enabled: formData.auto_book_enabled ?? false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 229,
          "content": "autoBookEnabled: tripRequestData.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 239,
          "content": "const autoBookText = tripRequest.auto_book_enabled ? (tripRequestId ? ' Auto-booking settings updated.' : ' Auto-booking is enabled.') : '';",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 307,
          "content": "// Specifically to check data.preferred_payment_method_id when auto_book_enabled is true",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 395,
          "content": "(!watchedFields.auto_book_enabled || watchedFields.preferred_payment_method_id) &&",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 401,
          "content": ": watchedFields.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 410,
          "content": "return watchedFields.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 51,
          "content": "conditions.push({ column: 'auto_book_enabled', operator: 'eq', value: filters.autoBookEnabled });",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 102,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true },",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 197,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true },",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 248,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 306,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 312,
          "content": "{ auto_book_enabled: data.auto_book_enabled }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 321,
          "content": "{ auto_book_enabled: data.auto_book_enabled }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 165,
          "content": ".select(\"auto_book_enabled\")",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 170,
          "content": "console.error(\"Error fetching auto_book_enabled status:\", tripRequestError.message);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 173,
          "content": "setAutoBookEnabled(tripRequestData?.auto_book_enabled ?? false);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//services/tripService.ts",
          "lineNumber": 42,
          "content": "auto_book_enabled: formData.auto_book_enabled || false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//services/campaignService.ts",
          "lineNumber": 109,
          "content": "auto_book_enabled: true,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//duffel-book/index.ts",
          "lineNumber": 149,
          "content": "auto_book_enabled: false, // Disable further auto-booking",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//flight-search/index.ts",
          "lineNumber": 290,
          "content": ".eq(\"auto_book_enabled\", true);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//auto-book-duffel/index.ts",
          "lineNumber": 277,
          "content": "auto_book_enabled: false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//types/form.ts",
          "lineNumber": 99,
          "content": "message: \"Maximum price and payment method are required for auto-booking\",",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//lib/errors/duffelErrors.ts",
          "lineNumber": 26,
          "content": "PAYMENT_REQUIRED = 'payment_required',",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//services/duffelService.ts",
          "lineNumber": 60,
          "content": "payment_required_by?: string;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//form-schema-validator/index.ts",
          "lineNumber": 351,
          "content": "if (ruleData.payment_fields && ruleData.required_ssl) {",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//auto-book/index.ts",
          "lineNumber": 645,
          "content": "console.error(`[AutoBook] CRITICAL: Refund attempt for ${paymentIntentId} failed after capture failure. Manual intervention likely required. Refund Error:`, refundErr.message);",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//auto-book/index.ts",
          "lineNumber": 814,
          "content": "console.error(`[AutoBook] CRITICAL: Failed to refund Stripe payment ${trip.payment_intent_id} for trip ID ${trip.id} after a post-capture error. Manual intervention required. Refund Error:`, refundError.message);",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//lib/duffelService.ts",
          "lineNumber": 47,
          "content": "payment_required_by: string | null;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//lib/duffel.ts",
          "lineNumber": 29,
          "content": "payment_required_by: string | null;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//_shared/form-config-kms.ts",
          "lineNumber": 677,
          "content": "details: { requirement: 'payment_field_required' }",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ]
    },
    "byFile": {
      "src//types/form.ts": [
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//types/form.ts",
          "lineNumber": 60,
          "content": "nonstop_required: z.boolean().default(true),",
          "timestamp": "2025-07-06T07:13:56.004Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 23,
          "content": "auto_book_enabled?: boolean;",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 63,
          "content": "auto_book_enabled: z.boolean().default(false).optional(),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 94,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 104,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//types/form.ts",
          "lineNumber": 99,
          "content": "message: \"Maximum price and payment method are required for auto-booking\",",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ],
      "src//components/trip/TripRequestForm.tsx": [
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 73,
          "content": "nonstop_required: true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 100,
          "content": "nonstop_required: tripData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 182,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 218,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 75,
          "content": "auto_book_enabled: mode === 'auto', // Set based on mode",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 102,
          "content": "auto_book_enabled: tripData.auto_book_enabled ?? false, // Use nullish coalescing",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 147,
          "content": "const isAutoBookingEnabled = data.auto_book_enabled;",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 160,
          "content": "auto_book_enabled: isAutoBookingEnabled,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 184,
          "content": "auto_book_enabled: formData.auto_book_enabled ?? false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 194,
          "content": "autoBookEnabled: tripRequestData.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 220,
          "content": "auto_book_enabled: formData.auto_book_enabled ?? false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 229,
          "content": "autoBookEnabled: tripRequestData.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 239,
          "content": "const autoBookText = tripRequest.auto_book_enabled ? (tripRequestId ? ' Auto-booking settings updated.' : ' Auto-booking is enabled.') : '';",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 307,
          "content": "// Specifically to check data.preferred_payment_method_id when auto_book_enabled is true",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 395,
          "content": "(!watchedFields.auto_book_enabled || watchedFields.preferred_payment_method_id) &&",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 401,
          "content": ": watchedFields.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 410,
          "content": "return watchedFields.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//lib/filtering/__tests__/FilteringSystem.test.ts": [
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 180,
          "content": "nonstop_required: true",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 9,
          "content": "import FilterFactory, { LegacyFilterAdapter } from '../FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 125,
          "content": "describe('FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 128,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 137,
          "content": "const pipeline = FilterFactory.createBudgetPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 145,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 165,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 183,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 200,
          "content": "const validation = FilterFactory.validateSearchParams(validParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 211,
          "content": "const validation = FilterFactory.validateSearchParams(invalidParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 225,
          "content": "const validation = FilterFactory.validateSearchParams(invalidParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 238,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 289,
          "content": "const oneWayContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 314,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 374,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 415,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 416,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 453,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 454,
          "content": "const invalidContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 517,
          "content": "'[DEPRECATED] filterAmadeusRoundTripOffers is deprecated. Use FilterFactory.createStandardPipeline() instead.'",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 526,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 527,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 550,
          "content": "const pipeline = FilterFactory.createFastPipeline({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 553,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 583,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//services/tripService.ts": [
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//services/tripService.ts",
          "lineNumber": 39,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//services/tripService.ts",
          "lineNumber": 42,
          "content": "auto_book_enabled: formData.auto_book_enabled || false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "supabase/functions//flight-search/index.ts": [
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "supabase/functions//flight-search/index.ts",
          "lineNumber": 427,
          "content": "if (request.nonstop_required === true && offer.nonstop_match !== true) {",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//flight-search/index.ts",
          "lineNumber": 290,
          "content": ".eq(\"auto_book_enabled\", true);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//lib/business-rules/schema.ts": [
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 35,
          "content": "forceRoundTrip: z.boolean().default(true),",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 104,
          "content": "forceRoundTrip: false, // More flexibility in dev",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 115,
          "content": "forceRoundTrip: true,",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 123,
          "content": "forceRoundTrip: true,",
          "timestamp": "2025-07-06T07:13:56.138Z"
        }
      ],
      "src//utils/roundTripFiltering.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//utils/roundTripFiltering.ts",
          "lineNumber": 5,
          "content": "* Use the new FilterFactory from @/lib/filtering/FilterFactory instead.",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//utils/roundTripFiltering.ts",
          "lineNumber": 11,
          "content": "import { LegacyFilterAdapter } from '@/lib/filtering/FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//components/filtering/__tests__/frontend-integration.test.tsx": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 7,
          "content": "* - Backend FilterFactory system",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 611,
          "content": "describe('Integration with Backend FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 612,
          "content": "it('should generate filter options compatible with FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 626,
          "content": "// These options should match what the FilterFactory expects",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//components/filtering/AdvancedFilterControls.tsx": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/AdvancedFilterControls.tsx",
          "lineNumber": 14,
          "content": "* Filter options that integrate with the backend FilterFactory system",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//lib/filtering/__tests__/integration-simple.test.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 7,
          "content": "import { FilterFactory, createFilterContext } from '@/lib/filtering';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 45,
          "content": "describe('FilterFactory Integration', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 47,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 48,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 49,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 266,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 344,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 345,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 346,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 406,
          "content": "const pipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 466,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//lib/filtering/__tests__/end-to-end-integration.test.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 9,
          "content": "import { FilterFactory } from '../FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 106,
          "content": "roundTripContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 117,
          "content": "oneWayContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 127,
          "content": "budgetContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 211,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 228,
          "content": "const pipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 250,
          "content": "const oneWayFilterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 268,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 278,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 284,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 290,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 316,
          "content": "const filterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 333,
          "content": "const pipelineType = FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 339,
          "content": "const pipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 357,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 372,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 389,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 405,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 424,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 443,
          "content": "const filterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//lib/filtering/__tests__/integration.test.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 9,
          "content": "import { FilterFactory, createFilterContext, normalizeOffers } from '@/lib/filtering';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 204,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 205,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 206,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 375,
          "content": "// Mock FilterFactory to throw an error",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 376,
          "content": "vi.spyOn(FilterFactory, 'createPipeline').mockImplementation(() => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//lib/filtering/__tests__/AirlineFilter.test.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 423,
          "content": "describe('Integration with FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 424,
          "content": "it('should integrate with filter context from FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 425,
          "content": "// This test would verify integration with the FilterFactory.createFilterContext method",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 431,
          "content": "// 1. Use FilterFactory.createFilterContext(mockSearchParams)",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//lib/filtering/FilterFactory.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 26,
          "content": "export class FilterFactory {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 47,
          "content": "return FilterFactory.createStandardPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 49,
          "content": "return FilterFactory.createBudgetPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 51,
          "content": "return FilterFactory.createFastPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 64,
          "content": "const finalConfig = { ...FilterFactory.defaultConfig, ...config };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 67,
          "content": "console.log('[FilterFactory] Creating standard filtering pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 78,
          "content": "console.log('[FilterFactory] Standard pipeline created with filters:',",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 92,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 98,
          "content": "console.log('[FilterFactory] Creating budget-focused pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 116,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 122,
          "content": "console.log('[FilterFactory] Creating fast filtering pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 208,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 213,
          "content": "console.log('[FilterFactory] Created filter context:', {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 308,
          "content": "return { ...FilterFactory.defaultConfig };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 315,
          "content": "FilterFactory.defaultConfig = { ...FilterFactory.defaultConfig, ...updates };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 316,
          "content": "console.log('[FilterFactory] Updated default configuration');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 335,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 336,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 382,
          "content": "console.warn(`[DEPRECATED] ${functionName} is deprecated. Use FilterFactory.createStandardPipeline() instead.`);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 386,
          "content": "export default FilterFactory;",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//lib/filtering/index.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 8,
          "content": "// Import FilterFactory for use in convenience functions",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 9,
          "content": "import FilterFactoryClass from './FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 12,
          "content": "export { default as FilterFactory, LegacyFilterAdapter } from './FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 54,
          "content": "export const createStandardFilterPipeline = () => FilterFactoryClass.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 55,
          "content": "export const createBudgetFilterPipeline = () => FilterFactoryClass.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 56,
          "content": "export const createFastFilterPipeline = () => FilterFactoryClass.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 57,
          "content": "export const createFilterContext = FilterFactoryClass.createFilterContext.bind(FilterFactoryClass);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 58,
          "content": "export const validateSearchParams = FilterFactoryClass.validateSearchParams.bind(FilterFactoryClass);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//services/tripOffersService.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//services/tripOffersService.ts",
          "lineNumber": 4,
          "content": "import { FilterFactory, createFilterContext, normalizeOffers } from \"@/lib/filtering\";",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//services/tripOffersService.ts",
          "lineNumber": 274,
          "content": "const filterPipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "supabase/functions//flight-search-v2/index.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 10,
          "content": "FilterFactory,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 186,
          "content": "const pipelineType = FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 194,
          "content": "const pipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "supabase/functions//_shared/filtering.ts": [
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//_shared/filtering.ts",
          "lineNumber": 476,
          "content": "export class FilterFactory {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        }
      ],
      "src//tests/utils/reactTestUtils.tsx": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/utils/reactTestUtils.tsx",
          "lineNumber": 188,
          "content": "auto_book_enabled: false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//tests/pages/TripConfirm.test.tsx": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 46,
          "content": "it('should display auto-booking banner if tripRequest.auto_book_enabled is true', async () => {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 59,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-1', auto_book_enabled: true, name: 'Test Trip AutoBook' }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 84,
          "content": "it('should display \"Book Now\" button if tripRequest.auto_book_enabled is false', async () => {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 97,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-2', auto_book_enabled: false, name: 'Test Trip Manual' }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 134,
          "content": "if (tableName === 'trip_requests') { // For fetching auto_book_enabled status",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 138,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-3', auto_book_enabled: true }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//integrations/supabase/types.generated.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 756,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 782,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 808,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//integrations/supabase/types.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 759,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 785,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 811,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//integrations/supabase/types-latest.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 473,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 496,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 519,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//components/trip/sections/AutoBookingToggle.tsx": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingToggle.tsx",
          "lineNumber": 20,
          "content": "name=\"auto_book_enabled\"",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//components/trip/sections/AutoBookingSection.tsx": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 23,
          "content": "// Watch the auto_book_enabled field to conditionally show fields",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 26,
          "content": "name: \"auto_book_enabled\",",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 70,
          "content": "name=\"auto_book_enabled\"",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//lib/repositories/tripRequestRepository.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 51,
          "content": "conditions.push({ column: 'auto_book_enabled', operator: 'eq', value: filters.autoBookEnabled });",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 102,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true },",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 197,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true },",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 248,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 306,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 312,
          "content": "{ auto_book_enabled: data.auto_book_enabled }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 321,
          "content": "{ auto_book_enabled: data.auto_book_enabled }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//pages/TripConfirm.tsx": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 165,
          "content": ".select(\"auto_book_enabled\")",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 170,
          "content": "console.error(\"Error fetching auto_book_enabled status:\", tripRequestError.message);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 173,
          "content": "setAutoBookEnabled(tripRequestData?.auto_book_enabled ?? false);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//services/campaignService.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//services/campaignService.ts",
          "lineNumber": 109,
          "content": "auto_book_enabled: true,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "supabase/functions//duffel-book/index.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//duffel-book/index.ts",
          "lineNumber": 149,
          "content": "auto_book_enabled: false, // Disable further auto-booking",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "supabase/functions//auto-book-duffel/index.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//auto-book-duffel/index.ts",
          "lineNumber": 277,
          "content": "auto_book_enabled: false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        }
      ],
      "src//lib/errors/duffelErrors.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//lib/errors/duffelErrors.ts",
          "lineNumber": 26,
          "content": "PAYMENT_REQUIRED = 'payment_required',",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ],
      "src//services/duffelService.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//services/duffelService.ts",
          "lineNumber": 60,
          "content": "payment_required_by?: string;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ],
      "supabase/functions//form-schema-validator/index.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//form-schema-validator/index.ts",
          "lineNumber": 351,
          "content": "if (ruleData.payment_fields && ruleData.required_ssl) {",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ],
      "supabase/functions//auto-book/index.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//auto-book/index.ts",
          "lineNumber": 645,
          "content": "console.error(`[AutoBook] CRITICAL: Refund attempt for ${paymentIntentId} failed after capture failure. Manual intervention likely required. Refund Error:`, refundErr.message);",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//auto-book/index.ts",
          "lineNumber": 814,
          "content": "console.error(`[AutoBook] CRITICAL: Failed to refund Stripe payment ${trip.payment_intent_id} for trip ID ${trip.id} after a post-capture error. Manual intervention required. Refund Error:`, refundError.message);",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ],
      "supabase/functions//lib/duffelService.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//lib/duffelService.ts",
          "lineNumber": 47,
          "content": "payment_required_by: string | null;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ],
      "supabase/functions//lib/duffel.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//lib/duffel.ts",
          "lineNumber": 29,
          "content": "payment_required_by: string | null;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ],
      "supabase/functions//_shared/form-config-kms.ts": [
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//_shared/form-config-kms.ts",
          "lineNumber": 677,
          "content": "details: { requirement: 'payment_field_required' }",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ]
    },
    "byPriority": {
      "high": [
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//types/form.ts",
          "lineNumber": 60,
          "content": "nonstop_required: z.boolean().default(true),",
          "timestamp": "2025-07-06T07:13:56.004Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 73,
          "content": "nonstop_required: true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 100,
          "content": "nonstop_required: tripData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 182,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 218,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 180,
          "content": "nonstop_required: true",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "src//services/tripService.ts",
          "lineNumber": 39,
          "content": "nonstop_required: formData.nonstop_required ?? true,",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "nonstop_required.*true",
          "filePath": "supabase/functions//flight-search/index.ts",
          "lineNumber": 427,
          "content": "if (request.nonstop_required === true && offer.nonstop_match !== true) {",
          "timestamp": "2025-07-06T07:13:56.005Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 35,
          "content": "forceRoundTrip: z.boolean().default(true),",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 104,
          "content": "forceRoundTrip: false, // More flexibility in dev",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 115,
          "content": "forceRoundTrip: true,",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "flight-search",
          "priority": "high",
          "pattern": "forceRoundTrip",
          "filePath": "src//lib/business-rules/schema.ts",
          "lineNumber": 123,
          "content": "forceRoundTrip: true,",
          "timestamp": "2025-07-06T07:13:56.138Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//utils/roundTripFiltering.ts",
          "lineNumber": 5,
          "content": "* Use the new FilterFactory from @/lib/filtering/FilterFactory instead.",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//utils/roundTripFiltering.ts",
          "lineNumber": 11,
          "content": "import { LegacyFilterAdapter } from '@/lib/filtering/FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 7,
          "content": "* - Backend FilterFactory system",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 611,
          "content": "describe('Integration with Backend FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 612,
          "content": "it('should generate filter options compatible with FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
          "lineNumber": 626,
          "content": "// These options should match what the FilterFactory expects",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//components/filtering/AdvancedFilterControls.tsx",
          "lineNumber": 14,
          "content": "* Filter options that integrate with the backend FilterFactory system",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 9,
          "content": "import FilterFactory, { LegacyFilterAdapter } from '../FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 125,
          "content": "describe('FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 128,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 137,
          "content": "const pipeline = FilterFactory.createBudgetPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 145,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 165,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 183,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 200,
          "content": "const validation = FilterFactory.validateSearchParams(validParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 211,
          "content": "const validation = FilterFactory.validateSearchParams(invalidParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 225,
          "content": "const validation = FilterFactory.validateSearchParams(invalidParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 238,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 289,
          "content": "const oneWayContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 314,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 374,
          "content": "context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 415,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 416,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 453,
          "content": "const pipeline = FilterFactory.createStandardPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 454,
          "content": "const invalidContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 517,
          "content": "'[DEPRECATED] filterAmadeusRoundTripOffers is deprecated. Use FilterFactory.createStandardPipeline() instead.'",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 526,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 527,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 550,
          "content": "const pipeline = FilterFactory.createFastPipeline({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 553,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
          "lineNumber": 583,
          "content": "const context = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 7,
          "content": "import { FilterFactory, createFilterContext } from '@/lib/filtering';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 45,
          "content": "describe('FilterFactory Integration', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 47,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 48,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 49,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 266,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 344,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 345,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 346,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 406,
          "content": "const pipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
          "lineNumber": 466,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 9,
          "content": "import { FilterFactory } from '../FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 106,
          "content": "roundTripContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 117,
          "content": "oneWayContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 127,
          "content": "budgetContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 211,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 228,
          "content": "const pipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 250,
          "content": "const oneWayFilterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 268,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 278,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 284,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 290,
          "content": "expect(FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 316,
          "content": "const filterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 333,
          "content": "const pipelineType = FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 339,
          "content": "const pipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 357,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 372,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 389,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 405,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 424,
          "content": "const pipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
          "lineNumber": 443,
          "content": "const filterContext = FilterFactory.createFilterContext({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 9,
          "content": "import { FilterFactory, createFilterContext, normalizeOffers } from '@/lib/filtering';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 204,
          "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 205,
          "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 206,
          "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 375,
          "content": "// Mock FilterFactory to throw an error",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/integration.test.ts",
          "lineNumber": 376,
          "content": "vi.spyOn(FilterFactory, 'createPipeline').mockImplementation(() => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 423,
          "content": "describe('Integration with FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 424,
          "content": "it('should integrate with filter context from FilterFactory', () => {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 425,
          "content": "// This test would verify integration with the FilterFactory.createFilterContext method",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
          "lineNumber": 431,
          "content": "// 1. Use FilterFactory.createFilterContext(mockSearchParams)",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 26,
          "content": "export class FilterFactory {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 47,
          "content": "return FilterFactory.createStandardPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 49,
          "content": "return FilterFactory.createBudgetPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 51,
          "content": "return FilterFactory.createFastPipeline(config, logger);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 64,
          "content": "const finalConfig = { ...FilterFactory.defaultConfig, ...config };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 67,
          "content": "console.log('[FilterFactory] Creating standard filtering pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 78,
          "content": "console.log('[FilterFactory] Standard pipeline created with filters:',",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 92,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 98,
          "content": "console.log('[FilterFactory] Creating budget-focused pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 116,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 122,
          "content": "console.log('[FilterFactory] Creating fast filtering pipeline');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 208,
          "content": "...FilterFactory.defaultConfig,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 213,
          "content": "console.log('[FilterFactory] Created filter context:', {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 308,
          "content": "return { ...FilterFactory.defaultConfig };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 315,
          "content": "FilterFactory.defaultConfig = { ...FilterFactory.defaultConfig, ...updates };",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 316,
          "content": "console.log('[FilterFactory] Updated default configuration');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 335,
          "content": "const pipeline = FilterFactory.createFastPipeline();",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 336,
          "content": "const context = FilterFactory.createFilterContext(searchParams);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 382,
          "content": "console.warn(`[DEPRECATED] ${functionName} is deprecated. Use FilterFactory.createStandardPipeline() instead.`);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/FilterFactory.ts",
          "lineNumber": 386,
          "content": "export default FilterFactory;",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 8,
          "content": "// Import FilterFactory for use in convenience functions",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 9,
          "content": "import FilterFactoryClass from './FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 12,
          "content": "export { default as FilterFactory, LegacyFilterAdapter } from './FilterFactory';",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 54,
          "content": "export const createStandardFilterPipeline = () => FilterFactoryClass.createPipeline('standard');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 55,
          "content": "export const createBudgetFilterPipeline = () => FilterFactoryClass.createPipeline('budget');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 56,
          "content": "export const createFastFilterPipeline = () => FilterFactoryClass.createPipeline('fast');",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 57,
          "content": "export const createFilterContext = FilterFactoryClass.createFilterContext.bind(FilterFactoryClass);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//lib/filtering/index.ts",
          "lineNumber": 58,
          "content": "export const validateSearchParams = FilterFactoryClass.validateSearchParams.bind(FilterFactoryClass);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//services/tripOffersService.ts",
          "lineNumber": 4,
          "content": "import { FilterFactory, createFilterContext, normalizeOffers } from \"@/lib/filtering\";",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "src//services/tripOffersService.ts",
          "lineNumber": 274,
          "content": "const filterPipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 10,
          "content": "FilterFactory,",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 186,
          "content": "const pipelineType = FilterFactory.recommendPipelineType({",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//flight-search-v2/index.ts",
          "lineNumber": 194,
          "content": "const pipeline = FilterFactory.createPipeline(pipelineType);",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "filters",
          "priority": "high",
          "pattern": "FilterFactory",
          "filePath": "supabase/functions//_shared/filtering.ts",
          "lineNumber": 476,
          "content": "export class FilterFactory {",
          "timestamp": "2025-07-06T07:13:56.686Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 23,
          "content": "auto_book_enabled?: boolean;",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 63,
          "content": "auto_book_enabled: z.boolean().default(false).optional(),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 94,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//types/form.ts",
          "lineNumber": 104,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/utils/reactTestUtils.tsx",
          "lineNumber": 188,
          "content": "auto_book_enabled: false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 46,
          "content": "it('should display auto-booking banner if tripRequest.auto_book_enabled is true', async () => {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 59,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-1', auto_book_enabled: true, name: 'Test Trip AutoBook' }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 84,
          "content": "it('should display \"Book Now\" button if tripRequest.auto_book_enabled is false', async () => {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 97,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-2', auto_book_enabled: false, name: 'Test Trip Manual' }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 134,
          "content": "if (tableName === 'trip_requests') { // For fetching auto_book_enabled status",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//tests/pages/TripConfirm.test.tsx",
          "lineNumber": 138,
          "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-3', auto_book_enabled: true }, error: null }),",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 756,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 782,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.generated.ts",
          "lineNumber": 808,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 759,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 785,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types.ts",
          "lineNumber": 811,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 473,
          "content": "auto_book_enabled: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 496,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//integrations/supabase/types-latest.ts",
          "lineNumber": 519,
          "content": "auto_book_enabled?: boolean",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingToggle.tsx",
          "lineNumber": 20,
          "content": "name=\"auto_book_enabled\"",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 23,
          "content": "// Watch the auto_book_enabled field to conditionally show fields",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 26,
          "content": "name: \"auto_book_enabled\",",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
          "lineNumber": 70,
          "content": "name=\"auto_book_enabled\"",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 75,
          "content": "auto_book_enabled: mode === 'auto', // Set based on mode",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 102,
          "content": "auto_book_enabled: tripData.auto_book_enabled ?? false, // Use nullish coalescing",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 147,
          "content": "const isAutoBookingEnabled = data.auto_book_enabled;",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 160,
          "content": "auto_book_enabled: isAutoBookingEnabled,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 184,
          "content": "auto_book_enabled: formData.auto_book_enabled ?? false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 194,
          "content": "autoBookEnabled: tripRequestData.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 220,
          "content": "auto_book_enabled: formData.auto_book_enabled ?? false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 229,
          "content": "autoBookEnabled: tripRequestData.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 239,
          "content": "const autoBookText = tripRequest.auto_book_enabled ? (tripRequestId ? ' Auto-booking settings updated.' : ' Auto-booking is enabled.') : '';",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 307,
          "content": "// Specifically to check data.preferred_payment_method_id when auto_book_enabled is true",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 395,
          "content": "(!watchedFields.auto_book_enabled || watchedFields.preferred_payment_method_id) &&",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 401,
          "content": ": watchedFields.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//components/trip/TripRequestForm.tsx",
          "lineNumber": 410,
          "content": "return watchedFields.auto_book_enabled",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 51,
          "content": "conditions.push({ column: 'auto_book_enabled', operator: 'eq', value: filters.autoBookEnabled });",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 102,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true },",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 197,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true },",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 248,
          "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 306,
          "content": "if (data.auto_book_enabled) {",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 312,
          "content": "{ auto_book_enabled: data.auto_book_enabled }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//lib/repositories/tripRequestRepository.ts",
          "lineNumber": 321,
          "content": "{ auto_book_enabled: data.auto_book_enabled }",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 165,
          "content": ".select(\"auto_book_enabled\")",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 170,
          "content": "console.error(\"Error fetching auto_book_enabled status:\", tripRequestError.message);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//pages/TripConfirm.tsx",
          "lineNumber": 173,
          "content": "setAutoBookEnabled(tripRequestData?.auto_book_enabled ?? false);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//services/tripService.ts",
          "lineNumber": 42,
          "content": "auto_book_enabled: formData.auto_book_enabled || false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "src//services/campaignService.ts",
          "lineNumber": 109,
          "content": "auto_book_enabled: true,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//duffel-book/index.ts",
          "lineNumber": 149,
          "content": "auto_book_enabled: false, // Disable further auto-booking",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//flight-search/index.ts",
          "lineNumber": 290,
          "content": ".eq(\"auto_book_enabled\", true);",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "auto_book_enabled",
          "filePath": "supabase/functions//auto-book-duffel/index.ts",
          "lineNumber": 277,
          "content": "auto_book_enabled: false,",
          "timestamp": "2025-07-06T07:13:56.757Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//types/form.ts",
          "lineNumber": 99,
          "content": "message: \"Maximum price and payment method are required for auto-booking\",",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//lib/errors/duffelErrors.ts",
          "lineNumber": 26,
          "content": "PAYMENT_REQUIRED = 'payment_required',",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "src//services/duffelService.ts",
          "lineNumber": 60,
          "content": "payment_required_by?: string;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//form-schema-validator/index.ts",
          "lineNumber": 351,
          "content": "if (ruleData.payment_fields && ruleData.required_ssl) {",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//auto-book/index.ts",
          "lineNumber": 645,
          "content": "console.error(`[AutoBook] CRITICAL: Refund attempt for ${paymentIntentId} failed after capture failure. Manual intervention likely required. Refund Error:`, refundErr.message);",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//auto-book/index.ts",
          "lineNumber": 814,
          "content": "console.error(`[AutoBook] CRITICAL: Failed to refund Stripe payment ${trip.payment_intent_id} for trip ID ${trip.id} after a post-capture error. Manual intervention required. Refund Error:`, refundError.message);",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//lib/duffelService.ts",
          "lineNumber": 47,
          "content": "payment_required_by: string | null;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//lib/duffel.ts",
          "lineNumber": 29,
          "content": "payment_required_by: string | null;",
          "timestamp": "2025-07-06T07:13:56.822Z"
        },
        {
          "category": "auto-booking",
          "priority": "high",
          "pattern": "payment.*required",
          "filePath": "supabase/functions//_shared/form-config-kms.ts",
          "lineNumber": 677,
          "content": "details: { requirement: 'payment_field_required' }",
          "timestamp": "2025-07-06T07:13:56.822Z"
        }
      ]
    },
    "recommendations": [
      {
        "type": "migration-order",
        "title": "Recommended Migration Order",
        "items": [
          "src//lib/filtering/__tests__/FilteringSystem.test.ts (25 rules found)",
          "src//lib/filtering/__tests__/end-to-end-integration.test.ts (20 rules found)",
          "src//lib/filtering/FilterFactory.ts (20 rules found)",
          "src//components/trip/TripRequestForm.tsx (17 rules found)",
          "src//lib/filtering/__tests__/integration-simple.test.ts (11 rules found)"
        ]
      },
      {
        "type": "complexity-assessment",
        "title": "Complexity Assessment",
        "items": [
          "High Priority Rules: 179",
          "Medium Priority Rules: 0",
          "Low Priority Rules: 0"
        ]
      },
      {
        "type": "risk-assessment",
        "title": "Risk Assessment",
        "items": [
          "flight-search: 12 rules (12 critical)",
          "filters: 106 rules (106 critical)",
          "auto-booking: 61 rules (61 critical)"
        ]
      }
    ]
  },
  "allFindings": [
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "nonstop_required.*true",
      "filePath": "src//types/form.ts",
      "lineNumber": 60,
      "content": "nonstop_required: z.boolean().default(true),",
      "timestamp": "2025-07-06T07:13:56.004Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "nonstop_required.*true",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 73,
      "content": "nonstop_required: true,",
      "timestamp": "2025-07-06T07:13:56.005Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "nonstop_required.*true",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 100,
      "content": "nonstop_required: tripData.nonstop_required ?? true,",
      "timestamp": "2025-07-06T07:13:56.005Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "nonstop_required.*true",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 182,
      "content": "nonstop_required: formData.nonstop_required ?? true,",
      "timestamp": "2025-07-06T07:13:56.005Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "nonstop_required.*true",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 218,
      "content": "nonstop_required: formData.nonstop_required ?? true,",
      "timestamp": "2025-07-06T07:13:56.005Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "nonstop_required.*true",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 180,
      "content": "nonstop_required: true",
      "timestamp": "2025-07-06T07:13:56.005Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "nonstop_required.*true",
      "filePath": "src//services/tripService.ts",
      "lineNumber": 39,
      "content": "nonstop_required: formData.nonstop_required ?? true,",
      "timestamp": "2025-07-06T07:13:56.005Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "nonstop_required.*true",
      "filePath": "supabase/functions//flight-search/index.ts",
      "lineNumber": 427,
      "content": "if (request.nonstop_required === true && offer.nonstop_match !== true) {",
      "timestamp": "2025-07-06T07:13:56.005Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "forceRoundTrip",
      "filePath": "src//lib/business-rules/schema.ts",
      "lineNumber": 35,
      "content": "forceRoundTrip: z.boolean().default(true),",
      "timestamp": "2025-07-06T07:13:56.138Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "forceRoundTrip",
      "filePath": "src//lib/business-rules/schema.ts",
      "lineNumber": 104,
      "content": "forceRoundTrip: false, // More flexibility in dev",
      "timestamp": "2025-07-06T07:13:56.138Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "forceRoundTrip",
      "filePath": "src//lib/business-rules/schema.ts",
      "lineNumber": 115,
      "content": "forceRoundTrip: true,",
      "timestamp": "2025-07-06T07:13:56.138Z"
    },
    {
      "category": "flight-search",
      "priority": "high",
      "pattern": "forceRoundTrip",
      "filePath": "src//lib/business-rules/schema.ts",
      "lineNumber": 123,
      "content": "forceRoundTrip: true,",
      "timestamp": "2025-07-06T07:13:56.138Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//utils/roundTripFiltering.ts",
      "lineNumber": 5,
      "content": "* Use the new FilterFactory from @/lib/filtering/FilterFactory instead.",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//utils/roundTripFiltering.ts",
      "lineNumber": 11,
      "content": "import { LegacyFilterAdapter } from '@/lib/filtering/FilterFactory';",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
      "lineNumber": 7,
      "content": "* - Backend FilterFactory system",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
      "lineNumber": 611,
      "content": "describe('Integration with Backend FilterFactory', () => {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
      "lineNumber": 612,
      "content": "it('should generate filter options compatible with FilterFactory', () => {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//components/filtering/__tests__/frontend-integration.test.tsx",
      "lineNumber": 626,
      "content": "// These options should match what the FilterFactory expects",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//components/filtering/AdvancedFilterControls.tsx",
      "lineNumber": 14,
      "content": "* Filter options that integrate with the backend FilterFactory system",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 9,
      "content": "import FilterFactory, { LegacyFilterAdapter } from '../FilterFactory';",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 125,
      "content": "describe('FilterFactory', () => {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 128,
      "content": "const pipeline = FilterFactory.createStandardPipeline();",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 137,
      "content": "const pipeline = FilterFactory.createBudgetPipeline();",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 145,
      "content": "const pipeline = FilterFactory.createFastPipeline();",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 165,
      "content": "const context = FilterFactory.createFilterContext(searchParams);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 183,
      "content": "const context = FilterFactory.createFilterContext(searchParams);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 200,
      "content": "const validation = FilterFactory.validateSearchParams(validParams);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 211,
      "content": "const validation = FilterFactory.validateSearchParams(invalidParams);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 225,
      "content": "const validation = FilterFactory.validateSearchParams(invalidParams);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 238,
      "content": "context = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 289,
      "content": "const oneWayContext = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 314,
      "content": "context = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 374,
      "content": "context = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 415,
      "content": "const pipeline = FilterFactory.createStandardPipeline();",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 416,
      "content": "const context = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 453,
      "content": "const pipeline = FilterFactory.createStandardPipeline();",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 454,
      "content": "const invalidContext = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 517,
      "content": "'[DEPRECATED] filterAmadeusRoundTripOffers is deprecated. Use FilterFactory.createStandardPipeline() instead.'",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 526,
      "content": "const pipeline = FilterFactory.createFastPipeline();",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 527,
      "content": "const context = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 550,
      "content": "const pipeline = FilterFactory.createFastPipeline({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 553,
      "content": "const context = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/FilteringSystem.test.ts",
      "lineNumber": 583,
      "content": "const context = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 7,
      "content": "import { FilterFactory, createFilterContext } from '@/lib/filtering';",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 45,
      "content": "describe('FilterFactory Integration', () => {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 47,
      "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 48,
      "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 49,
      "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 266,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 344,
      "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 345,
      "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 346,
      "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 406,
      "content": "const pipeline = FilterFactory.createPipeline('fast');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration-simple.test.ts",
      "lineNumber": 466,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 9,
      "content": "import { FilterFactory } from '../FilterFactory';",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 106,
      "content": "roundTripContext = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 117,
      "content": "oneWayContext = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 127,
      "content": "budgetContext = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 211,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 228,
      "content": "const pipeline = FilterFactory.createPipeline('budget');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 250,
      "content": "const oneWayFilterContext = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 268,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 278,
      "content": "expect(FilterFactory.recommendPipelineType({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 284,
      "content": "expect(FilterFactory.recommendPipelineType({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 290,
      "content": "expect(FilterFactory.recommendPipelineType({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 316,
      "content": "const filterContext = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 333,
      "content": "const pipelineType = FilterFactory.recommendPipelineType({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 339,
      "content": "const pipeline = FilterFactory.createPipeline(pipelineType);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 357,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 372,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 389,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 405,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 424,
      "content": "const pipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/end-to-end-integration.test.ts",
      "lineNumber": 443,
      "content": "const filterContext = FilterFactory.createFilterContext({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration.test.ts",
      "lineNumber": 9,
      "content": "import { FilterFactory, createFilterContext, normalizeOffers } from '@/lib/filtering';",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration.test.ts",
      "lineNumber": 204,
      "content": "const standardPipeline = FilterFactory.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration.test.ts",
      "lineNumber": 205,
      "content": "const budgetPipeline = FilterFactory.createPipeline('budget');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration.test.ts",
      "lineNumber": 206,
      "content": "const fastPipeline = FilterFactory.createPipeline('fast');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration.test.ts",
      "lineNumber": 375,
      "content": "// Mock FilterFactory to throw an error",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/integration.test.ts",
      "lineNumber": 376,
      "content": "vi.spyOn(FilterFactory, 'createPipeline').mockImplementation(() => {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
      "lineNumber": 423,
      "content": "describe('Integration with FilterFactory', () => {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
      "lineNumber": 424,
      "content": "it('should integrate with filter context from FilterFactory', () => {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
      "lineNumber": 425,
      "content": "// This test would verify integration with the FilterFactory.createFilterContext method",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/__tests__/AirlineFilter.test.ts",
      "lineNumber": 431,
      "content": "// 1. Use FilterFactory.createFilterContext(mockSearchParams)",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 26,
      "content": "export class FilterFactory {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 47,
      "content": "return FilterFactory.createStandardPipeline(config, logger);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 49,
      "content": "return FilterFactory.createBudgetPipeline(config, logger);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 51,
      "content": "return FilterFactory.createFastPipeline(config, logger);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 64,
      "content": "const finalConfig = { ...FilterFactory.defaultConfig, ...config };",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 67,
      "content": "console.log('[FilterFactory] Creating standard filtering pipeline');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 78,
      "content": "console.log('[FilterFactory] Standard pipeline created with filters:',",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 92,
      "content": "...FilterFactory.defaultConfig,",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 98,
      "content": "console.log('[FilterFactory] Creating budget-focused pipeline');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 116,
      "content": "...FilterFactory.defaultConfig,",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 122,
      "content": "console.log('[FilterFactory] Creating fast filtering pipeline');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 208,
      "content": "...FilterFactory.defaultConfig,",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 213,
      "content": "console.log('[FilterFactory] Created filter context:', {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 308,
      "content": "return { ...FilterFactory.defaultConfig };",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 315,
      "content": "FilterFactory.defaultConfig = { ...FilterFactory.defaultConfig, ...updates };",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 316,
      "content": "console.log('[FilterFactory] Updated default configuration');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 335,
      "content": "const pipeline = FilterFactory.createFastPipeline();",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 336,
      "content": "const context = FilterFactory.createFilterContext(searchParams);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 382,
      "content": "console.warn(`[DEPRECATED] ${functionName} is deprecated. Use FilterFactory.createStandardPipeline() instead.`);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/FilterFactory.ts",
      "lineNumber": 386,
      "content": "export default FilterFactory;",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/index.ts",
      "lineNumber": 8,
      "content": "// Import FilterFactory for use in convenience functions",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/index.ts",
      "lineNumber": 9,
      "content": "import FilterFactoryClass from './FilterFactory';",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/index.ts",
      "lineNumber": 12,
      "content": "export { default as FilterFactory, LegacyFilterAdapter } from './FilterFactory';",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/index.ts",
      "lineNumber": 54,
      "content": "export const createStandardFilterPipeline = () => FilterFactoryClass.createPipeline('standard');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/index.ts",
      "lineNumber": 55,
      "content": "export const createBudgetFilterPipeline = () => FilterFactoryClass.createPipeline('budget');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/index.ts",
      "lineNumber": 56,
      "content": "export const createFastFilterPipeline = () => FilterFactoryClass.createPipeline('fast');",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/index.ts",
      "lineNumber": 57,
      "content": "export const createFilterContext = FilterFactoryClass.createFilterContext.bind(FilterFactoryClass);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//lib/filtering/index.ts",
      "lineNumber": 58,
      "content": "export const validateSearchParams = FilterFactoryClass.validateSearchParams.bind(FilterFactoryClass);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//services/tripOffersService.ts",
      "lineNumber": 4,
      "content": "import { FilterFactory, createFilterContext, normalizeOffers } from \"@/lib/filtering\";",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "src//services/tripOffersService.ts",
      "lineNumber": 274,
      "content": "const filterPipeline = FilterFactory.createPipeline(pipelineType);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "supabase/functions//flight-search-v2/index.ts",
      "lineNumber": 10,
      "content": "FilterFactory,",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "supabase/functions//flight-search-v2/index.ts",
      "lineNumber": 186,
      "content": "const pipelineType = FilterFactory.recommendPipelineType({",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "supabase/functions//flight-search-v2/index.ts",
      "lineNumber": 194,
      "content": "const pipeline = FilterFactory.createPipeline(pipelineType);",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "filters",
      "priority": "high",
      "pattern": "FilterFactory",
      "filePath": "supabase/functions//_shared/filtering.ts",
      "lineNumber": 476,
      "content": "export class FilterFactory {",
      "timestamp": "2025-07-06T07:13:56.686Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//types/form.ts",
      "lineNumber": 23,
      "content": "auto_book_enabled?: boolean;",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//types/form.ts",
      "lineNumber": 63,
      "content": "auto_book_enabled: z.boolean().default(false).optional(),",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//types/form.ts",
      "lineNumber": 94,
      "content": "if (data.auto_book_enabled) {",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//types/form.ts",
      "lineNumber": 104,
      "content": "if (data.auto_book_enabled) {",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//tests/utils/reactTestUtils.tsx",
      "lineNumber": 188,
      "content": "auto_book_enabled: false,",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//tests/pages/TripConfirm.test.tsx",
      "lineNumber": 46,
      "content": "it('should display auto-booking banner if tripRequest.auto_book_enabled is true', async () => {",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//tests/pages/TripConfirm.test.tsx",
      "lineNumber": 59,
      "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-1', auto_book_enabled: true, name: 'Test Trip AutoBook' }, error: null }),",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//tests/pages/TripConfirm.test.tsx",
      "lineNumber": 84,
      "content": "it('should display \"Book Now\" button if tripRequest.auto_book_enabled is false', async () => {",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//tests/pages/TripConfirm.test.tsx",
      "lineNumber": 97,
      "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-2', auto_book_enabled: false, name: 'Test Trip Manual' }, error: null }),",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//tests/pages/TripConfirm.test.tsx",
      "lineNumber": 134,
      "content": "if (tableName === 'trip_requests') { // For fetching auto_book_enabled status",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//tests/pages/TripConfirm.test.tsx",
      "lineNumber": 138,
      "content": "single: vi.fn().mockResolvedValueOnce({ data: { id: 'test-trip-3', auto_book_enabled: true }, error: null }),",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types.generated.ts",
      "lineNumber": 756,
      "content": "auto_book_enabled: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types.generated.ts",
      "lineNumber": 782,
      "content": "auto_book_enabled?: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types.generated.ts",
      "lineNumber": 808,
      "content": "auto_book_enabled?: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types.ts",
      "lineNumber": 759,
      "content": "auto_book_enabled: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types.ts",
      "lineNumber": 785,
      "content": "auto_book_enabled?: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types.ts",
      "lineNumber": 811,
      "content": "auto_book_enabled?: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types-latest.ts",
      "lineNumber": 473,
      "content": "auto_book_enabled: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types-latest.ts",
      "lineNumber": 496,
      "content": "auto_book_enabled?: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//integrations/supabase/types-latest.ts",
      "lineNumber": 519,
      "content": "auto_book_enabled?: boolean",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/sections/AutoBookingToggle.tsx",
      "lineNumber": 20,
      "content": "name=\"auto_book_enabled\"",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
      "lineNumber": 23,
      "content": "// Watch the auto_book_enabled field to conditionally show fields",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
      "lineNumber": 26,
      "content": "name: \"auto_book_enabled\",",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/sections/AutoBookingSection.tsx",
      "lineNumber": 70,
      "content": "name=\"auto_book_enabled\"",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 75,
      "content": "auto_book_enabled: mode === 'auto', // Set based on mode",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 102,
      "content": "auto_book_enabled: tripData.auto_book_enabled ?? false, // Use nullish coalescing",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 147,
      "content": "const isAutoBookingEnabled = data.auto_book_enabled;",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 160,
      "content": "auto_book_enabled: isAutoBookingEnabled,",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 184,
      "content": "auto_book_enabled: formData.auto_book_enabled ?? false,",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 194,
      "content": "autoBookEnabled: tripRequestData.auto_book_enabled",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 220,
      "content": "auto_book_enabled: formData.auto_book_enabled ?? false,",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 229,
      "content": "autoBookEnabled: tripRequestData.auto_book_enabled",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 239,
      "content": "const autoBookText = tripRequest.auto_book_enabled ? (tripRequestId ? ' Auto-booking settings updated.' : ' Auto-booking is enabled.') : '';",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 307,
      "content": "// Specifically to check data.preferred_payment_method_id when auto_book_enabled is true",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 395,
      "content": "(!watchedFields.auto_book_enabled || watchedFields.preferred_payment_method_id) &&",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 401,
      "content": ": watchedFields.auto_book_enabled",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//components/trip/TripRequestForm.tsx",
      "lineNumber": 410,
      "content": "return watchedFields.auto_book_enabled",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//lib/repositories/tripRequestRepository.ts",
      "lineNumber": 51,
      "content": "conditions.push({ column: 'auto_book_enabled', operator: 'eq', value: filters.autoBookEnabled });",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//lib/repositories/tripRequestRepository.ts",
      "lineNumber": 102,
      "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true },",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//lib/repositories/tripRequestRepository.ts",
      "lineNumber": 197,
      "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true },",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//lib/repositories/tripRequestRepository.ts",
      "lineNumber": 248,
      "content": "{ column: 'auto_book_enabled', operator: 'eq', value: true }",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//lib/repositories/tripRequestRepository.ts",
      "lineNumber": 306,
      "content": "if (data.auto_book_enabled) {",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//lib/repositories/tripRequestRepository.ts",
      "lineNumber": 312,
      "content": "{ auto_book_enabled: data.auto_book_enabled }",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//lib/repositories/tripRequestRepository.ts",
      "lineNumber": 321,
      "content": "{ auto_book_enabled: data.auto_book_enabled }",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//pages/TripConfirm.tsx",
      "lineNumber": 165,
      "content": ".select(\"auto_book_enabled\")",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//pages/TripConfirm.tsx",
      "lineNumber": 170,
      "content": "console.error(\"Error fetching auto_book_enabled status:\", tripRequestError.message);",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//pages/TripConfirm.tsx",
      "lineNumber": 173,
      "content": "setAutoBookEnabled(tripRequestData?.auto_book_enabled ?? false);",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//services/tripService.ts",
      "lineNumber": 42,
      "content": "auto_book_enabled: formData.auto_book_enabled || false,",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "src//services/campaignService.ts",
      "lineNumber": 109,
      "content": "auto_book_enabled: true,",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "supabase/functions//duffel-book/index.ts",
      "lineNumber": 149,
      "content": "auto_book_enabled: false, // Disable further auto-booking",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "supabase/functions//flight-search/index.ts",
      "lineNumber": 290,
      "content": ".eq(\"auto_book_enabled\", true);",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "auto_book_enabled",
      "filePath": "supabase/functions//auto-book-duffel/index.ts",
      "lineNumber": 277,
      "content": "auto_book_enabled: false,",
      "timestamp": "2025-07-06T07:13:56.757Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "src//types/form.ts",
      "lineNumber": 99,
      "content": "message: \"Maximum price and payment method are required for auto-booking\",",
      "timestamp": "2025-07-06T07:13:56.822Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "src//lib/errors/duffelErrors.ts",
      "lineNumber": 26,
      "content": "PAYMENT_REQUIRED = 'payment_required',",
      "timestamp": "2025-07-06T07:13:56.822Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "src//services/duffelService.ts",
      "lineNumber": 60,
      "content": "payment_required_by?: string;",
      "timestamp": "2025-07-06T07:13:56.822Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "supabase/functions//form-schema-validator/index.ts",
      "lineNumber": 351,
      "content": "if (ruleData.payment_fields && ruleData.required_ssl) {",
      "timestamp": "2025-07-06T07:13:56.822Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "supabase/functions//auto-book/index.ts",
      "lineNumber": 645,
      "content": "console.error(`[AutoBook] CRITICAL: Refund attempt for ${paymentIntentId} failed after capture failure. Manual intervention likely required. Refund Error:`, refundErr.message);",
      "timestamp": "2025-07-06T07:13:56.822Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "supabase/functions//auto-book/index.ts",
      "lineNumber": 814,
      "content": "console.error(`[AutoBook] CRITICAL: Failed to refund Stripe payment ${trip.payment_intent_id} for trip ID ${trip.id} after a post-capture error. Manual intervention required. Refund Error:`, refundError.message);",
      "timestamp": "2025-07-06T07:13:56.822Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "supabase/functions//lib/duffelService.ts",
      "lineNumber": 47,
      "content": "payment_required_by: string | null;",
      "timestamp": "2025-07-06T07:13:56.822Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "supabase/functions//lib/duffel.ts",
      "lineNumber": 29,
      "content": "payment_required_by: string | null;",
      "timestamp": "2025-07-06T07:13:56.822Z"
    },
    {
      "category": "auto-booking",
      "priority": "high",
      "pattern": "payment.*required",
      "filePath": "supabase/functions//_shared/form-config-kms.ts",
      "lineNumber": 677,
      "content": "details: { requirement: 'payment_field_required' }",
      "timestamp": "2025-07-06T07:13:56.822Z"
    }
  ]
}