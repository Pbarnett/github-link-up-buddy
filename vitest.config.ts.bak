import { defineConfig } from 'vitest/config'
import path from 'path'
import { loadEnv } from 'vite'

export default defineConfig({
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src'),
      '@shared': path.resolve(__dirname, './packages/shared')
    },
  },
  test: {
    globals: true,
    environment: 'jsdom',
    unstubGlobals: true, // Ensure globals are properly cleaned up
    // Configure JSDOM environment with modern browser features
    environmentOptions: {
      jsdom: {
        url: 'https://localhost:3000',
        pretendToBeVisual: true,
        resources: 'usable',
        runScripts: 'outside-only'
      }
    },
    testTimeout: 10000,  // Reduce timeout to 10 seconds
    hookTimeout: 15000,  // Reduce hook timeout to 15 seconds
    // Modern Vitest features
    isolate: true,       // Ensure test isolation (default but explicit)
    pool: 'forks',       // Use forks for better isolation
    poolOptions: {
      forks: {
        singleFork: false  // Allow parallel execution
      }
    },
    env: {
      ...loadEnv('test', process.cwd(), ''),
      SUPABASE_URL: 'http://localhost:54321',
      SUPABASE_ANON_KEY: 'local-test-anon-key',
      VITE_LD_CLIENT_ID: 'test-client-id',  // Add LaunchDarkly test client ID
      VITE_GOOGLE_CLIENT_ID: 'test-google-client-id.apps.googleusercontent.com',
      NODE_ENV: 'test',
      VITEST: 'true'
    },
setupFiles: ['./src/tests/setupTests.ts', './vitest.setup.ts'],
    exclude: [
      'tests/auth/**',     // Playwright auth tests
      'tests/e2e/**',      // Playwright
      'playwright/**',     // any other PW dirs
      '**/*.pw.ts',        // if you suffix PW files
      '**/*.e2e.ts',       // e2e test files
      '**/*.spec.ts',      // Playwright spec files
      '**/node_modules/**'
    ],
    coverage: {
      provider: 'v8',
      statements: 90,
      branches: 85,
      functions: 90,
      lines: 90,
      perFile: false,  // Global thresholds only
      reporter: ['text', 'json', 'html'],
      reportsDirectory: './coverage',
      exclude: [
        'coverage/**',
        'dist/**',
        '**/node_modules/**',
        '**/[.]**',
        '**/*.d.ts',
        '**/virtual:*',
        '**/__tests__/**',
        '**/*.test.{ts,tsx,js,jsx}',
        '**/*.spec.{ts,tsx,js,jsx}',
        '**/vitest.config.*',
        '**/playwright.config.*'
      ]
    },
    // Modern reporters for better CI/CD integration
    reporters: process.env.CI 
      ? ['default', 'junit', 'json']
      : ['default', 'verbose'],
    outputFile: process.env.CI ? {
      junit: './test-results/junit.xml',
      json: './test-results/results.json'
    } : undefined,
    // Modern projects configuration
    projects: [
      // Unit tests - Fast execution
      {
        name: 'unit',
        root: '.',
        test: {
          environment: 'jsdom',
          include: [
            'src/**/*.test.{ts,tsx}',
            'src/**/__tests__/**/*.{ts,tsx}'
          ],
          exclude: [
            'src/tests/integration/**',
            'src/tests/auth/**',
            '**/*.e2e.*'
          ],
          setupFiles: ['./src/tests/setupTests.ts', './vitest.setup.ts'],
          globals: true,
          unstubGlobals: true,
          testTimeout: 5000,
          hookTimeout: 10000,
          pool: 'threads',
          poolOptions: {
            threads: {
              singleThread: false,
              isolate: true
            }
          }
        }
      },
      // Integration tests - More thorough
      {
        name: 'integration',
        root: '.',
        test: {
          environment: 'jsdom',
          include: [
            'src/tests/integration/**/*.test.{ts,tsx}',
            'src/tests/services/**/*.test.{ts,tsx}'
          ],
          setupFiles: ['./src/tests/setupTests.ts', './vitest.setup.ts'],
          globals: true,
          unstubGlobals: true,
          testTimeout: 15000,
          hookTimeout: 20000,
          pool: 'forks',
          poolOptions: {
            forks: {
              singleFork: false,
              isolate: true
            }
          }
        }
      },
      // Edge functions - Node environment
      {
        name: 'edge',
        root: '.',
        test: {
          environment: 'node',
          include: [
            'supabase/functions/**/*.test.{ts,js}',
            'tests/edge/**/*.test.{ts,js}'
          ],
          setupFiles: ['./vitest.setup.ts'],
          globals: true,
          testTimeout: 10000,
          hookTimeout: 15000,
          pool: 'threads'
        }
      }
    ]
  }
})
